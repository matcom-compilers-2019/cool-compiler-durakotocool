.data
heap: .space 2000000
heapPointer: .word 0
newLine: .asciiz "\n"
s0: .asciiz ""
s1: .asciiz "(23,27) -  Rutime Error: A dispatch on void"
s2: .asciiz "whassup?!"
s3: .asciiz "Hi"
s4: .asciiz "(37,21) -  Rutime Error: Division by zero"
s5: .asciiz "(43,28) -  Rutime Error: A dispatch on void"
s6: .asciiz "(43,53) -  Rutime Error: A dispatch on void"
s7: .asciiz "(72,5) -  Rutime Error: A case on void"
s8: .asciiz "linea 72 y columna 5 Execution of a case statement without a matching branch"
s9: .asciiz "basics:\n"
s10: .asciiz "(88,11) -  Rutime Error: A dispatch on void"
s11: .asciiz "more advanced:\n"
s12: .asciiz "(106,11) -  Rutime Error: A dispatch on void"
s13: .asciiz "bigIf\n"
s14: .asciiz "(120,8) -  Rutime Error: A dispatch on void"
s15: .asciiz "(129,19) -  Rutime Error: A dispatch on void"
s16: .asciiz "(124,21) -  Rutime Error: A dispatch on void"
s17: .asciiz "(136,21) -  Rutime Error: A dispatch on void"
s18: .asciiz "(133,19) -  Rutime Error: A dispatch on void"
s19: .asciiz "(149,19) -  Rutime Error: A dispatch on void"
s20: .asciiz "(146,21) -  Rutime Error: A dispatch on void"
s21: .asciiz "(158,21) -  Rutime Error: A dispatch on void"
s22: .asciiz "(153,19) -  Rutime Error: A dispatch on void"
s23: .asciiz "bigWhile\n"
s24: .asciiz "(166,8) -  Rutime Error: A dispatch on void"
s25: .asciiz "failed: "
s26: .asciiz "(218,8) -  Rutime Error: A dispatch on void"
s27: .asciiz "(219,8) -  Rutime Error: A dispatch on void"
s28: .asciiz "\n"
s29: .asciiz "(220,8) -  Rutime Error: A dispatch on void"
s30: .asciiz "bigMath\n"
s31: .asciiz "(231,8) -  Rutime Error: A dispatch on void"
s32: .asciiz "(237,8) -  Rutime Error: Division by zero"
s33: .asciiz "(239,8) -  Rutime Error: Division by zero"
s34: .asciiz "(239,8) -  Rutime Error: Division by zero"
s35: .asciiz "(239,8) -  Rutime Error: Division by zero"
s36: .asciiz "(239,8) -  Rutime Error: Division by zero"
s37: .asciiz "(239,8) -  Rutime Error: Division by zero"
s38: .asciiz "assertion failed: "
s39: .asciiz "(271,10) -  Rutime Error: A dispatch on void"
s40: .asciiz "(272,10) -  Rutime Error: A dispatch on void"
s41: .asciiz "\n"
s42: .asciiz "(273,10) -  Rutime Error: A dispatch on void"
s43: .asciiz "bigAssign\n"
s44: .asciiz "(284,10) -  Rutime Error: A dispatch on void"
s45: .asciiz "bigSelf\n"
s46: .asciiz "(339,10) -  Rutime Error: A dispatch on void"
s47: .asciiz "(346,9) -  Rutime Error: A dispatch on void"
s48: .asciiz "(347,9) -  Rutime Error: A dispatch on void"
s49: .asciiz "(348,20) -  Rutime Error: A dispatch on void"
s50: .asciiz "(348,31) -  Rutime Error: A dispatch on void"
s51: .asciiz "(353,9) -  Rutime Error: A dispatch on void"
s52: .asciiz "(354,9) -  Rutime Error: A dispatch on void"
s53: .asciiz "(355,16) -  Rutime Error: A dispatch on void"
s54: .asciiz "(355,27) -  Rutime Error: A dispatch on void"
s55: .asciiz "foo"
s56: .asciiz "bar"
s57: .asciiz "foobar"
s58: .asciiz "bigStrCompare\n"
s59: .asciiz "(367,10) -  Rutime Error: A dispatch on void"
s60: .asciiz "foo"
s61: .asciiz "bar"
s62: .asciiz "(375,14) - Rutime Error : Substring out of range"
s63: .asciiz "(375,14) - Rutime Error : Substring out of range"
s64: .asciiz "(375,14) -  Rutime Error: A dispatch on void"
s65: .asciiz "(376,14) - Rutime Error : Substring out of range"
s66: .asciiz "(376,14) - Rutime Error : Substring out of range"
s67: .asciiz "(376,14) -  Rutime Error: A dispatch on void"
s68: .asciiz "(382,16) - Rutime Error : Substring out of range"
s69: .asciiz "(382,16) - Rutime Error : Substring out of range"
s70: .asciiz "(382,16) -  Rutime Error: A dispatch on void"
s71: .asciiz "(382,32) - Rutime Error : Substring out of range"
s72: .asciiz "(382,32) - Rutime Error : Substring out of range"
s73: .asciiz "(382,32) -  Rutime Error: A dispatch on void"
s74: .asciiz "bigCase\n"
s75: .asciiz "(397,10) -  Rutime Error: A dispatch on void"
s76: .asciiz "(400,12) -  Rutime Error: A case on void"
s77: .asciiz "linea 400 y columna 12 Execution of a case statement without a matching branch"
s78: .asciiz "(409,12) -  Rutime Error: A case on void"
s79: .asciiz "linea 409 y columna 12 Execution of a case statement without a matching branch"
s80: .asciiz "(418,12) -  Rutime Error: A case on void"
s81: .asciiz "linea 418 y columna 12 Execution of a case statement without a matching branch"
s82: .asciiz "(427,12) -  Rutime Error: A case on void"
s83: .asciiz "linea 427 y columna 12 Execution of a case statement without a matching branch"
s84: .asciiz "(436,12) -  Rutime Error: A case on void"
s85: .asciiz "linea 436 y columna 12 Execution of a case statement without a matching branch"
s86: .asciiz "(444,12) -  Rutime Error: A case on void"
s87: .asciiz "linea 444 y columna 12 Execution of a case statement without a matching branch"
s88: .asciiz "(453,12) -  Rutime Error: A case on void"
s89: .asciiz "linea 453 y columna 12 Execution of a case statement without a matching branch"
s90: .asciiz "(462,12) -  Rutime Error: A case on void"
s91: .asciiz "linea 462 y columna 12 Execution of a case statement without a matching branch"
s92: .asciiz "(468,12) -  Rutime Error: A case on void"
s93: .asciiz "linea 468 y columna 12 Execution of a case statement without a matching branch"
s94: .asciiz "(476,12) -  Rutime Error: A case on void"
s95: .asciiz "linea 476 y columna 12 Execution of a case statement without a matching branch"
s96: .asciiz "foobar"
s97: .asciiz "foobar"
s98: .asciiz "(482,26) - Rutime Error : Substring out of range"
s99: .asciiz "(482,26) - Rutime Error : Substring out of range"
s100: .asciiz "(482,26) -  Rutime Error: A dispatch on void"
s101: .asciiz "(482,12) -  Rutime Error: A case on void"
s102: .asciiz "linea 482 y columna 12 Execution of a case statement without a matching branch"
s103: .asciiz "bigAttrAccess\n"
s104: .asciiz "(497,10) -  Rutime Error: A dispatch on void"
s105: .asciiz "(498,16) -  Rutime Error: A dispatch on void"
s106: .asciiz "(499,9) -  Rutime Error: A dispatch on void"
s107: .asciiz "(500,16) -  Rutime Error: A dispatch on void"
s108: .asciiz "hello, world\n"
s109: .asciiz "(560,13) -  Rutime Error: A dispatch on void"
s110: .asciiz "printed via dynamic dispatch\n"
s111: .asciiz "(562,10) -  Rutime Error: A dispatch on void"
s112: .asciiz "tested static dispatch and 'new IO'\n"
s113: .asciiz "(564,13) -  Rutime Error: A dispatch on void"
s114: .asciiz "an int: "
s115: .asciiz "(569,15) -  Rutime Error: A dispatch on void"
s116: .asciiz "(570,15) -  Rutime Error: A dispatch on void"
s117: .asciiz "\n"
s118: .asciiz "(571,15) -  Rutime Error: A dispatch on void"
s119: .asciiz "gonna make a Blah\n"
s120: .asciiz "(574,10) -  Rutime Error: A dispatch on void"
s121: .asciiz "gonna call doThemAll\n"
s122: .asciiz "(577,10) -  Rutime Error: A dispatch on void"
s123: .asciiz "(578,9) -  Rutime Error: A dispatch on void"
s124: .asciiz "looks ok!\n"
s125: .asciiz "(580,10) -  Rutime Error: A dispatch on void"
type_Object:
	type_Object_Length: .byte 0
	type_Object_Init: .word Object_Init
	type_Object_abort: .word Object_abort
	type_Object_type_name: .word Object_type_name
	type_Object_copy: .word Object_copy
	type_Object_count_methods: .word 4
	type_Object_parent: .word 0
	type_Object_name: .asciiz "Object"
type_void:
	type_void_Length: .byte 0
	type_void_Init: .word void_Init
	type_void_count_methods: .word 1
	type_void_parent: .word 0
	type_void_name: .asciiz "void"
type_IO:
	type_IO_Length: .byte 0
	type_IO_Init: .word IO_Init
	type_IO_abort: .word Object_abort
	type_IO_type_name: .word Object_type_name
	type_IO_copy: .word Object_copy
	type_IO_out_string: .word IO_out_string
	type_IO_out_int: .word IO_out_int
	type_IO_in_string: .word IO_in_string
	type_IO_in_int: .word IO_in_int
	type_IO_count_methods: .word 8
	type_IO_parent: .word type_Object_parent
	type_IO_name: .asciiz "IO"
type_String:
	type_String_Length: .byte 4
	type_String_Init: .word String_Init
	type_String_abort: .word Object_abort
	type_String_type_name: .word Object_type_name
	type_String_copy: .word Object_copy
	type_String_concat: .word String_concat
	type_String_lenght: .word String_lenght
	type_String_substr: .word String_substr
	type_String_count_methods: .word 7
	type_String_parent: .word type_Object_parent
	type_String_name: .asciiz "String"
type_Bool:
	type_Bool_Length: .byte 4
	type_Bool_Init: .word Bool_Init
	type_Bool_abort: .word Object_abort
	type_Bool_type_name: .word Object_type_name
	type_Bool_copy: .word Object_copy
	type_Bool_count_methods: .word 4
	type_Bool_parent: .word type_Object_parent
	type_Bool_name: .asciiz "Bool"
type_Int:
	type_Int_Length: .byte 4
	type_Int_Init: .word Int_Init
	type_Int_abort: .word Object_abort
	type_Int_type_name: .word Object_type_name
	type_Int_copy: .word Object_copy
	type_Int_count_methods: .word 4
	type_Int_parent: .word type_Object_parent
	type_Int_name: .asciiz "Int"
type_P:
	type_P_Length: .byte 4
	type_P_Init: .word P_Init
	type_P_abort: .word Object_abort
	type_P_type_name: .word Object_type_name
	type_P_copy: .word Object_copy
	type_P_count_methods: .word 4
	type_P_parent: .word type_Object_parent
	type_P_name: .asciiz "P"
type_C1:
	type_C1_Length: .byte 4
	type_C1_Init: .word C1_Init
	type_C1_abort: .word Object_abort
	type_C1_type_name: .word Object_type_name
	type_C1_copy: .word Object_copy
	type_C1_count_methods: .word 4
	type_C1_parent: .word type_P_parent
	type_C1_name: .asciiz "C1"
type_C2:
	type_C2_Length: .byte 4
	type_C2_Init: .word C2_Init
	type_C2_abort: .word Object_abort
	type_C2_type_name: .word Object_type_name
	type_C2_copy: .word Object_copy
	type_C2_getX: .word C2_getX
	type_C2_setX: .word C2_setX
	type_C2_count_methods: .word 6
	type_C2_parent: .word type_P_parent
	type_C2_name: .asciiz "C2"
type_Blah:
	type_Blah_Length: .byte 32
	type_Blah_Init: .word Blah_Init
	type_Blah_abort: .word Object_abort
	type_Blah_type_name: .word Object_type_name
	type_Blah_copy: .word Object_copy
	type_Blah_tiny: .word Blah_tiny
	type_Blah_add: .word Blah_add
	type_Blah_compare: .word Blah_compare
	type_Blah_compareEq: .word Blah_compareEq
	type_Blah_isv: .word Blah_isv
	type_Blah_divByZero: .word Blah_divByZero
	type_Blah_cmp: .word Blah_cmp
	type_Blah_ng: .word Blah_ng
	type_Blah_caller: .word Blah_caller
	type_Blah_callee: .word Blah_callee
	type_Blah_get_t: .word Blah_get_t
	type_Blah_useLet: .word Blah_useLet
	type_Blah_useIf: .word Blah_useIf
	type_Blah_useWhile: .word Blah_useWhile
	type_Blah_useCase: .word Blah_useCase
	type_Blah_useNew: .word Blah_useNew
	type_Blah_doThemAll: .word Blah_doThemAll
	type_Blah_bigIf: .word Blah_bigIf
	type_Blah_bigWhile: .word Blah_bigWhile
	type_Blah_bail: .word Blah_bail
	type_Blah_bigMath: .word Blah_bigMath
	type_Blah_assert: .word Blah_assert
	type_Blah_bigAssign: .word Blah_bigAssign
	type_Blah_setI: .word Blah_setI
	type_Blah_getI: .word Blah_getI
	type_Blah_bigSelf: .word Blah_bigSelf
	type_Blah_bigStrCompare: .word Blah_bigStrCompare
	type_Blah_bigCase: .word Blah_bigCase
	type_Blah_bigAttrAccess: .word Blah_bigAttrAccess
	type_Blah_count_methods: .word 33
	type_Blah_parent: .word type_Object_parent
	type_Blah_name: .asciiz "Blah"
type_A:
	type_A_Length: .byte 0
	type_A_Init: .word A_Init
	type_A_abort: .word Object_abort
	type_A_type_name: .word Object_type_name
	type_A_copy: .word Object_copy
	type_A_e: .word A_e
	type_A_f: .word A_f
	type_A_g: .word A_g
	type_A_i: .word A_i
	type_A_j: .word A_j
	type_A_count_methods: .word 9
	type_A_parent: .word type_Object_parent
	type_A_name: .asciiz "A"
type_B:
	type_B_Length: .byte 0
	type_B_Init: .word B_Init
	type_B_abort: .word Object_abort
	type_B_type_name: .word Object_type_name
	type_B_copy: .word Object_copy
	type_B_e: .word B_e
	type_B_f: .word A_f
	type_B_g: .word B_g
	type_B_i: .word A_i
	type_B_j: .word A_j
	type_B_h: .word B_h
	type_B_k: .word B_k
	type_B_count_methods: .word 11
	type_B_parent: .word type_A_parent
	type_B_name: .asciiz "B"
type_C:
	type_C_Length: .byte 0
	type_C_Init: .word C_Init
	type_C_abort: .word Object_abort
	type_C_type_name: .word Object_type_name
	type_C_copy: .word Object_copy
	type_C_e: .word C_e
	type_C_f: .word A_f
	type_C_g: .word B_g
	type_C_i: .word C_i
	type_C_j: .word A_j
	type_C_h: .word C_h
	type_C_k: .word B_k
	type_C_ell: .word C_ell
	type_C_count_methods: .word 12
	type_C_parent: .word type_B_parent
	type_C_name: .asciiz "C"
type_Base:
	type_Base_Length: .byte 12
	type_Base_Init: .word Base_Init
	type_Base_abort: .word Object_abort
	type_Base_type_name: .word Object_type_name
	type_Base_copy: .word Object_copy
	type_Base_count_methods: .word 4
	type_Base_parent: .word type_Object_parent
	type_Base_name: .asciiz "Base"
type_Grandparent:
	type_Grandparent_Length: .byte 24
	type_Grandparent_Init: .word Grandparent_Init
	type_Grandparent_abort: .word Object_abort
	type_Grandparent_type_name: .word Object_type_name
	type_Grandparent_copy: .word Object_copy
	type_Grandparent_count_methods: .word 4
	type_Grandparent_parent: .word type_Base_parent
	type_Grandparent_name: .asciiz "Grandparent"
type_Parent:
	type_Parent_Length: .byte 36
	type_Parent_Init: .word Parent_Init
	type_Parent_abort: .word Object_abort
	type_Parent_type_name: .word Object_type_name
	type_Parent_copy: .word Object_copy
	type_Parent_count_methods: .word 4
	type_Parent_parent: .word type_Grandparent_parent
	type_Parent_name: .asciiz "Parent"
type_Child:
	type_Child_Length: .byte 52
	type_Child_Init: .word Child_Init
	type_Child_abort: .word Object_abort
	type_Child_type_name: .word Object_type_name
	type_Child_copy: .word Object_copy
	type_Child_count_methods: .word 4
	type_Child_parent: .word type_Parent_parent
	type_Child_name: .asciiz "Child"
type_Main:
	type_Main_Length: .byte 0
	type_Main_Init: .word Main_Init
	type_Main_abort: .word Object_abort
	type_Main_type_name: .word Object_type_name
	type_Main_copy: .word Object_copy
	type_Main_main: .word Main_main
	type_Main_count_methods: .word 5
	type_Main_parent: .word type_Object_parent
	type_Main_name: .asciiz "Main"
.text
##-----functions-----


entry:
sub $sp, $sp, 20
sw $ra, 16($sp)
li $t0, 0
sw $t0, 12($sp)		##_value0
sw $t0, 8($sp)		##_Type1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
jal Main_Init		##_value0=CALL Main_Init
sw $v0, 12($sp)
lw $t0, 12($sp)		##_Type1= TYPEOF _value0
sw $t0, 8($sp)
lw $t0, 8($sp)		##_value2=VCALL _Type1 Main_main
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 4($sp)
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 16($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 20
li $v0, 10
syscall


Object_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE Object
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Object_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


void_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE void
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_void_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


IO_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE IO
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_IO_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


String_Init:
sub $sp, $sp, 12
sw $ra, 8($sp)
li $t0, 0
sw $t0, 4($sp)		##self
sw $t0, 0($sp)		##_value1
la $t0, heap		##self=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
la $t0, s0		##_value1= LOAD s0
sw $t0, 0($sp)
lw $t0, 4($sp)		##SETATTR self String_x _value1
addi $t0, $t0, 8
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 8($sp)		##return self
lw $v0, 4($sp)
addi $sp, $sp 12
jr $ra


Bool_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR self Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


Int_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR self Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


P_Init:
sub $sp, $sp, 12
sw $ra, 8($sp)
li $t0, 0
sw $t0, 4($sp)		##self
sw $t0, 0($sp)		##_value1
la $t0, heap		##self=ALLOCATE P
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_P_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value1 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 4($sp)		##SETATTR self P_x _value1
addi $t0, $t0, 8
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 8($sp)		##return self
lw $v0, 4($sp)
addi $sp, $sp 12
jr $ra


C1_Init:
sub $sp, $sp, 12
sw $ra, 8($sp)
li $t0, 0
sw $t0, 4($sp)		##self
sw $t0, 0($sp)		##_value1
la $t0, heap		##self=ALLOCATE C1
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_C1_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value1 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 4($sp)		##SETATTR self P_x _value1
addi $t0, $t0, 8
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 8($sp)		##return self
lw $v0, 4($sp)
addi $sp, $sp 12
jr $ra


C2_Init:
sub $sp, $sp, 12
sw $ra, 8($sp)
li $t0, 0
sw $t0, 4($sp)		##self
sw $t0, 0($sp)		##_value1
la $t0, heap		##self=ALLOCATE C2
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_C2_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value1 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 4($sp)		##SETATTR self P_x _value1
addi $t0, $t0, 8
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 8($sp)		##return self
lw $v0, 4($sp)
addi $sp, $sp 12
jr $ra


Blah_Init:
sub $sp, $sp, 64
sw $ra, 60($sp)
li $t0, 0
sw $t0, 56($sp)		##self
sw $t0, 52($sp)		##_value1
sw $t0, 48($sp)		##_value2
sw $t0, 44($sp)		##_value3
sw $t0, 40($sp)		##_Type7
sw $t0, 36($sp)		##_value5
sw $t0, 32($sp)		##_value6
sw $t0, 28($sp)		##_Type14
sw $t0, 24($sp)		##_isVoid15
sw $t0, 20($sp)		##_value9
sw $t0, 16($sp)		##_value10
sw $t0, 12($sp)		##_value11
sw $t0, 8($sp)		##_value12
sw $t0, 4($sp)		##_value13
sw $t0, 0($sp)		##_value14
la $t0, heap		##self=ALLOCATE Blah
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Blah_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 8
sw $t2, ($t0)
addi $t1, $t1, 40
sw $t1, heapPointer
sw $v0, 56($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 52($sp)
lw $t0, 56($sp)		##SETATTR self Blah_i _value1
addi $t0, $t0, 8
lw $t1, 52($sp)
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 48($sp)
lw $t0, 56($sp)		##SETATTR self Blah_b _value2
addi $t0, $t0, 12
lw $t1, 48($sp)
sw $t1, ($t0)
la $t0, heap		##_value3=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 44($sp)
lw $t0, 56($sp)		##SETATTR self Blah_s _value3
addi $t0, $t0, 16
lw $t1, 44($sp)
sw $t1, ($t0)
lw $t0, 56($sp)		##_Type7= TYPEOF self
sw $t0, 40($sp)
lw $t0, 56($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 40($sp)		##_value5=VCALL _Type7 Blah_tiny
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 36($sp)
lw $t0, 56($sp)		##SETATTR self Blah_j _value5
addi $t0, $t0, 20
lw $t1, 36($sp)
sw $t1, ($t0)
la $t0, heap		##_value6=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 32($sp)
lw $t0, 32($sp)		##SETATTR _value6 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 56($sp)		##SETATTR self Blah_c _value6
addi $t0, $t0, 24
lw $t1, 32($sp)
sw $t1, ($t0)
lw $t0, 56($sp)		##_Type14= TYPEOF self
sw $t0, 28($sp)
lw $t1, 28($sp)		##_isVoid15=_Type14!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 24($sp)
lw $t1, 24($sp)		##if _isVoid15 goto Continue_16_Blah_Init
beq $t1, 1, Continue_16_Blah_Init
la $t0, s1		##_value9= LOAD s1
sw $t0, 20($sp)
lw $a0, 20($sp)		##out_str _value9
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_16_Blah_Init:		##Continue_16_Blah_Init:
lw $t0, 56($sp)		##arg self
sw $t0, -8($sp)
jal Blah_add		##_value10=CALL Blah_add
sw $v0, 16($sp)
la $t0, s2		##_value11= LOAD s2
sw $t0, 12($sp)
la $t0, heap		##_value12=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value12 String_x _value11
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
lw $t0, 56($sp)		##SETATTR self Blah_t _value12
addi $t0, $t0, 28
lw $t1, 8($sp)
sw $t1, ($t0)
jal IO_Init		##_value13=CALL IO_Init
sw $v0, 4($sp)
lw $t0, 56($sp)		##SETATTR self Blah_io _value13
addi $t0, $t0, 32
lw $t1, 4($sp)
sw $t1, ($t0)
jal void_Init		##_value14=CALL void_Init
sw $v0, 0($sp)
lw $t0, 56($sp)		##SETATTR self Blah_void _value14
addi $t0, $t0, 36
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 60($sp)		##return self
lw $v0, 56($sp)
addi $sp, $sp 64
jr $ra


A_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE A
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_A_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


B_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE B
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_B_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


C_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE C
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_C_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


Base_Init:
sub $sp, $sp, 20
sw $ra, 16($sp)
li $t0, 0
sw $t0, 12($sp)		##self
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
la $t0, heap		##self=ALLOCATE Base
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Base_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 3
sw $t2, ($t0)
addi $t1, $t1, 20
sw $t1, heapPointer
sw $v0, 12($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 12($sp)		##SETATTR self Base_a _value1
addi $t0, $t0, 8
lw $t1, 8($sp)
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
lw $t0, 12($sp)		##SETATTR self Base_b _value2
addi $t0, $t0, 12
lw $t1, 4($sp)
sw $t1, ($t0)
la $t0, heap		##_value3=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 12($sp)		##SETATTR self Base_c _value3
addi $t0, $t0, 16
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 16($sp)		##return self
lw $v0, 12($sp)
addi $sp, $sp 20
jr $ra


Grandparent_Init:
sub $sp, $sp, 32
sw $ra, 28($sp)
li $t0, 0
sw $t0, 24($sp)		##self
sw $t0, 20($sp)		##_value1
sw $t0, 16($sp)		##_value2
sw $t0, 12($sp)		##_value3
sw $t0, 8($sp)		##_value4
sw $t0, 4($sp)		##_value5
sw $t0, 0($sp)		##_value6
la $t0, heap		##self=ALLOCATE Grandparent
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Grandparent_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 6
sw $t2, ($t0)
addi $t1, $t1, 32
sw $t1, heapPointer
sw $v0, 24($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 20($sp)
lw $t0, 24($sp)		##SETATTR self Base_a _value1
addi $t0, $t0, 8
lw $t1, 20($sp)
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 24($sp)		##SETATTR self Base_b _value2
addi $t0, $t0, 12
lw $t1, 16($sp)
sw $t1, ($t0)
la $t0, heap		##_value3=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 24($sp)		##SETATTR self Base_c _value3
addi $t0, $t0, 16
lw $t1, 12($sp)
sw $t1, ($t0)
jal void_Init		##_value4=CALL void_Init
sw $v0, 8($sp)
lw $t0, 24($sp)		##SETATTR self Grandparent_d _value4
addi $t0, $t0, 20
lw $t1, 8($sp)
sw $t1, ($t0)
la $t0, heap		##_value5=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
lw $t0, 24($sp)		##SETATTR self Grandparent_e _value5
addi $t0, $t0, 24
lw $t1, 4($sp)
sw $t1, ($t0)
jal void_Init		##_value6=CALL void_Init
sw $v0, 0($sp)
lw $t0, 24($sp)		##SETATTR self Grandparent_f _value6
addi $t0, $t0, 28
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 28($sp)		##return self
lw $v0, 24($sp)
addi $sp, $sp 32
jr $ra


Parent_Init:
sub $sp, $sp, 44
sw $ra, 40($sp)
li $t0, 0
sw $t0, 36($sp)		##self
sw $t0, 32($sp)		##_value1
sw $t0, 28($sp)		##_value2
sw $t0, 24($sp)		##_value3
sw $t0, 20($sp)		##_value4
sw $t0, 16($sp)		##_value5
sw $t0, 12($sp)		##_value6
sw $t0, 8($sp)		##_value7
sw $t0, 4($sp)		##_value8
sw $t0, 0($sp)		##_value9
la $t0, heap		##self=ALLOCATE Parent
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Parent_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 9
sw $t2, ($t0)
addi $t1, $t1, 44
sw $t1, heapPointer
sw $v0, 36($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 32($sp)
lw $t0, 36($sp)		##SETATTR self Base_a _value1
addi $t0, $t0, 8
lw $t1, 32($sp)
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 28($sp)
lw $t0, 36($sp)		##SETATTR self Base_b _value2
addi $t0, $t0, 12
lw $t1, 28($sp)
sw $t1, ($t0)
la $t0, heap		##_value3=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 36($sp)		##SETATTR self Base_c _value3
addi $t0, $t0, 16
lw $t1, 24($sp)
sw $t1, ($t0)
jal void_Init		##_value4=CALL void_Init
sw $v0, 20($sp)
lw $t0, 36($sp)		##SETATTR self Grandparent_d _value4
addi $t0, $t0, 20
lw $t1, 20($sp)
sw $t1, ($t0)
la $t0, heap		##_value5=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 36($sp)		##SETATTR self Grandparent_e _value5
addi $t0, $t0, 24
lw $t1, 16($sp)
sw $t1, ($t0)
jal void_Init		##_value6=CALL void_Init
sw $v0, 12($sp)
lw $t0, 36($sp)		##SETATTR self Grandparent_f _value6
addi $t0, $t0, 28
lw $t1, 12($sp)
sw $t1, ($t0)
jal void_Init		##_value7=CALL void_Init
sw $v0, 8($sp)
lw $t0, 36($sp)		##SETATTR self Parent_g _value7
addi $t0, $t0, 32
lw $t1, 8($sp)
sw $t1, ($t0)
la $t0, heap		##_value8=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
lw $t0, 36($sp)		##SETATTR self Parent_h _value8
addi $t0, $t0, 36
lw $t1, 4($sp)
sw $t1, ($t0)
la $t0, heap		##_value9=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 36($sp)		##SETATTR self Parent_i _value9
addi $t0, $t0, 40
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 40($sp)		##return self
lw $v0, 36($sp)
addi $sp, $sp 44
jr $ra


Child_Init:
sub $sp, $sp, 60
sw $ra, 56($sp)
li $t0, 0
sw $t0, 52($sp)		##self
sw $t0, 48($sp)		##_value1
sw $t0, 44($sp)		##_value2
sw $t0, 40($sp)		##_value3
sw $t0, 36($sp)		##_value4
sw $t0, 32($sp)		##_value5
sw $t0, 28($sp)		##_value6
sw $t0, 24($sp)		##_value7
sw $t0, 20($sp)		##_value8
sw $t0, 16($sp)		##_value9
sw $t0, 12($sp)		##_value10
sw $t0, 8($sp)		##_value11
sw $t0, 4($sp)		##_value12
sw $t0, 0($sp)		##_value13
la $t0, heap		##self=ALLOCATE Child
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Child_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 13
sw $t2, ($t0)
addi $t1, $t1, 60
sw $t1, heapPointer
sw $v0, 52($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 48($sp)
lw $t0, 52($sp)		##SETATTR self Base_a _value1
addi $t0, $t0, 8
lw $t1, 48($sp)
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 44($sp)
lw $t0, 52($sp)		##SETATTR self Base_b _value2
addi $t0, $t0, 12
lw $t1, 44($sp)
sw $t1, ($t0)
la $t0, heap		##_value3=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 40($sp)
lw $t0, 52($sp)		##SETATTR self Base_c _value3
addi $t0, $t0, 16
lw $t1, 40($sp)
sw $t1, ($t0)
jal void_Init		##_value4=CALL void_Init
sw $v0, 36($sp)
lw $t0, 52($sp)		##SETATTR self Grandparent_d _value4
addi $t0, $t0, 20
lw $t1, 36($sp)
sw $t1, ($t0)
la $t0, heap		##_value5=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 32($sp)
lw $t0, 52($sp)		##SETATTR self Grandparent_e _value5
addi $t0, $t0, 24
lw $t1, 32($sp)
sw $t1, ($t0)
jal void_Init		##_value6=CALL void_Init
sw $v0, 28($sp)
lw $t0, 52($sp)		##SETATTR self Grandparent_f _value6
addi $t0, $t0, 28
lw $t1, 28($sp)
sw $t1, ($t0)
jal void_Init		##_value7=CALL void_Init
sw $v0, 24($sp)
lw $t0, 52($sp)		##SETATTR self Parent_g _value7
addi $t0, $t0, 32
lw $t1, 24($sp)
sw $t1, ($t0)
la $t0, heap		##_value8=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 20($sp)
lw $t0, 52($sp)		##SETATTR self Parent_h _value8
addi $t0, $t0, 36
lw $t1, 20($sp)
sw $t1, ($t0)
la $t0, heap		##_value9=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 52($sp)		##SETATTR self Parent_i _value9
addi $t0, $t0, 40
lw $t1, 16($sp)
sw $t1, ($t0)
jal void_Init		##_value10=CALL void_Init
sw $v0, 12($sp)
lw $t0, 52($sp)		##SETATTR self Child_j _value10
addi $t0, $t0, 44
lw $t1, 12($sp)
sw $t1, ($t0)
jal void_Init		##_value11=CALL void_Init
sw $v0, 8($sp)
lw $t0, 52($sp)		##SETATTR self Child_k _value11
addi $t0, $t0, 48
lw $t1, 8($sp)
sw $t1, ($t0)
jal void_Init		##_value12=CALL void_Init
sw $v0, 4($sp)
lw $t0, 52($sp)		##SETATTR self Child_l _value12
addi $t0, $t0, 52
lw $t1, 4($sp)
sw $t1, ($t0)
la $t0, heap		##_value13=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 52($sp)		##SETATTR self Child_m _value13
addi $t0, $t0, 56
lw $t1, 0($sp)
sw $t1, ($t0)
lw $ra, 56($sp)		##return self
lw $v0, 52($sp)
addi $sp, $sp 60
jr $ra


Main_Init:
sub $sp, $sp, 8
sw $ra, 4($sp)
li $t0, 0
sw $t0, 0($sp)		##self
la $t0, heap		##self=ALLOCATE Main
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Main_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 0
sw $t2, ($t0)
addi $t1, $t1, 8
sw $t1, heapPointer
sw $v0, 0($sp)
lw $ra, 4($sp)		##return self
lw $v0, 0($sp)
addi $sp, $sp 8
jr $ra


Object_abort:
sub $sp, $sp, 8
sw $ra, 4($sp)
##		0($sp)	self
li $t0, 0
eret		##halt
lw $ra, 4($sp)		##return
li $v0, 0
addi $sp, $sp 8
jr $ra


Object_type_name:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
li $t0, 0
sw $t0, 4($sp)		##x
sw $t0, 0($sp)		##_value1
lw $t0, 8($sp)		##x= type_name self
lw $t0, ($t0)
sw $t0, 4($sp)
la $t0, heap		##_value1=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value1 String_x x
addi $t0, $t0, 8
lw $t1, 4($sp)
sw $t1, ($t0)
lw $ra, 12($sp)		##return _value1
lw $v0, 0($sp)
addi $sp, $sp 16
jr $ra


Object_copy:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##x
lw $t0, 4($sp)		##x= copy self
la $t1, heap
lw $t2, heapPointer
add $t1, $t1, $t2
move $v0, $t1
lw $t2, ($t1)
sw $t2, ($t0)
add $t0,$t0,4
add $t1,$t1,4
lw $t2, ($t1)
sw $t2, ($t0)
move $t3, $t2
loopCopy:
beqz $t3,endCopy
add $t0,$t0,4
add $t1,$t1,4
lw $t2, ($t1)
sw $t2, ($t0)
sub $t3, $t3, 1
j loopCopy
endCopy: 
sw $v0, 0($sp)
lw $ra, 8($sp)		##return x
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


IO_out_string:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
##		4($sp)	x
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 4($sp)		##_value0=GETATTR x String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 0($sp)
lw $a0, 0($sp)		##out_str _value0
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
lw $ra, 12($sp)		##return self
lw $v0, 8($sp)
addi $sp, $sp 16
jr $ra


IO_out_int:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
##		4($sp)	x
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 4($sp)		##_value0=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 0($sp)
lw $a0, 0($sp)		##out_int _value0
li $v0, 1
syscall
la $a0, newLine
li $v0, 4
syscall
lw $ra, 12($sp)		##return self
lw $v0, 8($sp)
addi $sp, $sp 16
jr $ra


IO_in_string:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
li $t0, 0
sw $t0, 4($sp)		##x
sw $t0, 0($sp)		##_value1
li $v0, 8		##x=in_str
la $a0, heap
lw $t0, heapPointer
add $a0, $a0, $t0
li $a1, 1025
syscall
rnw:
lb $t1, heap($t0)
beq $t1,10,endrnw
beqz $t1,endrnw
add $t0, $t0, 1
j rnw
endrnw:
sb $zero, heap($t0)
add $t0, $t0, 1
sw $t0, heapPointer
sw $a0, 4($sp)
la $t0, heap		##_value1=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value1 String_x x
addi $t0, $t0, 8
lw $t1, 4($sp)
sw $t1, ($t0)
lw $ra, 12($sp)		##return _value1
lw $v0, 0($sp)
addi $sp, $sp 16
jr $ra


IO_in_int:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
li $t0, 0
sw $t0, 4($sp)		##x
sw $t0, 0($sp)		##_value1
li $v0, 5		##x=in_int
syscall
sw $v0, 4($sp)
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value1 Int_x x
addi $t0, $t0, 8
lw $t1, 4($sp)
sw $t1, ($t0)
lw $ra, 12($sp)		##return _value1
lw $v0, 0($sp)
addi $sp, $sp 16
jr $ra


String_concat:
sub $sp, $sp, 28
sw $ra, 24($sp)
##		20($sp)	self
##		16($sp)	x
li $t0, 0
sw $t0, 12($sp)		##value
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
lw $t0, 20($sp)		##_value1=GETATTR self String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 16($sp)		##_value2=GETATTR x String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t0, 8($sp)		##value = CONCAT _value1 _value2
lw $t1, 4($sp)
jal concatFunctionStart
sw $v0, 12($sp)
la $t0, heap		##_value3=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 String_x value
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
lw $ra, 24($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 28
jr $ra


String_lenght:
sub $sp, $sp, 20
sw $ra, 16($sp)
##		12($sp)	self
li $t0, 0
sw $t0, 8($sp)		##value
sw $t0, 4($sp)		##_value1
sw $t0, 0($sp)		##_value2
lw $t0, 12($sp)		##_value1=GETATTR self String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t0, 4($sp)		##value = LENGHT _value1
jal lengthFunctionStart
sw $v0, 8($sp)
la $t0, heap		##_value2=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value2 Int_x value
addi $t0, $t0, 8
lw $t1, 8($sp)
sw $t1, ($t0)
lw $ra, 16($sp)		##return _value2
lw $v0, 0($sp)
addi $sp, $sp 20
jr $ra


String_substr:
sub $sp, $sp, 36
sw $ra, 32($sp)
##		28($sp)	self
##		24($sp)	i
##		20($sp)	l
li $t0, 0
sw $t0, 16($sp)		##value
sw $t0, 12($sp)		##_value1
sw $t0, 8($sp)		##_value2
sw $t0, 4($sp)		##_value3
sw $t0, 0($sp)		##_value4
lw $t0, 28($sp)		##_value1=GETATTR self String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 12($sp)
lw $t0, 24($sp)		##_value2=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 20($sp)		##_value3=GETATTR l Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t0, 12($sp)		##value = SUBSTRING _value1 _value2 _value3
lw $t1, 8($sp)
lw $t2, 4($sp)
jal substrFunctionStart
sw $v0, 16($sp)
la $t0, heap		##_value4=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value4 String_x value
addi $t0, $t0, 8
lw $t1, 16($sp)
sw $t1, ($t0)
lw $ra, 32($sp)		##return _value4
lw $v0, 0($sp)
addi $sp, $sp 36
jr $ra


C2_getX:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 4($sp)		##_value0=GETATTR self P_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 0($sp)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


C2_setX:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
##		4($sp)	i
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 8($sp)		##SETATTR self P_x i
addi $t0, $t0, 8
lw $t1, 4($sp)
sw $t1, ($t0)
lw $t0, 8($sp)		##_value0=GETATTR self P_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 0($sp)
lw $ra, 12($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 16
jr $ra


Blah_tiny:
sub $sp, $sp, 24
sw $ra, 20($sp)
##		16($sp)	self
li $t0, 0
sw $t0, 12($sp)		##_value0
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
la $t0, s3		##_value0= LOAD s3
sw $t0, 12($sp)
la $t0, heap		##_value1=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value1 String_x _value0
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
lw $t0, 4($sp)		##SETATTR _value2 Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 20($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 24
jr $ra


Blah_add:
sub $sp, $sp, 32
sw $ra, 28($sp)
##		24($sp)	self
li $t0, 0
sw $t0, 20($sp)		##_valueNum0
sw $t0, 16($sp)		##_value1
sw $t0, 12($sp)		##_value2
sw $t0, 8($sp)		##_value3
sw $t0, 4($sp)		##_value4
sw $t0, 0($sp)		##_value5
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 16($sp)		##SETATTR _value1 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value2 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 16($sp)		##_value3=GETATTR _value1 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 12($sp)		##_value4=GETATTR _value2 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 8($sp)		##_valueNum0=_value3+_value4
lw $t2, 4($sp)
add $t0, $t1, $t2
sw $t0, 20($sp)
la $t0, heap		##_value5=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value5 Int_x _valueNum0
addi $t0, $t0, 8
lw $t1, 20($sp)
sw $t1, ($t0)
lw $ra, 28($sp)		##return _value5
lw $v0, 0($sp)
addi $sp, $sp 32
jr $ra


Blah_compare:
sub $sp, $sp, 32
sw $ra, 28($sp)
##		24($sp)	self
li $t0, 0
sw $t0, 20($sp)		##_value0
sw $t0, 16($sp)		##_value1
sw $t0, 12($sp)		##_value2
sw $t0, 8($sp)		##_value3
sw $t0, 4($sp)		##_value4
sw $t0, 0($sp)		##_value5
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 16($sp)		##SETATTR _value1 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value2 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 16($sp)		##_value3=GETATTR _value1 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 12($sp)		##_value4=GETATTR _value2 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 8($sp)		##_value0=_value3<_value4
lw $t2, 4($sp)
slt $t0, $t1, $t2
sw $t0, 20($sp)
la $t0, heap		##_value5=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value5 Bool_x _value0
addi $t0, $t0, 8
lw $t1, 20($sp)
sw $t1, ($t0)
lw $ra, 28($sp)		##return _value5
lw $v0, 0($sp)
addi $sp, $sp 32
jr $ra


Blah_compareEq:
sub $sp, $sp, 32
sw $ra, 28($sp)
##		24($sp)	self
li $t0, 0
sw $t0, 20($sp)		##_value0
sw $t0, 16($sp)		##_value1
sw $t0, 12($sp)		##_value2
sw $t0, 8($sp)		##_value3
sw $t0, 4($sp)		##_value4
sw $t0, 0($sp)		##_value5
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 16($sp)		##SETATTR _value1 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value2 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 16($sp)		##_value3=GETATTR _value1 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 12($sp)		##_value4=GETATTR _value2 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 8($sp)		##_value0=_value3==_value4
lw $t2, 4($sp)
seq $t0, $t1, $t2
sw $t0, 20($sp)
la $t0, heap		##_value5=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value5 Bool_x _value0
addi $t0, $t0, 8
lw $t1, 20($sp)
sw $t1, ($t0)
lw $ra, 28($sp)		##return _value5
lw $v0, 0($sp)
addi $sp, $sp 32
jr $ra


Blah_isv:
sub $sp, $sp, 24
sw $ra, 20($sp)
##		16($sp)	self
li $t0, 0
sw $t0, 12($sp)		##_value0
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_TypeValue2
sw $t0, 0($sp)		##_value3
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value1 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 8($sp)		##_TypeValue2= TYPEOF _value1
sw $t0, 4($sp)
lw $t1, 4($sp)		##_value0=_TypeValue2==void
lw $t1, ($t1)
la $t2, type_void_name
seq $t0, $t1, $t2
sw $t0, 12($sp)
la $t0, heap		##_value3=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 Bool_x _value0
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
lw $ra, 20($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 24
jr $ra


Blah_divByZero:
sub $sp, $sp, 40
sw $ra, 36($sp)
##		32($sp)	self
li $t0, 0
sw $t0, 28($sp)		##_valueNum0
sw $t0, 24($sp)		##_value1
sw $t0, 20($sp)		##_value2
sw $t0, 16($sp)		##_value3
sw $t0, 12($sp)		##_value4
sw $t0, 8($sp)		##_isZero5
sw $t0, 4($sp)		##_value6
sw $t0, 0($sp)		##_value7
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value1 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 20($sp)
lw $t0, 20($sp)		##SETATTR _value2 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 24($sp)		##_value3=GETATTR _value1 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t0, 20($sp)		##_value4=GETATTR _value2 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 12($sp)
lw $t1, 12($sp)		##_isZero5=_value4!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 8($sp)
lw $t1, 8($sp)		##if _isZero5 goto Continue_7_Blah_divByZero
beq $t1, 1, Continue_7_Blah_divByZero
la $t0, s4		##_value6= LOAD s4
sw $t0, 4($sp)
lw $a0, 4($sp)		##out_str _value6
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_7_Blah_divByZero:		##Continue_7_Blah_divByZero:
lw $t1, 16($sp)		##_valueNum0=_value3/_value4
lw $t2, 12($sp)
div $t0, $t1, $t2
sw $t0, 28($sp)
la $t0, heap		##_value7=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value7 Int_x _valueNum0
addi $t0, $t0, 8
lw $t1, 28($sp)
sw $t1, ($t0)
lw $ra, 36($sp)		##return _value7
lw $v0, 0($sp)
addi $sp, $sp 40
jr $ra


Blah_cmp:
sub $sp, $sp, 24
sw $ra, 20($sp)
##		16($sp)	self
li $t0, 0
sw $t0, 12($sp)		##_valueNum0
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
la $t0, heap		##_value1=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value1 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 8($sp)		##_value2=GETATTR _value1 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
li $t1, 1		##_valueNum0=1-_value2
lw $t2, 4($sp)
sub $t0, $t1, $t2
sw $t0, 12($sp)
la $t0, heap		##_value3=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 Bool_x _valueNum0
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
lw $ra, 20($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 24
jr $ra


Blah_ng:
sub $sp, $sp, 24
sw $ra, 20($sp)
##		16($sp)	self
li $t0, 0
sw $t0, 12($sp)		##_value0
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value1 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 8($sp)		##_value2=GETATTR _value1 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 4($sp)		##_value0=-_value2
neg $t0, $t1
sw $t0, 12($sp)
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 Int_x _value0
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
lw $ra, 20($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 24
jr $ra


Blah_caller:
sub $sp, $sp, 72
sw $ra, 68($sp)
##		64($sp)	self
li $t0, 0
sw $t0, 60($sp)		##_valueNum0
sw $t0, 56($sp)		##_value1
sw $t0, 52($sp)		##_value2
sw $t0, 48($sp)		##_Type4
sw $t0, 44($sp)		##_isVoid5
sw $t0, 40($sp)		##_value5
sw $t0, 36($sp)		##_value6
sw $t0, 32($sp)		##_value7
sw $t0, 28($sp)		##_value8
sw $t0, 24($sp)		##_Type19
sw $t0, 20($sp)		##_isVoid20
sw $t0, 16($sp)		##_value11
sw $t0, 12($sp)		##_value12
sw $t0, 8($sp)		##_value13
sw $t0, 4($sp)		##_value14
sw $t0, 0($sp)		##_value15
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 56($sp)
lw $t0, 56($sp)		##SETATTR _value1 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
la $t0, heap		##_value2=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 52($sp)
lw $t0, 52($sp)		##SETATTR _value2 Int_x 13
addi $t0, $t0, 8
li $t1, 13
sw $t1, ($t0)
lw $t0, 64($sp)		##_Type4= TYPEOF self
sw $t0, 48($sp)
lw $t1, 48($sp)		##_isVoid5=_Type4!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 44($sp)
lw $t1, 44($sp)		##if _isVoid5 goto Continue_6_Blah_caller
beq $t1, 1, Continue_6_Blah_caller
la $t0, s5		##_value5= LOAD s5
sw $t0, 40($sp)
lw $a0, 40($sp)		##out_str _value5
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_6_Blah_caller:		##Continue_6_Blah_caller:
lw $t0, 64($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 56($sp)		##arg _value1
sw $t0, -12($sp)
lw $t0, 52($sp)		##arg _value2
sw $t0, -16($sp)
jal Blah_callee		##_value6=CALL Blah_callee
sw $v0, 36($sp)
la $t0, heap		##_value7=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 32($sp)
lw $t0, 32($sp)		##SETATTR _value7 Int_x 9
addi $t0, $t0, 8
li $t1, 9
sw $t1, ($t0)
la $t0, heap		##_value8=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 28($sp)
lw $t0, 28($sp)		##SETATTR _value8 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 64($sp)		##_Type19= TYPEOF self
sw $t0, 24($sp)
lw $t1, 24($sp)		##_isVoid20=_Type19!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 20($sp)
lw $t1, 20($sp)		##if _isVoid20 goto Continue_21_Blah_caller
beq $t1, 1, Continue_21_Blah_caller
la $t0, s6		##_value11= LOAD s6
sw $t0, 16($sp)
lw $a0, 16($sp)		##out_str _value11
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_21_Blah_caller:		##Continue_21_Blah_caller:
lw $t0, 64($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 32($sp)		##arg _value7
sw $t0, -12($sp)
lw $t0, 28($sp)		##arg _value8
sw $t0, -16($sp)
jal Blah_callee		##_value12=CALL Blah_callee
sw $v0, 12($sp)
lw $t0, 36($sp)		##_value13=GETATTR _value6 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 12($sp)		##_value14=GETATTR _value12 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 8($sp)		##_valueNum0=_value13+_value14
lw $t2, 4($sp)
add $t0, $t1, $t2
sw $t0, 60($sp)
la $t0, heap		##_value15=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value15 Int_x _valueNum0
addi $t0, $t0, 8
lw $t1, 60($sp)
sw $t1, ($t0)
lw $ra, 68($sp)		##return _value15
lw $v0, 0($sp)
addi $sp, $sp 72
jr $ra


Blah_callee:
sub $sp, $sp, 32
sw $ra, 28($sp)
##		24($sp)	self
##		20($sp)	x
##		16($sp)	y
li $t0, 0
sw $t0, 12($sp)		##_valueNum0
sw $t0, 8($sp)		##_value1
sw $t0, 4($sp)		##_value2
sw $t0, 0($sp)		##_value3
lw $t0, 20($sp)		##_value1=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 16($sp)		##_value2=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 8($sp)		##_valueNum0=_value1+_value2
lw $t2, 4($sp)
add $t0, $t1, $t2
sw $t0, 12($sp)
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value3 Int_x _valueNum0
addi $t0, $t0, 8
lw $t1, 12($sp)
sw $t1, ($t0)
lw $ra, 28($sp)		##return _value3
lw $v0, 0($sp)
addi $sp, $sp 32
jr $ra


Blah_get_t:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 4($sp)		##_value0=GETATTR self Blah_t
addi $t0, $t0, 28
lw $t0, ($t0)
sw $t0, 0($sp)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


Blah_useLet:
sub $sp, $sp, 64
sw $ra, 60($sp)
##		56($sp)	self
li $t0, 0
sw $t0, 52($sp)		##q
sw $t0, 48($sp)		##_value1
sw $t0, 44($sp)		##r
sw $t0, 40($sp)		##_value3
sw $t0, 36($sp)		##s
sw $t0, 32($sp)		##_value5
sw $t0, 28($sp)		##_valueNum6
sw $t0, 24($sp)		##_valueNum7
sw $t0, 20($sp)		##_value8
sw $t0, 16($sp)		##_value9
sw $t0, 12($sp)		##_value10
sw $t0, 8($sp)		##_value11
sw $t0, 4($sp)		##_value12
sw $t0, 0($sp)		##_value13
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 48($sp)
lw $t1, 48($sp)		##q=_value1
sw $t1, 52($sp)
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 40($sp)
lw $t0, 40($sp)		##SETATTR _value3 Int_x 99
addi $t0, $t0, 8
li $t1, 99
sw $t1, ($t0)
lw $t1, 40($sp)		##r=_value3
sw $t1, 44($sp)
lw $t0, 56($sp)		##_value5=GETATTR self Blah_j
addi $t0, $t0, 20
lw $t0, ($t0)
sw $t0, 32($sp)
lw $t1, 32($sp)		##s=_value5
sw $t1, 36($sp)
lw $t0, 52($sp)		##_value8=GETATTR q Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 44($sp)		##_value9=GETATTR r Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_valueNum7=_value8+_value9
lw $t2, 16($sp)
add $t0, $t1, $t2
sw $t0, 24($sp)
la $t0, heap		##_value10=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value10 Int_x _valueNum7
addi $t0, $t0, 8
lw $t1, 24($sp)
sw $t1, ($t0)
lw $t0, 12($sp)		##_value11=GETATTR _value10 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 8($sp)
lw $t0, 36($sp)		##_value12=GETATTR s Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 8($sp)		##_valueNum6=_value11+_value12
lw $t2, 4($sp)
add $t0, $t1, $t2
sw $t0, 28($sp)
la $t0, heap		##_value13=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value13 Int_x _valueNum6
addi $t0, $t0, 8
lw $t1, 28($sp)
sw $t1, ($t0)
lw $ra, 60($sp)		##return _value13
lw $v0, 0($sp)
addi $sp, $sp 64
jr $ra


Blah_useIf:
sub $sp, $sp, 40
sw $ra, 36($sp)
##		32($sp)	self
li $t0, 0
sw $t0, 28($sp)		##_value0
sw $t0, 24($sp)		##_Type0
sw $t0, 20($sp)		##_value2
sw $t0, 16($sp)		##_value3
sw $t0, 12($sp)		##_Type5
sw $t0, 8($sp)		##_value5
sw $t0, 4($sp)		##_Type11
sw $t0, 0($sp)		##_value7
lw $t0, 32($sp)		##_Type0= TYPEOF self
sw $t0, 24($sp)
lw $t0, 32($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 24($sp)		##_value2=VCALL _Type0 Blah_cmp
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,40
lw $t0,($t0)
jalr $t0
sw $v0, 20($sp)
lw $t0, 20($sp)		##_value3=GETATTR _value2 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 16($sp)		##if _value3 goto else4_Blah_useIf
beq $t1, 1, else4_Blah_useIf
lw $t0, 32($sp)		##_Type5= TYPEOF self
sw $t0, 12($sp)
lw $t0, 32($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##_value5=VCALL _Type5 Blah_tiny
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 8($sp)
lw $t1, 8($sp)		##_value0=_value5
sw $t1, 28($sp)
j end8_Blah_useIf		##goto end8_Blah_useIf
else4_Blah_useIf:		##else4_Blah_useIf:
lw $t0, 32($sp)		##_Type11= TYPEOF self
sw $t0, 4($sp)
lw $t0, 32($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 4($sp)		##_value7=VCALL _Type11 Blah_ng
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,44
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $t1, 0($sp)		##_value0=_value7
sw $t1, 28($sp)
end8_Blah_useIf:		##end8_Blah_useIf:
lw $ra, 36($sp)		##return _value0
lw $v0, 28($sp)
addi $sp, $sp 40
jr $ra


Blah_useWhile:
sub $sp, $sp, 32
sw $ra, 28($sp)
##		24($sp)	self
li $t0, 0
sw $t0, 20($sp)		##_Type2
sw $t0, 16($sp)		##_value1
sw $t0, 12($sp)		##_Type6
sw $t0, 8($sp)		##_value3
sw $t0, 4($sp)		##_value4
sw $t0, 0($sp)		##_value5
j while0_Blah_useWhile		##goto while0_Blah_useWhile
loop1_Blah_useWhile:		##loop1_Blah_useWhile:
lw $t0, 24($sp)		##_Type2= TYPEOF self
sw $t0, 20($sp)
lw $t0, 24($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 20($sp)		##_value1=VCALL _Type2 Blah_get_t
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,56
lw $t0,($t0)
jalr $t0
sw $v0, 16($sp)
while0_Blah_useWhile:		##while0_Blah_useWhile:
lw $t0, 24($sp)		##_Type6= TYPEOF self
sw $t0, 12($sp)
lw $t0, 24($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##_value3=VCALL _Type6 Blah_cmp
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,40
lw $t0,($t0)
jalr $t0
sw $v0, 8($sp)
lw $t0, 8($sp)		##_value4=GETATTR _value3 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 4($sp)
lw $t1, 4($sp)		##if _value4 goto loop1_Blah_useWhile
beq $t1, 1, loop1_Blah_useWhile
jal void_Init		##_value5=CALL void_Init
sw $v0, 0($sp)
lw $ra, 28($sp)		##return _value5
lw $v0, 0($sp)
addi $sp, $sp 32
jr $ra


Blah_useCase:
sub $sp, $sp, 60
sw $ra, 56($sp)
##		52($sp)	self
li $t0, 0
sw $t0, 48($sp)		##_value0
sw $t0, 44($sp)		##_TypeValue1
sw $t0, 40($sp)		##not_is_void1
sw $t0, 36($sp)		##_value3
sw $t0, 32($sp)		##_closestAncestor4
sw $t0, 28($sp)		##_isNotConform5
sw $t0, 24($sp)		##c
sw $t0, 20($sp)		##_value7
sw $t0, 16($sp)		##b
sw $t0, 12($sp)		##_value9
sw $t0, 8($sp)		##p
sw $t0, 4($sp)		##_value11
sw $t0, 0($sp)		##_value12
lw $t0, 52($sp)		##_TypeValue1= TYPEOF self
sw $t0, 44($sp)
lw $t1, 44($sp)		##not_is_void1=_TypeValue1!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 40($sp)
lw $t1, 40($sp)		##if not_is_void1 goto Continue_2_Blah_useCase
beq $t1, 1, Continue_2_Blah_useCase
la $t0, s7		##_value3= LOAD s7
sw $t0, 36($sp)
lw $a0, 36($sp)		##out_str _value3
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_2_Blah_useCase:		##Continue_2_Blah_useCase:
la $a0, type_C_name		##_isNotConform5= ISNOTCONFORM _TypeValue1 C
lw $t0, 44($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 28($sp)
lw $t1, 28($sp)		##if _isNotConform5 goto Case_7_Blah_useCase
beq $t1, 1, Case_7_Blah_useCase
lw $t1, 52($sp)		##c=self
sw $t1, 24($sp)
la $t0, heap		##_value7=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 20($sp)
lw $t0, 20($sp)		##SETATTR _value7 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 20($sp)		##_value0=_value7
sw $t1, 48($sp)
j End_7_Blah_useCase		##goto End_7_Blah_useCase
Case_7_Blah_useCase:		##Case_7_Blah_useCase:
la $a0, type_Blah_name		##_isNotConform5= ISNOTCONFORM _TypeValue1 Blah
lw $t0, 44($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 28($sp)
lw $t1, 28($sp)		##if _isNotConform5 goto Case_15_Blah_useCase
beq $t1, 1, Case_15_Blah_useCase
lw $t1, 52($sp)		##b=self
sw $t1, 16($sp)
la $t0, heap		##_value9=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value9 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t1, 12($sp)		##_value0=_value9
sw $t1, 48($sp)
j End_7_Blah_useCase		##goto End_7_Blah_useCase
Case_15_Blah_useCase:		##Case_15_Blah_useCase:
la $a0, type_P_name		##_isNotConform5= ISNOTCONFORM _TypeValue1 P
lw $t0, 44($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 28($sp)
lw $t1, 28($sp)		##if _isNotConform5 goto Case_23_Blah_useCase
beq $t1, 1, Case_23_Blah_useCase
lw $t1, 52($sp)		##p=self
sw $t1, 8($sp)
la $t0, heap		##_value11=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 4($sp)
lw $t0, 4($sp)		##SETATTR _value11 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 4($sp)		##_value0=_value11
sw $t1, 48($sp)
j End_7_Blah_useCase		##goto End_7_Blah_useCase
Case_23_Blah_useCase:		##Case_23_Blah_useCase:
la $t0, s8		##_value12= LOAD s8
sw $t0, 0($sp)
lw $a0, 0($sp)		##out_str _value12
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_7_Blah_useCase:		##End_7_Blah_useCase:
lw $ra, 56($sp)		##return _value0
lw $v0, 48($sp)
addi $sp, $sp 60
jr $ra


Blah_useNew:
sub $sp, $sp, 32
sw $ra, 28($sp)
##		24($sp)	self
li $t0, 0
sw $t0, 20($sp)		##_value0
sw $t0, 16($sp)		##_value1
sw $t0, 12($sp)		##_value2
sw $t0, 8($sp)		##_value3
sw $t0, 4($sp)		##_value4
sw $t0, 0($sp)		##_Type4
jal Int_Init		##_value0=CALL Int_Init
sw $v0, 20($sp)
jal Bool_Init		##_value1=CALL Bool_Init
sw $v0, 16($sp)
jal C_Init		##_value2=CALL C_Init
sw $v0, 12($sp)
jal Main_Init		##_value3=CALL Main_Init
sw $v0, 8($sp)
lw $t0, 24($sp)		##_Type4= TYPEOF self
sw $t0, 0($sp)
lw $t0, 0($sp)		##_value4=VCALL _Type4 Init
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,0
lw $t0,($t0)
jalr $t0
sw $v0, 4($sp)
lw $ra, 28($sp)		##return _value4
lw $v0, 4($sp)
addi $sp, $sp 32
jr $ra


Blah_doThemAll:
sub $sp, $sp, 260
sw $ra, 256($sp)
##		252($sp)	self
li $t0, 0
sw $t0, 248($sp)		##_value0
sw $t0, 244($sp)		##_value1
sw $t0, 240($sp)		##_value2
sw $t0, 236($sp)		##_Type4
sw $t0, 232($sp)		##_isVoid5
sw $t0, 228($sp)		##_value5
sw $t0, 224($sp)		##_value6
sw $t0, 220($sp)		##_Type14
sw $t0, 216($sp)		##_value8
sw $t0, 212($sp)		##_Type17
sw $t0, 208($sp)		##_value10
sw $t0, 204($sp)		##_Type20
sw $t0, 200($sp)		##_value12
sw $t0, 196($sp)		##_Type23
sw $t0, 192($sp)		##_value14
sw $t0, 188($sp)		##_Type26
sw $t0, 184($sp)		##_value16
sw $t0, 180($sp)		##_Type29
sw $t0, 176($sp)		##_value18
sw $t0, 172($sp)		##_Type32
sw $t0, 168($sp)		##_value20
sw $t0, 164($sp)		##_Type35
sw $t0, 160($sp)		##_value22
sw $t0, 156($sp)		##_value23
sw $t0, 152($sp)		##_value24
sw $t0, 148($sp)		##_Type42
sw $t0, 144($sp)		##_value26
sw $t0, 140($sp)		##_Type47
sw $t0, 136($sp)		##_value28
sw $t0, 132($sp)		##_Type50
sw $t0, 128($sp)		##_value30
sw $t0, 124($sp)		##_Type53
sw $t0, 120($sp)		##_value32
sw $t0, 116($sp)		##_Type56
sw $t0, 112($sp)		##_value34
sw $t0, 108($sp)		##_Type59
sw $t0, 104($sp)		##_value36
sw $t0, 100($sp)		##_Type62
sw $t0, 96($sp)		##_value38
sw $t0, 92($sp)		##_value39
sw $t0, 88($sp)		##_value40
sw $t0, 84($sp)		##_value41
sw $t0, 80($sp)		##_Type69
sw $t0, 76($sp)		##_isVoid70
sw $t0, 72($sp)		##_value44
sw $t0, 68($sp)		##_value45
sw $t0, 64($sp)		##_Type79
sw $t0, 60($sp)		##_value47
sw $t0, 56($sp)		##_Type82
sw $t0, 52($sp)		##_value49
sw $t0, 48($sp)		##_Type85
sw $t0, 44($sp)		##_value51
sw $t0, 40($sp)		##_Type88
sw $t0, 36($sp)		##_value53
sw $t0, 32($sp)		##_Type91
sw $t0, 28($sp)		##_value55
sw $t0, 24($sp)		##_Type94
sw $t0, 20($sp)		##_value57
sw $t0, 16($sp)		##_Type97
sw $t0, 12($sp)		##_value59
sw $t0, 8($sp)		##_Type100
sw $t0, 4($sp)		##_value61
sw $t0, 0($sp)		##_value62
lw $t0, 252($sp)		##_value0=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 248($sp)
la $t0, s9		##_value1= LOAD s9
sw $t0, 244($sp)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 240($sp)
lw $t0, 240($sp)		##SETATTR _value2 String_x _value1
addi $t0, $t0, 8
lw $t1, 244($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type4= TYPEOF _value0
sw $t0, 236($sp)
lw $t1, 236($sp)		##_isVoid5=_Type4!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 232($sp)
lw $t1, 232($sp)		##if _isVoid5 goto Continue_6_Blah_doThemAll
beq $t1, 1, Continue_6_Blah_doThemAll
la $t0, s10		##_value5= LOAD s10
sw $t0, 228($sp)
lw $a0, 228($sp)		##out_str _value5
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_6_Blah_doThemAll:		##Continue_6_Blah_doThemAll:
lw $t0, 248($sp)		##arg _value0
sw $t0, -8($sp)
lw $t0, 240($sp)		##arg _value2
sw $t0, -12($sp)
jal IO_out_string		##_value6=CALL IO_out_string
sw $v0, 224($sp)
lw $t0, 252($sp)		##_Type14= TYPEOF self
sw $t0, 220($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 220($sp)		##_value8=VCALL _Type14 Blah_tiny
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 216($sp)
lw $t0, 252($sp)		##_Type17= TYPEOF self
sw $t0, 212($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 212($sp)		##_value10=VCALL _Type17 Blah_add
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,20
lw $t0,($t0)
jalr $t0
sw $v0, 208($sp)
lw $t0, 252($sp)		##_Type20= TYPEOF self
sw $t0, 204($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 204($sp)		##_value12=VCALL _Type20 Blah_compare
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,24
lw $t0,($t0)
jalr $t0
sw $v0, 200($sp)
lw $t0, 252($sp)		##_Type23= TYPEOF self
sw $t0, 196($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 196($sp)		##_value14=VCALL _Type23 Blah_compareEq
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,28
lw $t0,($t0)
jalr $t0
sw $v0, 192($sp)
lw $t0, 252($sp)		##_Type26= TYPEOF self
sw $t0, 188($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 188($sp)		##_value16=VCALL _Type26 Blah_isv
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,32
lw $t0,($t0)
jalr $t0
sw $v0, 184($sp)
lw $t0, 252($sp)		##_Type29= TYPEOF self
sw $t0, 180($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 180($sp)		##_value18=VCALL _Type29 Blah_cmp
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,40
lw $t0,($t0)
jalr $t0
sw $v0, 176($sp)
lw $t0, 252($sp)		##_Type32= TYPEOF self
sw $t0, 172($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 172($sp)		##_value20=VCALL _Type32 Blah_ng
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,44
lw $t0,($t0)
jalr $t0
sw $v0, 168($sp)
lw $t0, 252($sp)		##_Type35= TYPEOF self
sw $t0, 164($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 164($sp)		##_value22=VCALL _Type35 Blah_caller
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,48
lw $t0,($t0)
jalr $t0
sw $v0, 160($sp)
la $t0, heap		##_value23=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 156($sp)
lw $t0, 156($sp)		##SETATTR _value23 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
la $t0, heap		##_value24=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 152($sp)
lw $t0, 152($sp)		##SETATTR _value24 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 252($sp)		##_Type42= TYPEOF self
sw $t0, 148($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 156($sp)		##arg _value23
sw $t0, -12($sp)
lw $t0, 152($sp)		##arg _value24
sw $t0, -16($sp)
lw $t0, 148($sp)		##_value26=VCALL _Type42 Blah_callee
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,52
lw $t0,($t0)
jalr $t0
sw $v0, 144($sp)
lw $t0, 252($sp)		##_Type47= TYPEOF self
sw $t0, 140($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 140($sp)		##_value28=VCALL _Type47 Blah_get_t
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,56
lw $t0,($t0)
jalr $t0
sw $v0, 136($sp)
lw $t0, 252($sp)		##_Type50= TYPEOF self
sw $t0, 132($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 132($sp)		##_value30=VCALL _Type50 Blah_useLet
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,60
lw $t0,($t0)
jalr $t0
sw $v0, 128($sp)
lw $t0, 252($sp)		##_Type53= TYPEOF self
sw $t0, 124($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 124($sp)		##_value32=VCALL _Type53 Blah_useIf
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,64
lw $t0,($t0)
jalr $t0
sw $v0, 120($sp)
lw $t0, 252($sp)		##_Type56= TYPEOF self
sw $t0, 116($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 116($sp)		##_value34=VCALL _Type56 Blah_useWhile
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,68
lw $t0,($t0)
jalr $t0
sw $v0, 112($sp)
lw $t0, 252($sp)		##_Type59= TYPEOF self
sw $t0, 108($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 108($sp)		##_value36=VCALL _Type59 Blah_useCase
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,72
lw $t0,($t0)
jalr $t0
sw $v0, 104($sp)
lw $t0, 252($sp)		##_Type62= TYPEOF self
sw $t0, 100($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 100($sp)		##_value38=VCALL _Type62 Blah_useNew
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,76
lw $t0,($t0)
jalr $t0
sw $v0, 96($sp)
lw $t0, 252($sp)		##_value39=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 92($sp)
la $t0, s11		##_value40= LOAD s11
sw $t0, 88($sp)
la $t0, heap		##_value41=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 84($sp)
lw $t0, 84($sp)		##SETATTR _value41 String_x _value40
addi $t0, $t0, 8
lw $t1, 88($sp)
sw $t1, ($t0)
lw $t0, 92($sp)		##_Type69= TYPEOF _value39
sw $t0, 80($sp)
lw $t1, 80($sp)		##_isVoid70=_Type69!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 76($sp)
lw $t1, 76($sp)		##if _isVoid70 goto Continue_71_Blah_doThemAll
beq $t1, 1, Continue_71_Blah_doThemAll
la $t0, s12		##_value44= LOAD s12
sw $t0, 72($sp)
lw $a0, 72($sp)		##out_str _value44
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_71_Blah_doThemAll:		##Continue_71_Blah_doThemAll:
lw $t0, 92($sp)		##arg _value39
sw $t0, -8($sp)
lw $t0, 84($sp)		##arg _value41
sw $t0, -12($sp)
jal IO_out_string		##_value45=CALL IO_out_string
sw $v0, 68($sp)
lw $t0, 252($sp)		##_Type79= TYPEOF self
sw $t0, 64($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 64($sp)		##_value47=VCALL _Type79 Blah_bigIf
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,84
lw $t0,($t0)
jalr $t0
sw $v0, 60($sp)
lw $t0, 252($sp)		##_Type82= TYPEOF self
sw $t0, 56($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 56($sp)		##_value49=VCALL _Type82 Blah_bigMath
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,96
lw $t0,($t0)
jalr $t0
sw $v0, 52($sp)
lw $t0, 252($sp)		##_Type85= TYPEOF self
sw $t0, 48($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 48($sp)		##_value51=VCALL _Type85 Blah_bigAssign
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,104
lw $t0,($t0)
jalr $t0
sw $v0, 44($sp)
lw $t0, 252($sp)		##_Type88= TYPEOF self
sw $t0, 40($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 40($sp)		##_value53=VCALL _Type88 Blah_bigWhile
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,88
lw $t0,($t0)
jalr $t0
sw $v0, 36($sp)
lw $t0, 252($sp)		##_Type91= TYPEOF self
sw $t0, 32($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 32($sp)		##_value55=VCALL _Type91 Blah_bigSelf
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,116
lw $t0,($t0)
jalr $t0
sw $v0, 28($sp)
lw $t0, 252($sp)		##_Type94= TYPEOF self
sw $t0, 24($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 24($sp)		##_value57=VCALL _Type94 Blah_bigStrCompare
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,120
lw $t0,($t0)
jalr $t0
sw $v0, 20($sp)
lw $t0, 252($sp)		##_Type97= TYPEOF self
sw $t0, 16($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 16($sp)		##_value59=VCALL _Type97 Blah_bigCase
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,124
lw $t0,($t0)
jalr $t0
sw $v0, 12($sp)
lw $t0, 252($sp)		##_Type100= TYPEOF self
sw $t0, 8($sp)
lw $t0, 252($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 8($sp)		##_value61=VCALL _Type100 Blah_bigAttrAccess
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,128
lw $t0,($t0)
jalr $t0
sw $v0, 4($sp)
la $t0, heap		##_value62=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value62 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 256($sp)		##return _value62
lw $v0, 0($sp)
addi $sp, $sp 260
jr $ra


Blah_bigIf:
sub $sp, $sp, 280
sw $ra, 276($sp)
##		272($sp)	self
li $t0, 0
sw $t0, 268($sp)		##_value0
sw $t0, 264($sp)		##_value1
sw $t0, 260($sp)		##_value2
sw $t0, 256($sp)		##_Type4
sw $t0, 252($sp)		##_isVoid5
sw $t0, 248($sp)		##_value5
sw $t0, 244($sp)		##_value6
sw $t0, 240($sp)		##_value7
sw $t0, 236($sp)		##_value8
sw $t0, 232($sp)		##_value9
sw $t0, 228($sp)		##_Type18
sw $t0, 224($sp)		##_isVoid19
sw $t0, 220($sp)		##_value12
sw $t0, 216($sp)		##_value13
sw $t0, 212($sp)		##_value14
sw $t0, 208($sp)		##_value15
sw $t0, 204($sp)		##_value16
sw $t0, 200($sp)		##_value17
sw $t0, 196($sp)		##_Type39
sw $t0, 192($sp)		##_isVoid40
sw $t0, 188($sp)		##_value20
sw $t0, 184($sp)		##_value21
sw $t0, 180($sp)		##_value22
sw $t0, 176($sp)		##_value23
sw $t0, 172($sp)		##_value24
sw $t0, 168($sp)		##_value25
sw $t0, 164($sp)		##_value26
sw $t0, 160($sp)		##_value27
sw $t0, 156($sp)		##_value28
sw $t0, 152($sp)		##_Type65
sw $t0, 148($sp)		##_isVoid66
sw $t0, 144($sp)		##_value31
sw $t0, 140($sp)		##_value32
sw $t0, 136($sp)		##_Type79
sw $t0, 132($sp)		##_isVoid80
sw $t0, 128($sp)		##_value35
sw $t0, 124($sp)		##_value36
sw $t0, 120($sp)		##_value37
sw $t0, 116($sp)		##_value38
sw $t0, 112($sp)		##_value39
sw $t0, 108($sp)		##_Type94
sw $t0, 104($sp)		##_isVoid95
sw $t0, 100($sp)		##_value42
sw $t0, 96($sp)		##_value43
sw $t0, 92($sp)		##_value44
sw $t0, 88($sp)		##_value45
sw $t0, 84($sp)		##_value46
sw $t0, 80($sp)		##_Type110
sw $t0, 76($sp)		##_isVoid111
sw $t0, 72($sp)		##_value49
sw $t0, 68($sp)		##_value50
sw $t0, 64($sp)		##_value51
sw $t0, 60($sp)		##_value52
sw $t0, 56($sp)		##_value53
sw $t0, 52($sp)		##_value54
sw $t0, 48($sp)		##_value55
sw $t0, 44($sp)		##_value56
sw $t0, 40($sp)		##_value57
sw $t0, 36($sp)		##_Type136
sw $t0, 32($sp)		##_isVoid137
sw $t0, 28($sp)		##_value60
sw $t0, 24($sp)		##_value61
sw $t0, 20($sp)		##_value62
sw $t0, 16($sp)		##_Type155
sw $t0, 12($sp)		##_isVoid156
sw $t0, 8($sp)		##_value65
sw $t0, 4($sp)		##_value66
sw $t0, 0($sp)		##_value67
lw $t0, 272($sp)		##_value0=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 268($sp)
la $t0, s13		##_value1= LOAD s13
sw $t0, 264($sp)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 260($sp)
lw $t0, 260($sp)		##SETATTR _value2 String_x _value1
addi $t0, $t0, 8
lw $t1, 264($sp)
sw $t1, ($t0)
lw $t0, 268($sp)		##_Type4= TYPEOF _value0
sw $t0, 256($sp)
lw $t1, 256($sp)		##_isVoid5=_Type4!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 252($sp)
lw $t1, 252($sp)		##if _isVoid5 goto Continue_6_Blah_bigIf
beq $t1, 1, Continue_6_Blah_bigIf
la $t0, s14		##_value5= LOAD s14
sw $t0, 248($sp)
lw $a0, 248($sp)		##out_str _value5
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_6_Blah_bigIf:		##Continue_6_Blah_bigIf:
lw $t0, 268($sp)		##arg _value0
sw $t0, -8($sp)
lw $t0, 260($sp)		##arg _value2
sw $t0, -12($sp)
lw $t0, 256($sp)		##_value6=VCALL _Type4 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 244($sp)
la $t0, heap		##_value8=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 236($sp)
lw $t0, 236($sp)		##SETATTR _value8 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 236($sp)		##_value9=GETATTR _value8 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 232($sp)
lw $t1, 232($sp)		##if _value9 goto else17_Blah_bigIf
beq $t1, 1, else17_Blah_bigIf
lw $t0, 272($sp)		##_Type18= TYPEOF self
sw $t0, 228($sp)
lw $t1, 228($sp)		##_isVoid19=_Type18!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 224($sp)
lw $t1, 224($sp)		##if _isVoid19 goto Continue_20_Blah_bigIf
beq $t1, 1, Continue_20_Blah_bigIf
la $t0, s15		##_value12= LOAD s15
sw $t0, 220($sp)
lw $a0, 220($sp)		##out_str _value12
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_20_Blah_bigIf:		##Continue_20_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value13=CALL Object_abort
sw $v0, 216($sp)
lw $t1, 216($sp)		##_value7=_value13
sw $t1, 240($sp)
j end27_Blah_bigIf		##goto end27_Blah_bigIf
else17_Blah_bigIf:		##else17_Blah_bigIf:
la $t0, heap		##_value15=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 208($sp)
lw $t0, 208($sp)		##SETATTR _value15 Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 208($sp)		##_value16=GETATTR _value15 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 204($sp)
lw $t1, 204($sp)		##if _value16 goto else33_Blah_bigIf
beq $t1, 1, else33_Blah_bigIf
la $t0, heap		##_value17=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 200($sp)
lw $t0, 200($sp)		##SETATTR _value17 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 200($sp)		##_value14=_value17
sw $t1, 212($sp)
j end36_Blah_bigIf		##goto end36_Blah_bigIf
else33_Blah_bigIf:		##else33_Blah_bigIf:
lw $t0, 272($sp)		##_Type39= TYPEOF self
sw $t0, 196($sp)
lw $t1, 196($sp)		##_isVoid40=_Type39!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 192($sp)
lw $t1, 192($sp)		##if _isVoid40 goto Continue_41_Blah_bigIf
beq $t1, 1, Continue_41_Blah_bigIf
la $t0, s16		##_value20= LOAD s16
sw $t0, 188($sp)
lw $a0, 188($sp)		##out_str _value20
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_41_Blah_bigIf:		##Continue_41_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value21=CALL Object_abort
sw $v0, 184($sp)
lw $t1, 184($sp)		##_value14=_value21
sw $t1, 212($sp)
end36_Blah_bigIf:		##end36_Blah_bigIf:
lw $t1, 212($sp)		##_value7=_value14
sw $t1, 240($sp)
end27_Blah_bigIf:		##end27_Blah_bigIf:
la $t0, heap		##_value23=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 176($sp)
lw $t0, 176($sp)		##SETATTR _value23 Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 176($sp)		##_value24=GETATTR _value23 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 172($sp)
lw $t1, 172($sp)		##if _value24 goto else55_Blah_bigIf
beq $t1, 1, else55_Blah_bigIf
la $t0, heap		##_value26=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 164($sp)
lw $t0, 164($sp)		##SETATTR _value26 Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 164($sp)		##_value27=GETATTR _value26 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 160($sp)
lw $t1, 160($sp)		##if _value27 goto else59_Blah_bigIf
beq $t1, 1, else59_Blah_bigIf
la $t0, heap		##_value28=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 156($sp)
lw $t0, 156($sp)		##SETATTR _value28 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 156($sp)		##_value25=_value28
sw $t1, 168($sp)
j end62_Blah_bigIf		##goto end62_Blah_bigIf
else59_Blah_bigIf:		##else59_Blah_bigIf:
lw $t0, 272($sp)		##_Type65= TYPEOF self
sw $t0, 152($sp)
lw $t1, 152($sp)		##_isVoid66=_Type65!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 148($sp)
lw $t1, 148($sp)		##if _isVoid66 goto Continue_67_Blah_bigIf
beq $t1, 1, Continue_67_Blah_bigIf
la $t0, s17		##_value31= LOAD s17
sw $t0, 144($sp)
lw $a0, 144($sp)		##out_str _value31
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_67_Blah_bigIf:		##Continue_67_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value32=CALL Object_abort
sw $v0, 140($sp)
lw $t1, 140($sp)		##_value25=_value32
sw $t1, 168($sp)
end62_Blah_bigIf:		##end62_Blah_bigIf:
lw $t1, 168($sp)		##_value22=_value25
sw $t1, 180($sp)
j end76_Blah_bigIf		##goto end76_Blah_bigIf
else55_Blah_bigIf:		##else55_Blah_bigIf:
lw $t0, 272($sp)		##_Type79= TYPEOF self
sw $t0, 136($sp)
lw $t1, 136($sp)		##_isVoid80=_Type79!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 132($sp)
lw $t1, 132($sp)		##if _isVoid80 goto Continue_81_Blah_bigIf
beq $t1, 1, Continue_81_Blah_bigIf
la $t0, s18		##_value35= LOAD s18
sw $t0, 128($sp)
lw $a0, 128($sp)		##out_str _value35
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_81_Blah_bigIf:		##Continue_81_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value36=CALL Object_abort
sw $v0, 124($sp)
lw $t1, 124($sp)		##_value22=_value36
sw $t1, 180($sp)
end76_Blah_bigIf:		##end76_Blah_bigIf:
la $t0, heap		##_value38=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 116($sp)
lw $t0, 116($sp)		##SETATTR _value38 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 116($sp)		##_value39=GETATTR _value38 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 112($sp)
lw $t1, 112($sp)		##if _value39 goto else93_Blah_bigIf
beq $t1, 1, else93_Blah_bigIf
lw $t0, 272($sp)		##_Type94= TYPEOF self
sw $t0, 108($sp)
lw $t1, 108($sp)		##_isVoid95=_Type94!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 104($sp)
lw $t1, 104($sp)		##if _isVoid95 goto Continue_96_Blah_bigIf
beq $t1, 1, Continue_96_Blah_bigIf
la $t0, s19		##_value42= LOAD s19
sw $t0, 100($sp)
lw $a0, 100($sp)		##out_str _value42
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_96_Blah_bigIf:		##Continue_96_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value43=CALL Object_abort
sw $v0, 96($sp)
lw $t1, 96($sp)		##_value37=_value43
sw $t1, 120($sp)
j end103_Blah_bigIf		##goto end103_Blah_bigIf
else93_Blah_bigIf:		##else93_Blah_bigIf:
la $t0, heap		##_value45=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 88($sp)
lw $t0, 88($sp)		##SETATTR _value45 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 88($sp)		##_value46=GETATTR _value45 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 84($sp)
lw $t1, 84($sp)		##if _value46 goto else109_Blah_bigIf
beq $t1, 1, else109_Blah_bigIf
lw $t0, 272($sp)		##_Type110= TYPEOF self
sw $t0, 80($sp)
lw $t1, 80($sp)		##_isVoid111=_Type110!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 76($sp)
lw $t1, 76($sp)		##if _isVoid111 goto Continue_112_Blah_bigIf
beq $t1, 1, Continue_112_Blah_bigIf
la $t0, s20		##_value49= LOAD s20
sw $t0, 72($sp)
lw $a0, 72($sp)		##out_str _value49
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_112_Blah_bigIf:		##Continue_112_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value50=CALL Object_abort
sw $v0, 68($sp)
lw $t1, 68($sp)		##_value44=_value50
sw $t1, 92($sp)
j end119_Blah_bigIf		##goto end119_Blah_bigIf
else109_Blah_bigIf:		##else109_Blah_bigIf:
la $t0, heap		##_value51=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 64($sp)
lw $t0, 64($sp)		##SETATTR _value51 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 64($sp)		##_value44=_value51
sw $t1, 92($sp)
end119_Blah_bigIf:		##end119_Blah_bigIf:
lw $t1, 92($sp)		##_value37=_value44
sw $t1, 120($sp)
end103_Blah_bigIf:		##end103_Blah_bigIf:
la $t0, heap		##_value53=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 56($sp)
lw $t0, 56($sp)		##SETATTR _value53 Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 56($sp)		##_value54=GETATTR _value53 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 52($sp)
lw $t1, 52($sp)		##if _value54 goto else131_Blah_bigIf
beq $t1, 1, else131_Blah_bigIf
la $t0, heap		##_value56=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 44($sp)
lw $t0, 44($sp)		##SETATTR _value56 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 44($sp)		##_value57=GETATTR _value56 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 40($sp)
lw $t1, 40($sp)		##if _value57 goto else135_Blah_bigIf
beq $t1, 1, else135_Blah_bigIf
lw $t0, 272($sp)		##_Type136= TYPEOF self
sw $t0, 36($sp)
lw $t1, 36($sp)		##_isVoid137=_Type136!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 32($sp)
lw $t1, 32($sp)		##if _isVoid137 goto Continue_138_Blah_bigIf
beq $t1, 1, Continue_138_Blah_bigIf
la $t0, s21		##_value60= LOAD s21
sw $t0, 28($sp)
lw $a0, 28($sp)		##out_str _value60
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_138_Blah_bigIf:		##Continue_138_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value61=CALL Object_abort
sw $v0, 24($sp)
lw $t1, 24($sp)		##_value55=_value61
sw $t1, 48($sp)
j end145_Blah_bigIf		##goto end145_Blah_bigIf
else135_Blah_bigIf:		##else135_Blah_bigIf:
la $t0, heap		##_value62=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 20($sp)
lw $t0, 20($sp)		##SETATTR _value62 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 20($sp)		##_value55=_value62
sw $t1, 48($sp)
end145_Blah_bigIf:		##end145_Blah_bigIf:
lw $t1, 48($sp)		##_value52=_value55
sw $t1, 60($sp)
j end152_Blah_bigIf		##goto end152_Blah_bigIf
else131_Blah_bigIf:		##else131_Blah_bigIf:
lw $t0, 272($sp)		##_Type155= TYPEOF self
sw $t0, 16($sp)
lw $t1, 16($sp)		##_isVoid156=_Type155!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 12($sp)
lw $t1, 12($sp)		##if _isVoid156 goto Continue_157_Blah_bigIf
beq $t1, 1, Continue_157_Blah_bigIf
la $t0, s22		##_value65= LOAD s22
sw $t0, 8($sp)
lw $a0, 8($sp)		##out_str _value65
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_157_Blah_bigIf:		##Continue_157_Blah_bigIf:
lw $t0, 272($sp)		##arg self
sw $t0, -8($sp)
jal Object_abort		##_value66=CALL Object_abort
sw $v0, 4($sp)
lw $t1, 4($sp)		##_value52=_value66
sw $t1, 60($sp)
end152_Blah_bigIf:		##end152_Blah_bigIf:
la $t0, heap		##_value67=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value67 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 276($sp)		##return _value67
lw $v0, 0($sp)
addi $sp, $sp 280
jr $ra


Blah_bigWhile:
sub $sp, $sp, 588
sw $ra, 584($sp)
##		580($sp)	self
li $t0, 0
sw $t0, 576($sp)		##_value0
sw $t0, 572($sp)		##_value1
sw $t0, 568($sp)		##_value2
sw $t0, 564($sp)		##_Type4
sw $t0, 560($sp)		##_isVoid5
sw $t0, 556($sp)		##_value5
sw $t0, 552($sp)		##_value6
sw $t0, 548($sp)		##x
sw $t0, 544($sp)		##_value8
sw $t0, 540($sp)		##ct
sw $t0, 536($sp)		##_value10
sw $t0, 532($sp)		##_valueNum11
sw $t0, 528($sp)		##_value12
sw $t0, 524($sp)		##_value13
sw $t0, 520($sp)		##_value14
sw $t0, 516($sp)		##_value15
sw $t0, 512($sp)		##_valueNum16
sw $t0, 508($sp)		##_value17
sw $t0, 504($sp)		##_value18
sw $t0, 500($sp)		##_value19
sw $t0, 496($sp)		##_value20
sw $t0, 492($sp)		##_valueNum21
sw $t0, 488($sp)		##_value22
sw $t0, 484($sp)		##_value23
sw $t0, 480($sp)		##_value24
sw $t0, 476($sp)		##_value25
sw $t0, 472($sp)		##_value26
sw $t0, 468($sp)		##_value27
sw $t0, 464($sp)		##_value28
sw $t0, 460($sp)		##_value29
sw $t0, 456($sp)		##_value30
sw $t0, 452($sp)		##_value31
sw $t0, 448($sp)		##_valueNum32
sw $t0, 444($sp)		##_value33
sw $t0, 440($sp)		##_value34
sw $t0, 436($sp)		##_value35
sw $t0, 432($sp)		##_value36
sw $t0, 428($sp)		##_value37
sw $t0, 424($sp)		##_value38
sw $t0, 420($sp)		##_value39
sw $t0, 416($sp)		##_value40
sw $t0, 412($sp)		##_value41
sw $t0, 408($sp)		##_valueNum42
sw $t0, 404($sp)		##_value43
sw $t0, 400($sp)		##_value44
sw $t0, 396($sp)		##_value45
sw $t0, 392($sp)		##_value46
sw $t0, 388($sp)		##_value47
sw $t0, 384($sp)		##_value48
sw $t0, 380($sp)		##_value49
sw $t0, 376($sp)		##_value50
sw $t0, 372($sp)		##_Type82
sw $t0, 368($sp)		##_value52
sw $t0, 364($sp)		##_Type90
sw $t0, 360($sp)		##_value54
sw $t0, 356($sp)		##i
sw $t0, 352($sp)		##_value56
sw $t0, 348($sp)		##j
sw $t0, 344($sp)		##_value58
sw $t0, 340($sp)		##k
sw $t0, 336($sp)		##_value60
sw $t0, 332($sp)		##ctI
sw $t0, 328($sp)		##_value62
sw $t0, 324($sp)		##ctJ
sw $t0, 320($sp)		##_value64
sw $t0, 316($sp)		##ctK
sw $t0, 312($sp)		##_value66
sw $t0, 308($sp)		##_value67
sw $t0, 304($sp)		##_value68
sw $t0, 300($sp)		##_value69
sw $t0, 296($sp)		##_valueNum70
sw $t0, 292($sp)		##_value71
sw $t0, 288($sp)		##_value72
sw $t0, 284($sp)		##_value73
sw $t0, 280($sp)		##_value74
sw $t0, 276($sp)		##_valueNum75
sw $t0, 272($sp)		##_value76
sw $t0, 268($sp)		##_value77
sw $t0, 264($sp)		##_value78
sw $t0, 260($sp)		##_value79
sw $t0, 256($sp)		##_value80
sw $t0, 252($sp)		##_value81
sw $t0, 248($sp)		##_value82
sw $t0, 244($sp)		##_value83
sw $t0, 240($sp)		##_value84
sw $t0, 236($sp)		##_value85
sw $t0, 232($sp)		##_value86
sw $t0, 228($sp)		##_valueNum87
sw $t0, 224($sp)		##_value88
sw $t0, 220($sp)		##_value89
sw $t0, 216($sp)		##_value90
sw $t0, 212($sp)		##_value91
sw $t0, 208($sp)		##_valueNum92
sw $t0, 204($sp)		##_value93
sw $t0, 200($sp)		##_value94
sw $t0, 196($sp)		##_value95
sw $t0, 192($sp)		##_value96
sw $t0, 188($sp)		##_value97
sw $t0, 184($sp)		##_value98
sw $t0, 180($sp)		##_value99
sw $t0, 176($sp)		##_value100
sw $t0, 172($sp)		##_value101
sw $t0, 168($sp)		##_value102
sw $t0, 164($sp)		##_value103
sw $t0, 160($sp)		##_valueNum104
sw $t0, 156($sp)		##_value105
sw $t0, 152($sp)		##_value106
sw $t0, 148($sp)		##_value107
sw $t0, 144($sp)		##_value108
sw $t0, 140($sp)		##_valueNum109
sw $t0, 136($sp)		##_value110
sw $t0, 132($sp)		##_value111
sw $t0, 128($sp)		##_value112
sw $t0, 124($sp)		##_value113
sw $t0, 120($sp)		##_value114
sw $t0, 116($sp)		##_value115
sw $t0, 112($sp)		##_value116
sw $t0, 108($sp)		##_value117
sw $t0, 104($sp)		##_value118
sw $t0, 100($sp)		##_value119
sw $t0, 96($sp)		##_value120
sw $t0, 92($sp)		##_value121
sw $t0, 88($sp)		##_value122
sw $t0, 84($sp)		##_value123
sw $t0, 80($sp)		##_value124
sw $t0, 76($sp)		##_value125
sw $t0, 72($sp)		##_value126
sw $t0, 68($sp)		##_Type215
sw $t0, 64($sp)		##_value128
sw $t0, 60($sp)		##_value129
sw $t0, 56($sp)		##_value130
sw $t0, 52($sp)		##_value131
sw $t0, 48($sp)		##_value132
sw $t0, 44($sp)		##_value133
sw $t0, 40($sp)		##_value134
sw $t0, 36($sp)		##_Type229
sw $t0, 32($sp)		##_value136
sw $t0, 28($sp)		##_value137
sw $t0, 24($sp)		##_value138
sw $t0, 20($sp)		##_value139
sw $t0, 16($sp)		##_value140
sw $t0, 12($sp)		##_value141
sw $t0, 8($sp)		##_value142
sw $t0, 4($sp)		##_Type243
sw $t0, 0($sp)		##_value144
lw $t0, 580($sp)		##_value0=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 576($sp)
la $t0, s23		##_value1= LOAD s23
sw $t0, 572($sp)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 568($sp)
lw $t0, 568($sp)		##SETATTR _value2 String_x _value1
addi $t0, $t0, 8
lw $t1, 572($sp)
sw $t1, ($t0)
lw $t0, 576($sp)		##_Type4= TYPEOF _value0
sw $t0, 564($sp)
lw $t1, 564($sp)		##_isVoid5=_Type4!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 560($sp)
lw $t1, 560($sp)		##if _isVoid5 goto Continue_6_Blah_bigWhile
beq $t1, 1, Continue_6_Blah_bigWhile
la $t0, s24		##_value5= LOAD s24
sw $t0, 556($sp)
lw $a0, 556($sp)		##out_str _value5
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_6_Blah_bigWhile:		##Continue_6_Blah_bigWhile:
lw $t0, 576($sp)		##arg _value0
sw $t0, -8($sp)
lw $t0, 568($sp)		##arg _value2
sw $t0, -12($sp)
lw $t0, 564($sp)		##_value6=VCALL _Type4 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 552($sp)
la $t0, heap		##_value8=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 544($sp)
lw $t0, 544($sp)		##SETATTR _value8 Int_x 34
addi $t0, $t0, 8
li $t1, 34
sw $t1, ($t0)
lw $t1, 544($sp)		##x=_value8
sw $t1, 548($sp)
la $t0, heap		##_value10=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 536($sp)
lw $t0, 536($sp)		##SETATTR _value10 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 536($sp)		##ct=_value10
sw $t1, 540($sp)
j while20_Blah_bigWhile		##goto while20_Blah_bigWhile
loop21_Blah_bigWhile:		##loop21_Blah_bigWhile:
la $t0, heap		##_value12=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 528($sp)
lw $t0, 528($sp)		##SETATTR _value12 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 548($sp)		##_value13=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 524($sp)
lw $t0, 528($sp)		##_value14=GETATTR _value12 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 520($sp)
lw $t1, 524($sp)		##_valueNum11=_value13-_value14
lw $t2, 520($sp)
sub $t0, $t1, $t2
sw $t0, 532($sp)
la $t0, heap		##_value15=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 516($sp)
lw $t0, 516($sp)		##SETATTR _value15 Int_x _valueNum11
addi $t0, $t0, 8
lw $t1, 532($sp)
sw $t1, ($t0)
lw $t1, 516($sp)		##x=_value15
sw $t1, 548($sp)
la $t0, heap		##_value17=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 508($sp)
lw $t0, 508($sp)		##SETATTR _value17 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 540($sp)		##_value18=GETATTR ct Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 504($sp)
lw $t0, 508($sp)		##_value19=GETATTR _value17 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 500($sp)
lw $t1, 504($sp)		##_valueNum16=_value18+_value19
lw $t2, 500($sp)
add $t0, $t1, $t2
sw $t0, 512($sp)
la $t0, heap		##_value20=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 496($sp)
lw $t0, 496($sp)		##SETATTR _value20 Int_x _valueNum16
addi $t0, $t0, 8
lw $t1, 512($sp)
sw $t1, ($t0)
lw $t1, 496($sp)		##ct=_value20
sw $t1, 540($sp)
while20_Blah_bigWhile:		##while20_Blah_bigWhile:
la $t0, heap		##_value23=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 484($sp)
lw $t0, 484($sp)		##SETATTR _value23 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 548($sp)		##_value24=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 480($sp)
lw $t0, 484($sp)		##_value25=GETATTR _value23 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 476($sp)
lw $t1, 480($sp)		##_value22=_value24<=_value25
lw $t2, 476($sp)
sle $t0, $t1, $t2
sw $t0, 488($sp)
la $t0, heap		##_value26=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 472($sp)
lw $t0, 472($sp)		##SETATTR _value26 Bool_x _value22
addi $t0, $t0, 8
lw $t1, 488($sp)
sw $t1, ($t0)
lw $t0, 472($sp)		##_value27=GETATTR _value26 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 468($sp)
li $t1, 1		##_valueNum21=1-_value27
lw $t2, 468($sp)
sub $t0, $t1, $t2
sw $t0, 492($sp)
la $t0, heap		##_value28=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 464($sp)
lw $t0, 464($sp)		##SETATTR _value28 Bool_x _valueNum21
addi $t0, $t0, 8
lw $t1, 492($sp)
sw $t1, ($t0)
lw $t0, 464($sp)		##_value29=GETATTR _value28 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 460($sp)
lw $t1, 460($sp)		##if _value29 goto loop21_Blah_bigWhile
beq $t1, 1, loop21_Blah_bigWhile
jal void_Init		##_value30=CALL void_Init
sw $v0, 456($sp)
la $t0, heap		##_value34=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 440($sp)
lw $t0, 440($sp)		##SETATTR _value34 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 548($sp)		##_value35=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 436($sp)
lw $t0, 440($sp)		##_value36=GETATTR _value34 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 432($sp)
lw $t1, 436($sp)		##_value33=_value35==_value36
lw $t2, 432($sp)
seq $t0, $t1, $t2
sw $t0, 444($sp)
la $t0, heap		##_value37=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 428($sp)
lw $t0, 428($sp)		##SETATTR _value37 Bool_x _value33
addi $t0, $t0, 8
lw $t1, 444($sp)
sw $t1, ($t0)
lw $t0, 428($sp)		##_value38=GETATTR _value37 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 424($sp)
li $t1, 1		##_valueNum32=1-_value38
lw $t2, 424($sp)
sub $t0, $t1, $t2
sw $t0, 448($sp)
la $t0, heap		##_value39=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 420($sp)
lw $t0, 420($sp)		##SETATTR _value39 Bool_x _valueNum32
addi $t0, $t0, 8
lw $t1, 448($sp)
sw $t1, ($t0)
lw $t0, 420($sp)		##_value40=GETATTR _value39 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 416($sp)
lw $t1, 416($sp)		##if _value40 goto else65_Blah_bigWhile
beq $t1, 1, else65_Blah_bigWhile
la $t0, heap		##_value44=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 400($sp)
lw $t0, 400($sp)		##SETATTR _value44 Int_x 24
addi $t0, $t0, 8
li $t1, 24
sw $t1, ($t0)
lw $t0, 540($sp)		##_value45=GETATTR ct Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 396($sp)
lw $t0, 400($sp)		##_value46=GETATTR _value44 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 392($sp)
lw $t1, 396($sp)		##_value43=_value45==_value46
lw $t2, 392($sp)
seq $t0, $t1, $t2
sw $t0, 404($sp)
la $t0, heap		##_value47=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 388($sp)
lw $t0, 388($sp)		##SETATTR _value47 Bool_x _value43
addi $t0, $t0, 8
lw $t1, 404($sp)
sw $t1, ($t0)
lw $t0, 388($sp)		##_value48=GETATTR _value47 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 384($sp)
li $t1, 1		##_valueNum42=1-_value48
lw $t2, 384($sp)
sub $t0, $t1, $t2
sw $t0, 408($sp)
la $t0, heap		##_value49=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 380($sp)
lw $t0, 380($sp)		##SETATTR _value49 Bool_x _valueNum42
addi $t0, $t0, 8
lw $t1, 408($sp)
sw $t1, ($t0)
lw $t0, 380($sp)		##_value50=GETATTR _value49 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 376($sp)
lw $t1, 376($sp)		##if _value50 goto else78_Blah_bigWhile
beq $t1, 1, else78_Blah_bigWhile
lw $t1, 580($sp)		##_value41=self
sw $t1, 412($sp)
j end79_Blah_bigWhile		##goto end79_Blah_bigWhile
else78_Blah_bigWhile:		##else78_Blah_bigWhile:
lw $t0, 580($sp)		##_Type82= TYPEOF self
sw $t0, 372($sp)
lw $t0, 580($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 372($sp)		##_value52=VCALL _Type82 Object_abort
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,4
lw $t0,($t0)
jalr $t0
sw $v0, 368($sp)
lw $t1, 368($sp)		##_value41=_value52
sw $t1, 412($sp)
end79_Blah_bigWhile:		##end79_Blah_bigWhile:
lw $t1, 412($sp)		##_value31=_value41
sw $t1, 452($sp)
j end87_Blah_bigWhile		##goto end87_Blah_bigWhile
else65_Blah_bigWhile:		##else65_Blah_bigWhile:
lw $t0, 580($sp)		##_Type90= TYPEOF self
sw $t0, 364($sp)
lw $t0, 580($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 364($sp)		##_value54=VCALL _Type90 Object_abort
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,4
lw $t0,($t0)
jalr $t0
sw $v0, 360($sp)
lw $t1, 360($sp)		##_value31=_value54
sw $t1, 452($sp)
end87_Blah_bigWhile:		##end87_Blah_bigWhile:
la $t0, heap		##_value56=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 352($sp)
lw $t1, 352($sp)		##i=_value56
sw $t1, 356($sp)
la $t0, heap		##_value58=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 344($sp)
lw $t1, 344($sp)		##j=_value58
sw $t1, 348($sp)
la $t0, heap		##_value60=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 336($sp)
lw $t1, 336($sp)		##k=_value60
sw $t1, 340($sp)
la $t0, heap		##_value62=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 328($sp)
lw $t0, 328($sp)		##SETATTR _value62 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 328($sp)		##ctI=_value62
sw $t1, 332($sp)
la $t0, heap		##_value64=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 320($sp)
lw $t0, 320($sp)		##SETATTR _value64 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 320($sp)		##ctJ=_value64
sw $t1, 324($sp)
la $t0, heap		##_value66=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 312($sp)
lw $t0, 312($sp)		##SETATTR _value66 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 312($sp)		##ctK=_value66
sw $t1, 316($sp)
la $t0, heap		##_value67=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 308($sp)
lw $t0, 308($sp)		##SETATTR _value67 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 308($sp)		##i=_value67
sw $t1, 356($sp)
j while113_Blah_bigWhile		##goto while113_Blah_bigWhile
loop114_Blah_bigWhile:		##loop114_Blah_bigWhile:
la $t0, heap		##_value68=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 304($sp)
lw $t0, 304($sp)		##SETATTR _value68 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 304($sp)		##j=_value68
sw $t1, 348($sp)
j while118_Blah_bigWhile		##goto while118_Blah_bigWhile
loop119_Blah_bigWhile:		##loop119_Blah_bigWhile:
la $t0, heap		##_value69=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 300($sp)
lw $t0, 300($sp)		##SETATTR _value69 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 300($sp)		##k=_value69
sw $t1, 340($sp)
j while123_Blah_bigWhile		##goto while123_Blah_bigWhile
loop124_Blah_bigWhile:		##loop124_Blah_bigWhile:
la $t0, heap		##_value71=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 292($sp)
lw $t0, 292($sp)		##SETATTR _value71 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 340($sp)		##_value72=GETATTR k Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 288($sp)
lw $t0, 292($sp)		##_value73=GETATTR _value71 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 284($sp)
lw $t1, 288($sp)		##_valueNum70=_value72+_value73
lw $t2, 284($sp)
add $t0, $t1, $t2
sw $t0, 296($sp)
la $t0, heap		##_value74=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 280($sp)
lw $t0, 280($sp)		##SETATTR _value74 Int_x _valueNum70
addi $t0, $t0, 8
lw $t1, 296($sp)
sw $t1, ($t0)
lw $t1, 280($sp)		##k=_value74
sw $t1, 340($sp)
la $t0, heap		##_value76=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 272($sp)
lw $t0, 272($sp)		##SETATTR _value76 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 316($sp)		##_value77=GETATTR ctK Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 268($sp)
lw $t0, 272($sp)		##_value78=GETATTR _value76 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 264($sp)
lw $t1, 268($sp)		##_valueNum75=_value77+_value78
lw $t2, 264($sp)
add $t0, $t1, $t2
sw $t0, 276($sp)
la $t0, heap		##_value79=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 260($sp)
lw $t0, 260($sp)		##SETATTR _value79 Int_x _valueNum75
addi $t0, $t0, 8
lw $t1, 276($sp)
sw $t1, ($t0)
lw $t1, 260($sp)		##ctK=_value79
sw $t1, 316($sp)
while123_Blah_bigWhile:		##while123_Blah_bigWhile:
la $t0, heap		##_value81=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 252($sp)
lw $t0, 252($sp)		##SETATTR _value81 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 340($sp)		##_value82=GETATTR k Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 248($sp)
lw $t0, 252($sp)		##_value83=GETATTR _value81 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 244($sp)
lw $t1, 248($sp)		##_value80=_value82<_value83
lw $t2, 244($sp)
slt $t0, $t1, $t2
sw $t0, 256($sp)
la $t0, heap		##_value84=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 240($sp)
lw $t0, 240($sp)		##SETATTR _value84 Bool_x _value80
addi $t0, $t0, 8
lw $t1, 256($sp)
sw $t1, ($t0)
lw $t0, 240($sp)		##_value85=GETATTR _value84 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 236($sp)
lw $t1, 236($sp)		##if _value85 goto loop124_Blah_bigWhile
beq $t1, 1, loop124_Blah_bigWhile
jal void_Init		##_value86=CALL void_Init
sw $v0, 232($sp)
la $t0, heap		##_value88=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 224($sp)
lw $t0, 224($sp)		##SETATTR _value88 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 348($sp)		##_value89=GETATTR j Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 220($sp)
lw $t0, 224($sp)		##_value90=GETATTR _value88 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 216($sp)
lw $t1, 220($sp)		##_valueNum87=_value89+_value90
lw $t2, 216($sp)
add $t0, $t1, $t2
sw $t0, 228($sp)
la $t0, heap		##_value91=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 212($sp)
lw $t0, 212($sp)		##SETATTR _value91 Int_x _valueNum87
addi $t0, $t0, 8
lw $t1, 228($sp)
sw $t1, ($t0)
lw $t1, 212($sp)		##j=_value91
sw $t1, 348($sp)
la $t0, heap		##_value93=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 204($sp)
lw $t0, 204($sp)		##SETATTR _value93 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 324($sp)		##_value94=GETATTR ctJ Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 200($sp)
lw $t0, 204($sp)		##_value95=GETATTR _value93 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 196($sp)
lw $t1, 200($sp)		##_valueNum92=_value94+_value95
lw $t2, 196($sp)
add $t0, $t1, $t2
sw $t0, 208($sp)
la $t0, heap		##_value96=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 192($sp)
lw $t0, 192($sp)		##SETATTR _value96 Int_x _valueNum92
addi $t0, $t0, 8
lw $t1, 208($sp)
sw $t1, ($t0)
lw $t1, 192($sp)		##ctJ=_value96
sw $t1, 324($sp)
while118_Blah_bigWhile:		##while118_Blah_bigWhile:
la $t0, heap		##_value98=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 184($sp)
lw $t0, 184($sp)		##SETATTR _value98 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 348($sp)		##_value99=GETATTR j Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 180($sp)
lw $t0, 184($sp)		##_value100=GETATTR _value98 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 176($sp)
lw $t1, 180($sp)		##_value97=_value99<_value100
lw $t2, 176($sp)
slt $t0, $t1, $t2
sw $t0, 188($sp)
la $t0, heap		##_value101=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 172($sp)
lw $t0, 172($sp)		##SETATTR _value101 Bool_x _value97
addi $t0, $t0, 8
lw $t1, 188($sp)
sw $t1, ($t0)
lw $t0, 172($sp)		##_value102=GETATTR _value101 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 168($sp)
lw $t1, 168($sp)		##if _value102 goto loop119_Blah_bigWhile
beq $t1, 1, loop119_Blah_bigWhile
jal void_Init		##_value103=CALL void_Init
sw $v0, 164($sp)
la $t0, heap		##_value105=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 156($sp)
lw $t0, 156($sp)		##SETATTR _value105 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 356($sp)		##_value106=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 152($sp)
lw $t0, 156($sp)		##_value107=GETATTR _value105 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 148($sp)
lw $t1, 152($sp)		##_valueNum104=_value106+_value107
lw $t2, 148($sp)
add $t0, $t1, $t2
sw $t0, 160($sp)
la $t0, heap		##_value108=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 144($sp)
lw $t0, 144($sp)		##SETATTR _value108 Int_x _valueNum104
addi $t0, $t0, 8
lw $t1, 160($sp)
sw $t1, ($t0)
lw $t1, 144($sp)		##i=_value108
sw $t1, 356($sp)
la $t0, heap		##_value110=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 136($sp)
lw $t0, 136($sp)		##SETATTR _value110 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 332($sp)		##_value111=GETATTR ctI Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 132($sp)
lw $t0, 136($sp)		##_value112=GETATTR _value110 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 128($sp)
lw $t1, 132($sp)		##_valueNum109=_value111+_value112
lw $t2, 128($sp)
add $t0, $t1, $t2
sw $t0, 140($sp)
la $t0, heap		##_value113=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 124($sp)
lw $t0, 124($sp)		##SETATTR _value113 Int_x _valueNum109
addi $t0, $t0, 8
lw $t1, 140($sp)
sw $t1, ($t0)
lw $t1, 124($sp)		##ctI=_value113
sw $t1, 332($sp)
while113_Blah_bigWhile:		##while113_Blah_bigWhile:
la $t0, heap		##_value115=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 116($sp)
lw $t0, 116($sp)		##SETATTR _value115 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 356($sp)		##_value116=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 112($sp)
lw $t0, 116($sp)		##_value117=GETATTR _value115 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 108($sp)
lw $t1, 112($sp)		##_value114=_value116<_value117
lw $t2, 108($sp)
slt $t0, $t1, $t2
sw $t0, 120($sp)
la $t0, heap		##_value118=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 104($sp)
lw $t0, 104($sp)		##SETATTR _value118 Bool_x _value114
addi $t0, $t0, 8
lw $t1, 120($sp)
sw $t1, ($t0)
lw $t0, 104($sp)		##_value119=GETATTR _value118 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 100($sp)
lw $t1, 100($sp)		##if _value119 goto loop114_Blah_bigWhile
beq $t1, 1, loop114_Blah_bigWhile
jal void_Init		##_value120=CALL void_Init
sw $v0, 96($sp)
la $t0, heap		##_value122=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 88($sp)
lw $t0, 88($sp)		##SETATTR _value122 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 332($sp)		##_value123=GETATTR ctI Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 84($sp)
lw $t0, 88($sp)		##_value124=GETATTR _value122 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 80($sp)
lw $t1, 84($sp)		##_value121=_value123==_value124
lw $t2, 80($sp)
seq $t0, $t1, $t2
sw $t0, 92($sp)
la $t0, heap		##_value125=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value125 Bool_x _value121
addi $t0, $t0, 8
lw $t1, 92($sp)
sw $t1, ($t0)
la $t0, heap		##_value126=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 72($sp)
lw $t0, 72($sp)		##SETATTR _value126 Int_x 12
addi $t0, $t0, 8
li $t1, 12
sw $t1, ($t0)
lw $t0, 580($sp)		##_Type215= TYPEOF self
sw $t0, 68($sp)
lw $t0, 580($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 76($sp)		##arg _value125
sw $t0, -12($sp)
lw $t0, 72($sp)		##arg _value126
sw $t0, -16($sp)
lw $t0, 68($sp)		##_value128=VCALL _Type215 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 64($sp)
la $t0, heap		##_value130=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 56($sp)
lw $t0, 56($sp)		##SETATTR _value130 Int_x 100
addi $t0, $t0, 8
li $t1, 100
sw $t1, ($t0)
lw $t0, 324($sp)		##_value131=GETATTR ctJ Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 52($sp)
lw $t0, 56($sp)		##_value132=GETATTR _value130 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 48($sp)
lw $t1, 52($sp)		##_value129=_value131==_value132
lw $t2, 48($sp)
seq $t0, $t1, $t2
sw $t0, 60($sp)
la $t0, heap		##_value133=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 44($sp)
lw $t0, 44($sp)		##SETATTR _value133 Bool_x _value129
addi $t0, $t0, 8
lw $t1, 60($sp)
sw $t1, ($t0)
la $t0, heap		##_value134=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 40($sp)
lw $t0, 40($sp)		##SETATTR _value134 Int_x 123
addi $t0, $t0, 8
li $t1, 123
sw $t1, ($t0)
lw $t0, 580($sp)		##_Type229= TYPEOF self
sw $t0, 36($sp)
lw $t0, 580($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 44($sp)		##arg _value133
sw $t0, -12($sp)
lw $t0, 40($sp)		##arg _value134
sw $t0, -16($sp)
lw $t0, 36($sp)		##_value136=VCALL _Type229 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 32($sp)
la $t0, heap		##_value138=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value138 Int_x 1000
addi $t0, $t0, 8
li $t1, 1000
sw $t1, ($t0)
lw $t0, 316($sp)		##_value139=GETATTR ctK Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value140=GETATTR _value138 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_value137=_value139==_value140
lw $t2, 16($sp)
seq $t0, $t1, $t2
sw $t0, 28($sp)
la $t0, heap		##_value141=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value141 Bool_x _value137
addi $t0, $t0, 8
lw $t1, 28($sp)
sw $t1, ($t0)
la $t0, heap		##_value142=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value142 Int_x 1234
addi $t0, $t0, 8
li $t1, 1234
sw $t1, ($t0)
lw $t0, 580($sp)		##_Type243= TYPEOF self
sw $t0, 4($sp)
lw $t0, 580($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value141
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value142
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value144=VCALL _Type243 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 584($sp)		##return _value144
lw $v0, 0($sp)
addi $sp, $sp 588
jr $ra


Blah_bail:
sub $sp, $sp, 96
sw $ra, 92($sp)
##		88($sp)	self
##		84($sp)	i
li $t0, 0
sw $t0, 80($sp)		##_value0
sw $t0, 76($sp)		##_value1
sw $t0, 72($sp)		##_value2
sw $t0, 68($sp)		##_Type4
sw $t0, 64($sp)		##_isVoid5
sw $t0, 60($sp)		##_value5
sw $t0, 56($sp)		##_value6
sw $t0, 52($sp)		##_value7
sw $t0, 48($sp)		##_Type15
sw $t0, 44($sp)		##_isVoid16
sw $t0, 40($sp)		##_value10
sw $t0, 36($sp)		##_value11
sw $t0, 32($sp)		##_value12
sw $t0, 28($sp)		##_value13
sw $t0, 24($sp)		##_value14
sw $t0, 20($sp)		##_Type29
sw $t0, 16($sp)		##_isVoid30
sw $t0, 12($sp)		##_value17
sw $t0, 8($sp)		##_value18
sw $t0, 4($sp)		##_Type39
sw $t0, 0($sp)		##_value20
lw $t0, 88($sp)		##_value0=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 80($sp)
la $t0, s25		##_value1= LOAD s25
sw $t0, 76($sp)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 72($sp)
lw $t0, 72($sp)		##SETATTR _value2 String_x _value1
addi $t0, $t0, 8
lw $t1, 76($sp)
sw $t1, ($t0)
lw $t0, 80($sp)		##_Type4= TYPEOF _value0
sw $t0, 68($sp)
lw $t1, 68($sp)		##_isVoid5=_Type4!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 64($sp)
lw $t1, 64($sp)		##if _isVoid5 goto Continue_6_Blah_bail
beq $t1, 1, Continue_6_Blah_bail
la $t0, s26		##_value5= LOAD s26
sw $t0, 60($sp)
lw $a0, 60($sp)		##out_str _value5
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_6_Blah_bail:		##Continue_6_Blah_bail:
lw $t0, 80($sp)		##arg _value0
sw $t0, -8($sp)
lw $t0, 72($sp)		##arg _value2
sw $t0, -12($sp)
lw $t0, 68($sp)		##_value6=VCALL _Type4 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 56($sp)
lw $t0, 88($sp)		##_value7=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 52($sp)
lw $t0, 52($sp)		##_Type15= TYPEOF _value7
sw $t0, 48($sp)
lw $t1, 48($sp)		##_isVoid16=_Type15!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 44($sp)
lw $t1, 44($sp)		##if _isVoid16 goto Continue_17_Blah_bail
beq $t1, 1, Continue_17_Blah_bail
la $t0, s27		##_value10= LOAD s27
sw $t0, 40($sp)
lw $a0, 40($sp)		##out_str _value10
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_17_Blah_bail:		##Continue_17_Blah_bail:
lw $t0, 52($sp)		##arg _value7
sw $t0, -8($sp)
lw $t0, 84($sp)		##arg i
sw $t0, -12($sp)
lw $t0, 48($sp)		##_value11=VCALL _Type15 IO_out_int
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,20
lw $t0,($t0)
jalr $t0
sw $v0, 36($sp)
lw $t0, 88($sp)		##_value12=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 32($sp)
la $t0, s28		##_value13= LOAD s28
sw $t0, 28($sp)
la $t0, heap		##_value14=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value14 String_x _value13
addi $t0, $t0, 8
lw $t1, 28($sp)
sw $t1, ($t0)
lw $t0, 32($sp)		##_Type29= TYPEOF _value12
sw $t0, 20($sp)
lw $t1, 20($sp)		##_isVoid30=_Type29!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 16($sp)
lw $t1, 16($sp)		##if _isVoid30 goto Continue_31_Blah_bail
beq $t1, 1, Continue_31_Blah_bail
la $t0, s29		##_value17= LOAD s29
sw $t0, 12($sp)
lw $a0, 12($sp)		##out_str _value17
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_31_Blah_bail:		##Continue_31_Blah_bail:
lw $t0, 32($sp)		##arg _value12
sw $t0, -8($sp)
lw $t0, 24($sp)		##arg _value14
sw $t0, -12($sp)
lw $t0, 20($sp)		##_value18=VCALL _Type29 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 8($sp)
lw $t0, 88($sp)		##_Type39= TYPEOF self
sw $t0, 4($sp)
lw $t0, 88($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 4($sp)		##_value20=VCALL _Type39 Object_abort
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,4
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 92($sp)		##return _value20
lw $v0, 0($sp)
addi $sp, $sp 96
jr $ra


Blah_bigMath:
sub $sp, $sp, 1544
sw $ra, 1540($sp)
##		1536($sp)	self
li $t0, 0
sw $t0, 1532($sp)		##_value0
sw $t0, 1528($sp)		##_value1
sw $t0, 1524($sp)		##_valueNum2
sw $t0, 1520($sp)		##_value3
sw $t0, 1516($sp)		##_value4
sw $t0, 1512($sp)		##_value5
sw $t0, 1508($sp)		##_value6
sw $t0, 1504($sp)		##_value7
sw $t0, 1500($sp)		##_value8
sw $t0, 1496($sp)		##_value9
sw $t0, 1492($sp)		##_value10
sw $t0, 1488($sp)		##_value11
sw $t0, 1484($sp)		##_value12
sw $t0, 1480($sp)		##_value13
sw $t0, 1476($sp)		##_Type20
sw $t0, 1472($sp)		##_value15
sw $t0, 1468($sp)		##_value16
sw $t0, 1464($sp)		##_value17
sw $t0, 1460($sp)		##_value18
sw $t0, 1456($sp)		##_value19
sw $t0, 1452($sp)		##_Type35
sw $t0, 1448($sp)		##_isVoid36
sw $t0, 1444($sp)		##_value22
sw $t0, 1440($sp)		##_value23
sw $t0, 1436($sp)		##_value24
sw $t0, 1432($sp)		##_value25
sw $t0, 1428($sp)		##_value26
sw $t0, 1424($sp)		##_value27
sw $t0, 1420($sp)		##_value28
sw $t0, 1416($sp)		##_value29
sw $t0, 1412($sp)		##_value30
sw $t0, 1408($sp)		##_value31
sw $t0, 1404($sp)		##_value32
sw $t0, 1400($sp)		##_Type58
sw $t0, 1396($sp)		##_value34
sw $t0, 1392($sp)		##_value35
sw $t0, 1388($sp)		##_value36
sw $t0, 1384($sp)		##_valueNum37
sw $t0, 1380($sp)		##_value38
sw $t0, 1376($sp)		##_value39
sw $t0, 1372($sp)		##_value40
sw $t0, 1368($sp)		##_value41
sw $t0, 1364($sp)		##_value42
sw $t0, 1360($sp)		##_value43
sw $t0, 1356($sp)		##_value44
sw $t0, 1352($sp)		##_value45
sw $t0, 1348($sp)		##_value46
sw $t0, 1344($sp)		##_value47
sw $t0, 1340($sp)		##_value48
sw $t0, 1336($sp)		##_Type85
sw $t0, 1332($sp)		##_value50
sw $t0, 1328($sp)		##_value51
sw $t0, 1324($sp)		##_value52
sw $t0, 1320($sp)		##_valueNum53
sw $t0, 1316($sp)		##_value54
sw $t0, 1312($sp)		##_value55
sw $t0, 1308($sp)		##_value56
sw $t0, 1304($sp)		##_value57
sw $t0, 1300($sp)		##_value58
sw $t0, 1296($sp)		##_value59
sw $t0, 1292($sp)		##_value60
sw $t0, 1288($sp)		##_value61
sw $t0, 1284($sp)		##_value62
sw $t0, 1280($sp)		##_value63
sw $t0, 1276($sp)		##_value64
sw $t0, 1272($sp)		##_Type112
sw $t0, 1268($sp)		##_value66
sw $t0, 1264($sp)		##_value67
sw $t0, 1260($sp)		##_value68
sw $t0, 1256($sp)		##_valueNum69
sw $t0, 1252($sp)		##_value70
sw $t0, 1248($sp)		##_value71
sw $t0, 1244($sp)		##_value72
sw $t0, 1240($sp)		##_value73
sw $t0, 1236($sp)		##_value74
sw $t0, 1232($sp)		##_value75
sw $t0, 1228($sp)		##_value76
sw $t0, 1224($sp)		##_value77
sw $t0, 1220($sp)		##_value78
sw $t0, 1216($sp)		##_value79
sw $t0, 1212($sp)		##_value80
sw $t0, 1208($sp)		##_Type139
sw $t0, 1204($sp)		##_value82
sw $t0, 1200($sp)		##_value83
sw $t0, 1196($sp)		##_value84
sw $t0, 1192($sp)		##_valueNum85
sw $t0, 1188($sp)		##_value86
sw $t0, 1184($sp)		##_value87
sw $t0, 1180($sp)		##_value88
sw $t0, 1176($sp)		##_value89
sw $t0, 1172($sp)		##_isZero90
sw $t0, 1168($sp)		##_value91
sw $t0, 1164($sp)		##_value92
sw $t0, 1160($sp)		##_value93
sw $t0, 1156($sp)		##_value94
sw $t0, 1152($sp)		##_value95
sw $t0, 1148($sp)		##_value96
sw $t0, 1144($sp)		##_value97
sw $t0, 1140($sp)		##_value98
sw $t0, 1136($sp)		##_Type172
sw $t0, 1132($sp)		##_value100
sw $t0, 1128($sp)		##_value101
sw $t0, 1124($sp)		##_value102
sw $t0, 1120($sp)		##_valueNum103
sw $t0, 1116($sp)		##_valueNum104
sw $t0, 1112($sp)		##_valueNum105
sw $t0, 1108($sp)		##_value106
sw $t0, 1104($sp)		##_value107
sw $t0, 1100($sp)		##_value108
sw $t0, 1096($sp)		##_value109
sw $t0, 1092($sp)		##_value110
sw $t0, 1088($sp)		##_valueNum111
sw $t0, 1084($sp)		##_value112
sw $t0, 1080($sp)		##_value113
sw $t0, 1076($sp)		##_value114
sw $t0, 1072($sp)		##_value115
sw $t0, 1068($sp)		##_value116
sw $t0, 1064($sp)		##_value117
sw $t0, 1060($sp)		##_value118
sw $t0, 1056($sp)		##_value119
sw $t0, 1052($sp)		##_value120
sw $t0, 1048($sp)		##_value121
sw $t0, 1044($sp)		##_value122
sw $t0, 1040($sp)		##_value123
sw $t0, 1036($sp)		##_value124
sw $t0, 1032($sp)		##_value125
sw $t0, 1028($sp)		##_value126
sw $t0, 1024($sp)		##_value127
sw $t0, 1020($sp)		##_value128
sw $t0, 1016($sp)		##_value129
sw $t0, 1012($sp)		##_Type220
sw $t0, 1008($sp)		##_value131
sw $t0, 1004($sp)		##_value132
sw $t0, 1000($sp)		##_value133
sw $t0, 996($sp)		##_valueNum134
sw $t0, 992($sp)		##_valueNum135
sw $t0, 988($sp)		##_valueNum136
sw $t0, 984($sp)		##_valueNum137
sw $t0, 980($sp)		##_valueNum138
sw $t0, 976($sp)		##_value139
sw $t0, 972($sp)		##_value140
sw $t0, 968($sp)		##_value141
sw $t0, 964($sp)		##_value142
sw $t0, 960($sp)		##_isZero143
sw $t0, 956($sp)		##_value144
sw $t0, 952($sp)		##_value145
sw $t0, 948($sp)		##_value146
sw $t0, 944($sp)		##_value147
sw $t0, 940($sp)		##_value148
sw $t0, 936($sp)		##_isZero149
sw $t0, 932($sp)		##_value150
sw $t0, 928($sp)		##_value151
sw $t0, 924($sp)		##_value152
sw $t0, 920($sp)		##_value153
sw $t0, 916($sp)		##_value154
sw $t0, 912($sp)		##_isZero155
sw $t0, 908($sp)		##_value156
sw $t0, 904($sp)		##_value157
sw $t0, 900($sp)		##_value158
sw $t0, 896($sp)		##_value159
sw $t0, 892($sp)		##_value160
sw $t0, 888($sp)		##_isZero161
sw $t0, 884($sp)		##_value162
sw $t0, 880($sp)		##_value163
sw $t0, 876($sp)		##_value164
sw $t0, 872($sp)		##_value165
sw $t0, 868($sp)		##_value166
sw $t0, 864($sp)		##_isZero167
sw $t0, 860($sp)		##_value168
sw $t0, 856($sp)		##_value169
sw $t0, 852($sp)		##_value170
sw $t0, 848($sp)		##_value171
sw $t0, 844($sp)		##_value172
sw $t0, 840($sp)		##_value173
sw $t0, 836($sp)		##_value174
sw $t0, 832($sp)		##_value175
sw $t0, 828($sp)		##_Type305
sw $t0, 824($sp)		##_value177
sw $t0, 820($sp)		##_value178
sw $t0, 816($sp)		##_value179
sw $t0, 812($sp)		##_valueNum180
sw $t0, 808($sp)		##_value181
sw $t0, 804($sp)		##_valueNum182
sw $t0, 800($sp)		##_value183
sw $t0, 796($sp)		##_value184
sw $t0, 792($sp)		##_value185
sw $t0, 788($sp)		##_value186
sw $t0, 784($sp)		##_value187
sw $t0, 780($sp)		##_value188
sw $t0, 776($sp)		##_value189
sw $t0, 772($sp)		##_value190
sw $t0, 768($sp)		##_value191
sw $t0, 764($sp)		##_value192
sw $t0, 760($sp)		##_value193
sw $t0, 756($sp)		##_value194
sw $t0, 752($sp)		##_value195
sw $t0, 748($sp)		##_value196
sw $t0, 744($sp)		##_Type339
sw $t0, 740($sp)		##_value198
sw $t0, 736($sp)		##_value199
sw $t0, 732($sp)		##_value200
sw $t0, 728($sp)		##_valueNum201
sw $t0, 724($sp)		##_value202
sw $t0, 720($sp)		##_valueNum203
sw $t0, 716($sp)		##_value204
sw $t0, 712($sp)		##_valueNum205
sw $t0, 708($sp)		##_value206
sw $t0, 704($sp)		##_valueNum207
sw $t0, 700($sp)		##_value208
sw $t0, 696($sp)		##_value209
sw $t0, 692($sp)		##_value210
sw $t0, 688($sp)		##_value211
sw $t0, 684($sp)		##_value212
sw $t0, 680($sp)		##_value213
sw $t0, 676($sp)		##_value214
sw $t0, 672($sp)		##_value215
sw $t0, 668($sp)		##_value216
sw $t0, 664($sp)		##_value217
sw $t0, 660($sp)		##_value218
sw $t0, 656($sp)		##_value219
sw $t0, 652($sp)		##_value220
sw $t0, 648($sp)		##_value221
sw $t0, 644($sp)		##_value222
sw $t0, 640($sp)		##_value223
sw $t0, 636($sp)		##_value224
sw $t0, 632($sp)		##_value225
sw $t0, 628($sp)		##_value226
sw $t0, 624($sp)		##_value227
sw $t0, 620($sp)		##_Type387
sw $t0, 616($sp)		##_value229
sw $t0, 612($sp)		##_value230
sw $t0, 608($sp)		##_value231
sw $t0, 604($sp)		##_valueNum232
sw $t0, 600($sp)		##_value233
sw $t0, 596($sp)		##_valueNum234
sw $t0, 592($sp)		##_value235
sw $t0, 588($sp)		##_valueNum236
sw $t0, 584($sp)		##_value237
sw $t0, 580($sp)		##_valueNum238
sw $t0, 576($sp)		##_value239
sw $t0, 572($sp)		##_valueNum240
sw $t0, 568($sp)		##_value241
sw $t0, 564($sp)		##_valueNum242
sw $t0, 560($sp)		##_value243
sw $t0, 556($sp)		##_valueNum244
sw $t0, 552($sp)		##_value245
sw $t0, 548($sp)		##_valueNum246
sw $t0, 544($sp)		##_value247
sw $t0, 540($sp)		##_valueNum248
sw $t0, 536($sp)		##_value249
sw $t0, 532($sp)		##_value250
sw $t0, 528($sp)		##_value251
sw $t0, 524($sp)		##_value252
sw $t0, 520($sp)		##_value253
sw $t0, 516($sp)		##_value254
sw $t0, 512($sp)		##_value255
sw $t0, 508($sp)		##_value256
sw $t0, 504($sp)		##_value257
sw $t0, 500($sp)		##_value258
sw $t0, 496($sp)		##_value259
sw $t0, 492($sp)		##_value260
sw $t0, 488($sp)		##_value261
sw $t0, 484($sp)		##_value262
sw $t0, 480($sp)		##_value263
sw $t0, 476($sp)		##_value264
sw $t0, 472($sp)		##_value265
sw $t0, 468($sp)		##_value266
sw $t0, 464($sp)		##_value267
sw $t0, 460($sp)		##_value268
sw $t0, 456($sp)		##_value269
sw $t0, 452($sp)		##_value270
sw $t0, 448($sp)		##_value271
sw $t0, 444($sp)		##_value272
sw $t0, 440($sp)		##_value273
sw $t0, 436($sp)		##_value274
sw $t0, 432($sp)		##_value275
sw $t0, 428($sp)		##_value276
sw $t0, 424($sp)		##_value277
sw $t0, 420($sp)		##_value278
sw $t0, 416($sp)		##_value279
sw $t0, 412($sp)		##_value280
sw $t0, 408($sp)		##_value281
sw $t0, 404($sp)		##_value282
sw $t0, 400($sp)		##_value283
sw $t0, 396($sp)		##_Type470
sw $t0, 392($sp)		##_value285
sw $t0, 388($sp)		##_value286
sw $t0, 384($sp)		##_valueNum287
sw $t0, 380($sp)		##_value288
sw $t0, 376($sp)		##_value289
sw $t0, 372($sp)		##_value290
sw $t0, 368($sp)		##_value291
sw $t0, 364($sp)		##_Type507
sw $t0, 360($sp)		##_value293
sw $t0, 356($sp)		##_valueNum294
sw $t0, 352($sp)		##_valueNum295
sw $t0, 348($sp)		##_value296
sw $t0, 344($sp)		##_value297
sw $t0, 340($sp)		##_value298
sw $t0, 336($sp)		##_value299
sw $t0, 332($sp)		##_value300
sw $t0, 328($sp)		##_value301
sw $t0, 324($sp)		##_Type524
sw $t0, 320($sp)		##_value303
sw $t0, 316($sp)		##_value304
sw $t0, 312($sp)		##_value305
sw $t0, 308($sp)		##_value306
sw $t0, 304($sp)		##_value307
sw $t0, 300($sp)		##_value308
sw $t0, 296($sp)		##_value309
sw $t0, 292($sp)		##_value310
sw $t0, 288($sp)		##_Type540
sw $t0, 284($sp)		##_value312
sw $t0, 280($sp)		##_valueNum313
sw $t0, 276($sp)		##_value314
sw $t0, 272($sp)		##_value315
sw $t0, 268($sp)		##_value316
sw $t0, 264($sp)		##_value317
sw $t0, 260($sp)		##_value318
sw $t0, 256($sp)		##_value319
sw $t0, 252($sp)		##_value320
sw $t0, 248($sp)		##_value321
sw $t0, 244($sp)		##_value322
sw $t0, 240($sp)		##_Type560
sw $t0, 236($sp)		##_value324
sw $t0, 232($sp)		##_value325
sw $t0, 228($sp)		##_value326
sw $t0, 224($sp)		##_value327
sw $t0, 220($sp)		##_value328
sw $t0, 216($sp)		##_value329
sw $t0, 212($sp)		##_value330
sw $t0, 208($sp)		##_value331
sw $t0, 204($sp)		##_Type576
sw $t0, 200($sp)		##_value333
sw $t0, 196($sp)		##_value334
sw $t0, 192($sp)		##_value335
sw $t0, 188($sp)		##_value336
sw $t0, 184($sp)		##_value337
sw $t0, 180($sp)		##_value338
sw $t0, 176($sp)		##_value339
sw $t0, 172($sp)		##_value340
sw $t0, 168($sp)		##_Type592
sw $t0, 164($sp)		##_value342
sw $t0, 160($sp)		##_value343
sw $t0, 156($sp)		##_value344
sw $t0, 152($sp)		##_value345
sw $t0, 148($sp)		##_value346
sw $t0, 144($sp)		##_value347
sw $t0, 140($sp)		##_valueNum348
sw $t0, 136($sp)		##_value349
sw $t0, 132($sp)		##_value350
sw $t0, 128($sp)		##_value351
sw $t0, 124($sp)		##_value352
sw $t0, 120($sp)		##_value353
sw $t0, 116($sp)		##_value354
sw $t0, 112($sp)		##_value355
sw $t0, 108($sp)		##_value356
sw $t0, 104($sp)		##_value357
sw $t0, 100($sp)		##_Type619
sw $t0, 96($sp)		##_value359
sw $t0, 92($sp)		##_value360
sw $t0, 88($sp)		##_value361
sw $t0, 84($sp)		##_value362
sw $t0, 80($sp)		##_value363
sw $t0, 76($sp)		##_value364
sw $t0, 72($sp)		##_value365
sw $t0, 68($sp)		##_value366
sw $t0, 64($sp)		##_value367
sw $t0, 60($sp)		##_value368
sw $t0, 56($sp)		##_value369
sw $t0, 52($sp)		##_Type639
sw $t0, 48($sp)		##_value371
sw $t0, 44($sp)		##_value372
sw $t0, 40($sp)		##_value373
sw $t0, 36($sp)		##_value374
sw $t0, 32($sp)		##_value375
sw $t0, 28($sp)		##_value376
sw $t0, 24($sp)		##_value377
sw $t0, 20($sp)		##_value378
sw $t0, 16($sp)		##_value379
sw $t0, 12($sp)		##_value380
sw $t0, 8($sp)		##_value381
sw $t0, 4($sp)		##_Type659
sw $t0, 0($sp)		##_value383
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1520($sp)
lw $t0, 1520($sp)		##SETATTR _value3 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value4=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1516($sp)
lw $t0, 1516($sp)		##SETATTR _value4 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 1520($sp)		##_value5=GETATTR _value3 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1512($sp)
lw $t0, 1516($sp)		##_value6=GETATTR _value4 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1508($sp)
lw $t1, 1512($sp)		##_valueNum2=_value5+_value6
lw $t2, 1508($sp)
add $t0, $t1, $t2
sw $t0, 1524($sp)
la $t0, heap		##_value7=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1504($sp)
lw $t0, 1504($sp)		##SETATTR _value7 Int_x _valueNum2
addi $t0, $t0, 8
lw $t1, 1524($sp)
sw $t1, ($t0)
la $t0, heap		##_value8=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1500($sp)
lw $t0, 1500($sp)		##SETATTR _value8 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 1504($sp)		##_value9=GETATTR _value7 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1496($sp)
lw $t0, 1500($sp)		##_value10=GETATTR _value8 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1492($sp)
lw $t1, 1496($sp)		##_value1=_value9==_value10
lw $t2, 1492($sp)
seq $t0, $t1, $t2
sw $t0, 1528($sp)
la $t0, heap		##_value11=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1488($sp)
lw $t0, 1488($sp)		##SETATTR _value11 Bool_x _value1
addi $t0, $t0, 8
lw $t1, 1528($sp)
sw $t1, ($t0)
lw $t0, 1488($sp)		##_value12=GETATTR _value11 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1484($sp)
lw $t1, 1484($sp)		##if _value12 goto else17_Blah_bigMath
beq $t1, 1, else17_Blah_bigMath
la $t0, heap		##_value13=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1480($sp)
lw $t0, 1480($sp)		##SETATTR _value13 Int_x 55
addi $t0, $t0, 8
li $t1, 55
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type20= TYPEOF self
sw $t0, 1476($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1480($sp)		##arg _value13
sw $t0, -12($sp)
lw $t0, 1476($sp)		##_value15=VCALL _Type20 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1472($sp)
lw $t1, 1472($sp)		##_value0=_value15
sw $t1, 1532($sp)
j end24_Blah_bigMath		##goto end24_Blah_bigMath
else17_Blah_bigMath:		##else17_Blah_bigMath:
la $t0, heap		##_value16=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1468($sp)
lw $t0, 1468($sp)		##SETATTR _value16 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t1, 1468($sp)		##_value0=_value16
sw $t1, 1532($sp)
end24_Blah_bigMath:		##end24_Blah_bigMath:
lw $t0, 1536($sp)		##_value17=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 1464($sp)
la $t0, s30		##_value18= LOAD s30
sw $t0, 1460($sp)
la $t0, heap		##_value19=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1456($sp)
lw $t0, 1456($sp)		##SETATTR _value19 String_x _value18
addi $t0, $t0, 8
lw $t1, 1460($sp)
sw $t1, ($t0)
lw $t0, 1464($sp)		##_Type35= TYPEOF _value17
sw $t0, 1452($sp)
lw $t1, 1452($sp)		##_isVoid36=_Type35!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 1448($sp)
lw $t1, 1448($sp)		##if _isVoid36 goto Continue_37_Blah_bigMath
beq $t1, 1, Continue_37_Blah_bigMath
la $t0, s31		##_value22= LOAD s31
sw $t0, 1444($sp)
lw $a0, 1444($sp)		##out_str _value22
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_37_Blah_bigMath:		##Continue_37_Blah_bigMath:
lw $t0, 1464($sp)		##arg _value17
sw $t0, -8($sp)
lw $t0, 1456($sp)		##arg _value19
sw $t0, -12($sp)
lw $t0, 1452($sp)		##_value23=VCALL _Type35 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 1440($sp)
la $t0, heap		##_value26=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1428($sp)
lw $t0, 1428($sp)		##SETATTR _value26 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value27=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1424($sp)
lw $t0, 1424($sp)		##SETATTR _value27 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 1428($sp)		##_value28=GETATTR _value26 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1420($sp)
lw $t0, 1424($sp)		##_value29=GETATTR _value27 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1416($sp)
lw $t1, 1420($sp)		##_value25=_value28==_value29
lw $t2, 1416($sp)
seq $t0, $t1, $t2
sw $t0, 1432($sp)
la $t0, heap		##_value30=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1412($sp)
lw $t0, 1412($sp)		##SETATTR _value30 Bool_x _value25
addi $t0, $t0, 8
lw $t1, 1432($sp)
sw $t1, ($t0)
lw $t0, 1412($sp)		##_value31=GETATTR _value30 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1408($sp)
lw $t1, 1408($sp)		##if _value31 goto else55_Blah_bigMath
beq $t1, 1, else55_Blah_bigMath
la $t0, heap		##_value32=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1404($sp)
lw $t0, 1404($sp)		##SETATTR _value32 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type58= TYPEOF self
sw $t0, 1400($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1404($sp)		##arg _value32
sw $t0, -12($sp)
lw $t0, 1400($sp)		##_value34=VCALL _Type58 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1396($sp)
lw $t1, 1396($sp)		##_value24=_value34
sw $t1, 1436($sp)
j end62_Blah_bigMath		##goto end62_Blah_bigMath
else55_Blah_bigMath:		##else55_Blah_bigMath:
la $t0, heap		##_value38=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1380($sp)
lw $t0, 1380($sp)		##SETATTR _value38 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value39=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1376($sp)
lw $t0, 1376($sp)		##SETATTR _value39 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 1380($sp)		##_value40=GETATTR _value38 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1372($sp)
lw $t0, 1376($sp)		##_value41=GETATTR _value39 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1368($sp)
lw $t1, 1372($sp)		##_valueNum37=_value40+_value41
lw $t2, 1368($sp)
add $t0, $t1, $t2
sw $t0, 1384($sp)
la $t0, heap		##_value42=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1364($sp)
lw $t0, 1364($sp)		##SETATTR _value42 Int_x _valueNum37
addi $t0, $t0, 8
lw $t1, 1384($sp)
sw $t1, ($t0)
la $t0, heap		##_value43=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1360($sp)
lw $t0, 1360($sp)		##SETATTR _value43 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 1364($sp)		##_value44=GETATTR _value42 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1356($sp)
lw $t0, 1360($sp)		##_value45=GETATTR _value43 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1352($sp)
lw $t1, 1356($sp)		##_value36=_value44==_value45
lw $t2, 1352($sp)
seq $t0, $t1, $t2
sw $t0, 1388($sp)
la $t0, heap		##_value46=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1348($sp)
lw $t0, 1348($sp)		##SETATTR _value46 Bool_x _value36
addi $t0, $t0, 8
lw $t1, 1388($sp)
sw $t1, ($t0)
lw $t0, 1348($sp)		##_value47=GETATTR _value46 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1344($sp)
lw $t1, 1344($sp)		##if _value47 goto else82_Blah_bigMath
beq $t1, 1, else82_Blah_bigMath
la $t0, heap		##_value48=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1340($sp)
lw $t0, 1340($sp)		##SETATTR _value48 Int_x 9
addi $t0, $t0, 8
li $t1, 9
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type85= TYPEOF self
sw $t0, 1336($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1340($sp)		##arg _value48
sw $t0, -12($sp)
lw $t0, 1336($sp)		##_value50=VCALL _Type85 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1332($sp)
lw $t1, 1332($sp)		##_value35=_value50
sw $t1, 1392($sp)
j end89_Blah_bigMath		##goto end89_Blah_bigMath
else82_Blah_bigMath:		##else82_Blah_bigMath:
la $t0, heap		##_value54=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1316($sp)
lw $t0, 1316($sp)		##SETATTR _value54 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
la $t0, heap		##_value55=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1312($sp)
lw $t0, 1312($sp)		##SETATTR _value55 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 1316($sp)		##_value56=GETATTR _value54 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1308($sp)
lw $t0, 1312($sp)		##_value57=GETATTR _value55 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1304($sp)
lw $t1, 1308($sp)		##_valueNum53=_value56-_value57
lw $t2, 1304($sp)
sub $t0, $t1, $t2
sw $t0, 1320($sp)
la $t0, heap		##_value58=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1300($sp)
lw $t0, 1300($sp)		##SETATTR _value58 Int_x _valueNum53
addi $t0, $t0, 8
lw $t1, 1320($sp)
sw $t1, ($t0)
la $t0, heap		##_value59=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1296($sp)
lw $t0, 1296($sp)		##SETATTR _value59 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 1300($sp)		##_value60=GETATTR _value58 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1292($sp)
lw $t0, 1296($sp)		##_value61=GETATTR _value59 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1288($sp)
lw $t1, 1292($sp)		##_value52=_value60==_value61
lw $t2, 1288($sp)
seq $t0, $t1, $t2
sw $t0, 1324($sp)
la $t0, heap		##_value62=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1284($sp)
lw $t0, 1284($sp)		##SETATTR _value62 Bool_x _value52
addi $t0, $t0, 8
lw $t1, 1324($sp)
sw $t1, ($t0)
lw $t0, 1284($sp)		##_value63=GETATTR _value62 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1280($sp)
lw $t1, 1280($sp)		##if _value63 goto else109_Blah_bigMath
beq $t1, 1, else109_Blah_bigMath
la $t0, heap		##_value64=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1276($sp)
lw $t0, 1276($sp)		##SETATTR _value64 Int_x 8
addi $t0, $t0, 8
li $t1, 8
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type112= TYPEOF self
sw $t0, 1272($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1276($sp)		##arg _value64
sw $t0, -12($sp)
lw $t0, 1272($sp)		##_value66=VCALL _Type112 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1268($sp)
lw $t1, 1268($sp)		##_value51=_value66
sw $t1, 1328($sp)
j end116_Blah_bigMath		##goto end116_Blah_bigMath
else109_Blah_bigMath:		##else109_Blah_bigMath:
la $t0, heap		##_value70=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1252($sp)
lw $t0, 1252($sp)		##SETATTR _value70 Int_x 11
addi $t0, $t0, 8
li $t1, 11
sw $t1, ($t0)
la $t0, heap		##_value71=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1248($sp)
lw $t0, 1248($sp)		##SETATTR _value71 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 1252($sp)		##_value72=GETATTR _value70 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1244($sp)
lw $t0, 1248($sp)		##_value73=GETATTR _value71 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1240($sp)
lw $t1, 1244($sp)		##_valueNum69=_value72*_value73
lw $t2, 1240($sp)
mul $t0, $t1, $t2
sw $t0, 1256($sp)
la $t0, heap		##_value74=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1236($sp)
lw $t0, 1236($sp)		##SETATTR _value74 Int_x _valueNum69
addi $t0, $t0, 8
lw $t1, 1256($sp)
sw $t1, ($t0)
la $t0, heap		##_value75=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1232($sp)
lw $t0, 1232($sp)		##SETATTR _value75 Int_x 22
addi $t0, $t0, 8
li $t1, 22
sw $t1, ($t0)
lw $t0, 1236($sp)		##_value76=GETATTR _value74 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1228($sp)
lw $t0, 1232($sp)		##_value77=GETATTR _value75 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1224($sp)
lw $t1, 1228($sp)		##_value68=_value76==_value77
lw $t2, 1224($sp)
seq $t0, $t1, $t2
sw $t0, 1260($sp)
la $t0, heap		##_value78=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1220($sp)
lw $t0, 1220($sp)		##SETATTR _value78 Bool_x _value68
addi $t0, $t0, 8
lw $t1, 1260($sp)
sw $t1, ($t0)
lw $t0, 1220($sp)		##_value79=GETATTR _value78 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1216($sp)
lw $t1, 1216($sp)		##if _value79 goto else136_Blah_bigMath
beq $t1, 1, else136_Blah_bigMath
la $t0, heap		##_value80=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1212($sp)
lw $t0, 1212($sp)		##SETATTR _value80 Int_x 7
addi $t0, $t0, 8
li $t1, 7
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type139= TYPEOF self
sw $t0, 1208($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1212($sp)		##arg _value80
sw $t0, -12($sp)
lw $t0, 1208($sp)		##_value82=VCALL _Type139 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1204($sp)
lw $t1, 1204($sp)		##_value67=_value82
sw $t1, 1264($sp)
j end143_Blah_bigMath		##goto end143_Blah_bigMath
else136_Blah_bigMath:		##else136_Blah_bigMath:
la $t0, heap		##_value86=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1188($sp)
lw $t0, 1188($sp)		##SETATTR _value86 Int_x 99
addi $t0, $t0, 8
li $t1, 99
sw $t1, ($t0)
la $t0, heap		##_value87=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1184($sp)
lw $t0, 1184($sp)		##SETATTR _value87 Int_x 11
addi $t0, $t0, 8
li $t1, 11
sw $t1, ($t0)
lw $t0, 1188($sp)		##_value88=GETATTR _value86 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1180($sp)
lw $t0, 1184($sp)		##_value89=GETATTR _value87 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1176($sp)
lw $t1, 1176($sp)		##_isZero90=_value89!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 1172($sp)
lw $t1, 1172($sp)		##if _isZero90 goto Continue_153_Blah_bigMath
beq $t1, 1, Continue_153_Blah_bigMath
la $t0, s32		##_value91= LOAD s32
sw $t0, 1168($sp)
lw $a0, 1168($sp)		##out_str _value91
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_153_Blah_bigMath:		##Continue_153_Blah_bigMath:
lw $t1, 1180($sp)		##_valueNum85=_value88/_value89
lw $t2, 1176($sp)
div $t0, $t1, $t2
sw $t0, 1192($sp)
la $t0, heap		##_value92=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1164($sp)
lw $t0, 1164($sp)		##SETATTR _value92 Int_x _valueNum85
addi $t0, $t0, 8
lw $t1, 1192($sp)
sw $t1, ($t0)
la $t0, heap		##_value93=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1160($sp)
lw $t0, 1160($sp)		##SETATTR _value93 Int_x 9
addi $t0, $t0, 8
li $t1, 9
sw $t1, ($t0)
lw $t0, 1164($sp)		##_value94=GETATTR _value92 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1156($sp)
lw $t0, 1160($sp)		##_value95=GETATTR _value93 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1152($sp)
lw $t1, 1156($sp)		##_value84=_value94==_value95
lw $t2, 1152($sp)
seq $t0, $t1, $t2
sw $t0, 1196($sp)
la $t0, heap		##_value96=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1148($sp)
lw $t0, 1148($sp)		##SETATTR _value96 Bool_x _value84
addi $t0, $t0, 8
lw $t1, 1196($sp)
sw $t1, ($t0)
lw $t0, 1148($sp)		##_value97=GETATTR _value96 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1144($sp)
lw $t1, 1144($sp)		##if _value97 goto else169_Blah_bigMath
beq $t1, 1, else169_Blah_bigMath
la $t0, heap		##_value98=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1140($sp)
lw $t0, 1140($sp)		##SETATTR _value98 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type172= TYPEOF self
sw $t0, 1136($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1140($sp)		##arg _value98
sw $t0, -12($sp)
lw $t0, 1136($sp)		##_value100=VCALL _Type172 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1132($sp)
lw $t1, 1132($sp)		##_value83=_value100
sw $t1, 1200($sp)
j end176_Blah_bigMath		##goto end176_Blah_bigMath
else169_Blah_bigMath:		##else169_Blah_bigMath:
la $t0, heap		##_value106=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1108($sp)
lw $t0, 1108($sp)		##SETATTR _value106 Int_x 45
addi $t0, $t0, 8
li $t1, 45
sw $t1, ($t0)
la $t0, heap		##_value107=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1104($sp)
lw $t0, 1104($sp)		##SETATTR _value107 Int_x 14
addi $t0, $t0, 8
li $t1, 14
sw $t1, ($t0)
lw $t0, 1108($sp)		##_value108=GETATTR _value106 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1100($sp)
lw $t0, 1104($sp)		##_value109=GETATTR _value107 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1096($sp)
lw $t1, 1100($sp)		##_valueNum105=_value108+_value109
lw $t2, 1096($sp)
add $t0, $t1, $t2
sw $t0, 1112($sp)
la $t0, heap		##_value110=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1092($sp)
lw $t0, 1092($sp)		##SETATTR _value110 Int_x _valueNum105
addi $t0, $t0, 8
lw $t1, 1112($sp)
sw $t1, ($t0)
la $t0, heap		##_value112=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1084($sp)
lw $t0, 1084($sp)		##SETATTR _value112 Int_x 75
addi $t0, $t0, 8
li $t1, 75
sw $t1, ($t0)
la $t0, heap		##_value113=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1080($sp)
lw $t0, 1080($sp)		##SETATTR _value113 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 1084($sp)		##_value114=GETATTR _value112 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1076($sp)
lw $t0, 1080($sp)		##_value115=GETATTR _value113 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1072($sp)
lw $t1, 1076($sp)		##_valueNum111=_value114*_value115
lw $t2, 1072($sp)
mul $t0, $t1, $t2
sw $t0, 1088($sp)
la $t0, heap		##_value116=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1068($sp)
lw $t0, 1068($sp)		##SETATTR _value116 Int_x _valueNum111
addi $t0, $t0, 8
lw $t1, 1088($sp)
sw $t1, ($t0)
lw $t0, 1092($sp)		##_value117=GETATTR _value110 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1064($sp)
lw $t0, 1068($sp)		##_value118=GETATTR _value116 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1060($sp)
lw $t1, 1064($sp)		##_valueNum104=_value117-_value118
lw $t2, 1060($sp)
sub $t0, $t1, $t2
sw $t0, 1116($sp)
la $t0, heap		##_value119=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1056($sp)
lw $t0, 1056($sp)		##SETATTR _value119 Int_x _valueNum104
addi $t0, $t0, 8
lw $t1, 1116($sp)
sw $t1, ($t0)
la $t0, heap		##_value120=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1052($sp)
lw $t0, 1052($sp)		##SETATTR _value120 Int_x 100
addi $t0, $t0, 8
li $t1, 100
sw $t1, ($t0)
lw $t0, 1056($sp)		##_value121=GETATTR _value119 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1048($sp)
lw $t0, 1052($sp)		##_value122=GETATTR _value120 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1044($sp)
lw $t1, 1048($sp)		##_valueNum103=_value121+_value122
lw $t2, 1044($sp)
add $t0, $t1, $t2
sw $t0, 1120($sp)
la $t0, heap		##_value123=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1040($sp)
lw $t0, 1040($sp)		##SETATTR _value123 Int_x _valueNum103
addi $t0, $t0, 8
lw $t1, 1120($sp)
sw $t1, ($t0)
la $t0, heap		##_value124=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1036($sp)
lw $t0, 1036($sp)		##SETATTR _value124 Int_x 9
addi $t0, $t0, 8
li $t1, 9
sw $t1, ($t0)
lw $t0, 1040($sp)		##_value125=GETATTR _value123 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1032($sp)
lw $t0, 1036($sp)		##_value126=GETATTR _value124 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1028($sp)
lw $t1, 1032($sp)		##_value102=_value125==_value126
lw $t2, 1028($sp)
seq $t0, $t1, $t2
sw $t0, 1124($sp)
la $t0, heap		##_value127=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1024($sp)
lw $t0, 1024($sp)		##SETATTR _value127 Bool_x _value102
addi $t0, $t0, 8
lw $t1, 1124($sp)
sw $t1, ($t0)
lw $t0, 1024($sp)		##_value128=GETATTR _value127 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 1020($sp)
lw $t1, 1020($sp)		##if _value128 goto else217_Blah_bigMath
beq $t1, 1, else217_Blah_bigMath
la $t0, heap		##_value129=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 1016($sp)
lw $t0, 1016($sp)		##SETATTR _value129 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type220= TYPEOF self
sw $t0, 1012($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 1016($sp)		##arg _value129
sw $t0, -12($sp)
lw $t0, 1012($sp)		##_value131=VCALL _Type220 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 1008($sp)
lw $t1, 1008($sp)		##_value101=_value131
sw $t1, 1128($sp)
j end224_Blah_bigMath		##goto end224_Blah_bigMath
else217_Blah_bigMath:		##else217_Blah_bigMath:
la $t0, heap		##_value139=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 976($sp)
lw $t0, 976($sp)		##SETATTR _value139 Int_x 100
addi $t0, $t0, 8
li $t1, 100
sw $t1, ($t0)
la $t0, heap		##_value140=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 972($sp)
lw $t0, 972($sp)		##SETATTR _value140 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 976($sp)		##_value141=GETATTR _value139 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 968($sp)
lw $t0, 972($sp)		##_value142=GETATTR _value140 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 964($sp)
lw $t1, 964($sp)		##_isZero143=_value142!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 960($sp)
lw $t1, 960($sp)		##if _isZero143 goto Continue_234_Blah_bigMath
beq $t1, 1, Continue_234_Blah_bigMath
la $t0, s33		##_value144= LOAD s33
sw $t0, 956($sp)
lw $a0, 956($sp)		##out_str _value144
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_234_Blah_bigMath:		##Continue_234_Blah_bigMath:
lw $t1, 968($sp)		##_valueNum138=_value141/_value142
lw $t2, 964($sp)
div $t0, $t1, $t2
sw $t0, 980($sp)
la $t0, heap		##_value145=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 952($sp)
lw $t0, 952($sp)		##SETATTR _value145 Int_x _valueNum138
addi $t0, $t0, 8
lw $t1, 980($sp)
sw $t1, ($t0)
la $t0, heap		##_value146=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 948($sp)
lw $t0, 948($sp)		##SETATTR _value146 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 952($sp)		##_value147=GETATTR _value145 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 944($sp)
lw $t0, 948($sp)		##_value148=GETATTR _value146 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 940($sp)
lw $t1, 940($sp)		##_isZero149=_value148!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 936($sp)
lw $t1, 936($sp)		##if _isZero149 goto Continue_247_Blah_bigMath
beq $t1, 1, Continue_247_Blah_bigMath
la $t0, s34		##_value150= LOAD s34
sw $t0, 932($sp)
lw $a0, 932($sp)		##out_str _value150
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_247_Blah_bigMath:		##Continue_247_Blah_bigMath:
lw $t1, 944($sp)		##_valueNum137=_value147/_value148
lw $t2, 940($sp)
div $t0, $t1, $t2
sw $t0, 984($sp)
la $t0, heap		##_value151=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 928($sp)
lw $t0, 928($sp)		##SETATTR _value151 Int_x _valueNum137
addi $t0, $t0, 8
lw $t1, 984($sp)
sw $t1, ($t0)
la $t0, heap		##_value152=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 924($sp)
lw $t0, 924($sp)		##SETATTR _value152 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 928($sp)		##_value153=GETATTR _value151 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 920($sp)
lw $t0, 924($sp)		##_value154=GETATTR _value152 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 916($sp)
lw $t1, 916($sp)		##_isZero155=_value154!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 912($sp)
lw $t1, 912($sp)		##if _isZero155 goto Continue_260_Blah_bigMath
beq $t1, 1, Continue_260_Blah_bigMath
la $t0, s35		##_value156= LOAD s35
sw $t0, 908($sp)
lw $a0, 908($sp)		##out_str _value156
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_260_Blah_bigMath:		##Continue_260_Blah_bigMath:
lw $t1, 920($sp)		##_valueNum136=_value153/_value154
lw $t2, 916($sp)
div $t0, $t1, $t2
sw $t0, 988($sp)
la $t0, heap		##_value157=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 904($sp)
lw $t0, 904($sp)		##SETATTR _value157 Int_x _valueNum136
addi $t0, $t0, 8
lw $t1, 988($sp)
sw $t1, ($t0)
la $t0, heap		##_value158=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 900($sp)
lw $t0, 900($sp)		##SETATTR _value158 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 904($sp)		##_value159=GETATTR _value157 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 896($sp)
lw $t0, 900($sp)		##_value160=GETATTR _value158 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 892($sp)
lw $t1, 892($sp)		##_isZero161=_value160!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 888($sp)
lw $t1, 888($sp)		##if _isZero161 goto Continue_273_Blah_bigMath
beq $t1, 1, Continue_273_Blah_bigMath
la $t0, s36		##_value162= LOAD s36
sw $t0, 884($sp)
lw $a0, 884($sp)		##out_str _value162
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_273_Blah_bigMath:		##Continue_273_Blah_bigMath:
lw $t1, 896($sp)		##_valueNum135=_value159/_value160
lw $t2, 892($sp)
div $t0, $t1, $t2
sw $t0, 992($sp)
la $t0, heap		##_value163=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 880($sp)
lw $t0, 880($sp)		##SETATTR _value163 Int_x _valueNum135
addi $t0, $t0, 8
lw $t1, 992($sp)
sw $t1, ($t0)
la $t0, heap		##_value164=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 876($sp)
lw $t0, 876($sp)		##SETATTR _value164 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 880($sp)		##_value165=GETATTR _value163 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 872($sp)
lw $t0, 876($sp)		##_value166=GETATTR _value164 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 868($sp)
lw $t1, 868($sp)		##_isZero167=_value166!=0
li $t2, 0
sne $t0, $t1, $t2
sw $t0, 864($sp)
lw $t1, 864($sp)		##if _isZero167 goto Continue_286_Blah_bigMath
beq $t1, 1, Continue_286_Blah_bigMath
la $t0, s37		##_value168= LOAD s37
sw $t0, 860($sp)
lw $a0, 860($sp)		##out_str _value168
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_286_Blah_bigMath:		##Continue_286_Blah_bigMath:
lw $t1, 872($sp)		##_valueNum134=_value165/_value166
lw $t2, 868($sp)
div $t0, $t1, $t2
sw $t0, 996($sp)
la $t0, heap		##_value169=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 856($sp)
lw $t0, 856($sp)		##SETATTR _value169 Int_x _valueNum134
addi $t0, $t0, 8
lw $t1, 996($sp)
sw $t1, ($t0)
la $t0, heap		##_value170=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 852($sp)
lw $t0, 852($sp)		##SETATTR _value170 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 856($sp)		##_value171=GETATTR _value169 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 848($sp)
lw $t0, 852($sp)		##_value172=GETATTR _value170 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 844($sp)
lw $t1, 848($sp)		##_value133=_value171==_value172
lw $t2, 844($sp)
seq $t0, $t1, $t2
sw $t0, 1000($sp)
la $t0, heap		##_value173=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 840($sp)
lw $t0, 840($sp)		##SETATTR _value173 Bool_x _value133
addi $t0, $t0, 8
lw $t1, 1000($sp)
sw $t1, ($t0)
lw $t0, 840($sp)		##_value174=GETATTR _value173 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 836($sp)
lw $t1, 836($sp)		##if _value174 goto else302_Blah_bigMath
beq $t1, 1, else302_Blah_bigMath
la $t0, heap		##_value175=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 832($sp)
lw $t0, 832($sp)		##SETATTR _value175 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type305= TYPEOF self
sw $t0, 828($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 832($sp)		##arg _value175
sw $t0, -12($sp)
lw $t0, 828($sp)		##_value177=VCALL _Type305 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 824($sp)
lw $t1, 824($sp)		##_value132=_value177
sw $t1, 1004($sp)
j end309_Blah_bigMath		##goto end309_Blah_bigMath
else302_Blah_bigMath:		##else302_Blah_bigMath:
la $t0, heap		##_value181=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 808($sp)
lw $t0, 808($sp)		##SETATTR _value181 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value183=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 800($sp)
lw $t0, 800($sp)		##SETATTR _value183 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
la $t0, heap		##_value184=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 796($sp)
lw $t0, 796($sp)		##SETATTR _value184 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 800($sp)		##_value185=GETATTR _value183 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 792($sp)
lw $t0, 796($sp)		##_value186=GETATTR _value184 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 788($sp)
lw $t1, 792($sp)		##_valueNum182=_value185+_value186
lw $t2, 788($sp)
add $t0, $t1, $t2
sw $t0, 804($sp)
la $t0, heap		##_value187=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 784($sp)
lw $t0, 784($sp)		##SETATTR _value187 Int_x _valueNum182
addi $t0, $t0, 8
lw $t1, 804($sp)
sw $t1, ($t0)
lw $t0, 808($sp)		##_value188=GETATTR _value181 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 780($sp)
lw $t0, 784($sp)		##_value189=GETATTR _value187 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 776($sp)
lw $t1, 780($sp)		##_valueNum180=_value188+_value189
lw $t2, 776($sp)
add $t0, $t1, $t2
sw $t0, 812($sp)
la $t0, heap		##_value190=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 772($sp)
lw $t0, 772($sp)		##SETATTR _value190 Int_x _valueNum180
addi $t0, $t0, 8
lw $t1, 812($sp)
sw $t1, ($t0)
la $t0, heap		##_value191=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 768($sp)
lw $t0, 768($sp)		##SETATTR _value191 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t0, 772($sp)		##_value192=GETATTR _value190 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 764($sp)
lw $t0, 768($sp)		##_value193=GETATTR _value191 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 760($sp)
lw $t1, 764($sp)		##_value179=_value192==_value193
lw $t2, 760($sp)
seq $t0, $t1, $t2
sw $t0, 816($sp)
la $t0, heap		##_value194=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 756($sp)
lw $t0, 756($sp)		##SETATTR _value194 Bool_x _value179
addi $t0, $t0, 8
lw $t1, 816($sp)
sw $t1, ($t0)
lw $t0, 756($sp)		##_value195=GETATTR _value194 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 752($sp)
lw $t1, 752($sp)		##if _value195 goto else336_Blah_bigMath
beq $t1, 1, else336_Blah_bigMath
la $t0, heap		##_value196=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 748($sp)
lw $t0, 748($sp)		##SETATTR _value196 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type339= TYPEOF self
sw $t0, 744($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 748($sp)		##arg _value196
sw $t0, -12($sp)
lw $t0, 744($sp)		##_value198=VCALL _Type339 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 740($sp)
lw $t1, 740($sp)		##_value178=_value198
sw $t1, 820($sp)
j end343_Blah_bigMath		##goto end343_Blah_bigMath
else336_Blah_bigMath:		##else336_Blah_bigMath:
la $t0, heap		##_value202=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 724($sp)
lw $t0, 724($sp)		##SETATTR _value202 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value204=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 716($sp)
lw $t0, 716($sp)		##SETATTR _value204 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
la $t0, heap		##_value206=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 708($sp)
lw $t0, 708($sp)		##SETATTR _value206 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
la $t0, heap		##_value208=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 700($sp)
lw $t0, 700($sp)		##SETATTR _value208 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
la $t0, heap		##_value209=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 696($sp)
lw $t0, 696($sp)		##SETATTR _value209 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 700($sp)		##_value210=GETATTR _value208 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 692($sp)
lw $t0, 696($sp)		##_value211=GETATTR _value209 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 688($sp)
lw $t1, 692($sp)		##_valueNum207=_value210+_value211
lw $t2, 688($sp)
add $t0, $t1, $t2
sw $t0, 704($sp)
la $t0, heap		##_value212=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 684($sp)
lw $t0, 684($sp)		##SETATTR _value212 Int_x _valueNum207
addi $t0, $t0, 8
lw $t1, 704($sp)
sw $t1, ($t0)
lw $t0, 708($sp)		##_value213=GETATTR _value206 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 680($sp)
lw $t0, 684($sp)		##_value214=GETATTR _value212 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 676($sp)
lw $t1, 680($sp)		##_valueNum205=_value213+_value214
lw $t2, 676($sp)
add $t0, $t1, $t2
sw $t0, 712($sp)
la $t0, heap		##_value215=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 672($sp)
lw $t0, 672($sp)		##SETATTR _value215 Int_x _valueNum205
addi $t0, $t0, 8
lw $t1, 712($sp)
sw $t1, ($t0)
lw $t0, 716($sp)		##_value216=GETATTR _value204 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 668($sp)
lw $t0, 672($sp)		##_value217=GETATTR _value215 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 664($sp)
lw $t1, 668($sp)		##_valueNum203=_value216+_value217
lw $t2, 664($sp)
add $t0, $t1, $t2
sw $t0, 720($sp)
la $t0, heap		##_value218=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 660($sp)
lw $t0, 660($sp)		##SETATTR _value218 Int_x _valueNum203
addi $t0, $t0, 8
lw $t1, 720($sp)
sw $t1, ($t0)
lw $t0, 724($sp)		##_value219=GETATTR _value202 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 656($sp)
lw $t0, 660($sp)		##_value220=GETATTR _value218 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 652($sp)
lw $t1, 656($sp)		##_valueNum201=_value219+_value220
lw $t2, 652($sp)
add $t0, $t1, $t2
sw $t0, 728($sp)
la $t0, heap		##_value221=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 648($sp)
lw $t0, 648($sp)		##SETATTR _value221 Int_x _valueNum201
addi $t0, $t0, 8
lw $t1, 728($sp)
sw $t1, ($t0)
la $t0, heap		##_value222=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 644($sp)
lw $t0, 644($sp)		##SETATTR _value222 Int_x 15
addi $t0, $t0, 8
li $t1, 15
sw $t1, ($t0)
lw $t0, 648($sp)		##_value223=GETATTR _value221 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 640($sp)
lw $t0, 644($sp)		##_value224=GETATTR _value222 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 636($sp)
lw $t1, 640($sp)		##_value200=_value223==_value224
lw $t2, 636($sp)
seq $t0, $t1, $t2
sw $t0, 732($sp)
la $t0, heap		##_value225=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 632($sp)
lw $t0, 632($sp)		##SETATTR _value225 Bool_x _value200
addi $t0, $t0, 8
lw $t1, 732($sp)
sw $t1, ($t0)
lw $t0, 632($sp)		##_value226=GETATTR _value225 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 628($sp)
lw $t1, 628($sp)		##if _value226 goto else384_Blah_bigMath
beq $t1, 1, else384_Blah_bigMath
la $t0, heap		##_value227=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 624($sp)
lw $t0, 624($sp)		##SETATTR _value227 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type387= TYPEOF self
sw $t0, 620($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 624($sp)		##arg _value227
sw $t0, -12($sp)
lw $t0, 620($sp)		##_value229=VCALL _Type387 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 616($sp)
lw $t1, 616($sp)		##_value199=_value229
sw $t1, 736($sp)
j end391_Blah_bigMath		##goto end391_Blah_bigMath
else384_Blah_bigMath:		##else384_Blah_bigMath:
la $t0, heap		##_value233=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 600($sp)
lw $t0, 600($sp)		##SETATTR _value233 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value235=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 592($sp)
lw $t0, 592($sp)		##SETATTR _value235 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
la $t0, heap		##_value237=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 584($sp)
lw $t0, 584($sp)		##SETATTR _value237 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
la $t0, heap		##_value239=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 576($sp)
lw $t0, 576($sp)		##SETATTR _value239 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
la $t0, heap		##_value241=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 568($sp)
lw $t0, 568($sp)		##SETATTR _value241 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
la $t0, heap		##_value243=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 560($sp)
lw $t0, 560($sp)		##SETATTR _value243 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
la $t0, heap		##_value245=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 552($sp)
lw $t0, 552($sp)		##SETATTR _value245 Int_x 7
addi $t0, $t0, 8
li $t1, 7
sw $t1, ($t0)
la $t0, heap		##_value247=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 544($sp)
lw $t0, 544($sp)		##SETATTR _value247 Int_x 8
addi $t0, $t0, 8
li $t1, 8
sw $t1, ($t0)
la $t0, heap		##_value249=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 536($sp)
lw $t0, 536($sp)		##SETATTR _value249 Int_x 9
addi $t0, $t0, 8
li $t1, 9
sw $t1, ($t0)
la $t0, heap		##_value250=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 532($sp)
lw $t0, 532($sp)		##SETATTR _value250 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 536($sp)		##_value251=GETATTR _value249 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 528($sp)
lw $t0, 532($sp)		##_value252=GETATTR _value250 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 524($sp)
lw $t1, 528($sp)		##_valueNum248=_value251+_value252
lw $t2, 524($sp)
add $t0, $t1, $t2
sw $t0, 540($sp)
la $t0, heap		##_value253=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 520($sp)
lw $t0, 520($sp)		##SETATTR _value253 Int_x _valueNum248
addi $t0, $t0, 8
lw $t1, 540($sp)
sw $t1, ($t0)
lw $t0, 544($sp)		##_value254=GETATTR _value247 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 516($sp)
lw $t0, 520($sp)		##_value255=GETATTR _value253 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 512($sp)
lw $t1, 516($sp)		##_valueNum246=_value254+_value255
lw $t2, 512($sp)
add $t0, $t1, $t2
sw $t0, 548($sp)
la $t0, heap		##_value256=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 508($sp)
lw $t0, 508($sp)		##SETATTR _value256 Int_x _valueNum246
addi $t0, $t0, 8
lw $t1, 548($sp)
sw $t1, ($t0)
lw $t0, 552($sp)		##_value257=GETATTR _value245 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 504($sp)
lw $t0, 508($sp)		##_value258=GETATTR _value256 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 500($sp)
lw $t1, 504($sp)		##_valueNum244=_value257+_value258
lw $t2, 500($sp)
add $t0, $t1, $t2
sw $t0, 556($sp)
la $t0, heap		##_value259=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 496($sp)
lw $t0, 496($sp)		##SETATTR _value259 Int_x _valueNum244
addi $t0, $t0, 8
lw $t1, 556($sp)
sw $t1, ($t0)
lw $t0, 560($sp)		##_value260=GETATTR _value243 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 492($sp)
lw $t0, 496($sp)		##_value261=GETATTR _value259 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 488($sp)
lw $t1, 492($sp)		##_valueNum242=_value260+_value261
lw $t2, 488($sp)
add $t0, $t1, $t2
sw $t0, 564($sp)
la $t0, heap		##_value262=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 484($sp)
lw $t0, 484($sp)		##SETATTR _value262 Int_x _valueNum242
addi $t0, $t0, 8
lw $t1, 564($sp)
sw $t1, ($t0)
lw $t0, 568($sp)		##_value263=GETATTR _value241 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 480($sp)
lw $t0, 484($sp)		##_value264=GETATTR _value262 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 476($sp)
lw $t1, 480($sp)		##_valueNum240=_value263+_value264
lw $t2, 476($sp)
add $t0, $t1, $t2
sw $t0, 572($sp)
la $t0, heap		##_value265=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 472($sp)
lw $t0, 472($sp)		##SETATTR _value265 Int_x _valueNum240
addi $t0, $t0, 8
lw $t1, 572($sp)
sw $t1, ($t0)
lw $t0, 576($sp)		##_value266=GETATTR _value239 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 468($sp)
lw $t0, 472($sp)		##_value267=GETATTR _value265 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 464($sp)
lw $t1, 468($sp)		##_valueNum238=_value266+_value267
lw $t2, 464($sp)
add $t0, $t1, $t2
sw $t0, 580($sp)
la $t0, heap		##_value268=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 460($sp)
lw $t0, 460($sp)		##SETATTR _value268 Int_x _valueNum238
addi $t0, $t0, 8
lw $t1, 580($sp)
sw $t1, ($t0)
lw $t0, 584($sp)		##_value269=GETATTR _value237 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 456($sp)
lw $t0, 460($sp)		##_value270=GETATTR _value268 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 452($sp)
lw $t1, 456($sp)		##_valueNum236=_value269+_value270
lw $t2, 452($sp)
add $t0, $t1, $t2
sw $t0, 588($sp)
la $t0, heap		##_value271=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 448($sp)
lw $t0, 448($sp)		##SETATTR _value271 Int_x _valueNum236
addi $t0, $t0, 8
lw $t1, 588($sp)
sw $t1, ($t0)
lw $t0, 592($sp)		##_value272=GETATTR _value235 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 444($sp)
lw $t0, 448($sp)		##_value273=GETATTR _value271 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 440($sp)
lw $t1, 444($sp)		##_valueNum234=_value272+_value273
lw $t2, 440($sp)
add $t0, $t1, $t2
sw $t0, 596($sp)
la $t0, heap		##_value274=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 436($sp)
lw $t0, 436($sp)		##SETATTR _value274 Int_x _valueNum234
addi $t0, $t0, 8
lw $t1, 596($sp)
sw $t1, ($t0)
lw $t0, 600($sp)		##_value275=GETATTR _value233 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 432($sp)
lw $t0, 436($sp)		##_value276=GETATTR _value274 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 428($sp)
lw $t1, 432($sp)		##_valueNum232=_value275+_value276
lw $t2, 428($sp)
add $t0, $t1, $t2
sw $t0, 604($sp)
la $t0, heap		##_value277=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 424($sp)
lw $t0, 424($sp)		##SETATTR _value277 Int_x _valueNum232
addi $t0, $t0, 8
lw $t1, 604($sp)
sw $t1, ($t0)
la $t0, heap		##_value278=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 420($sp)
lw $t0, 420($sp)		##SETATTR _value278 Int_x 55
addi $t0, $t0, 8
li $t1, 55
sw $t1, ($t0)
lw $t0, 424($sp)		##_value279=GETATTR _value277 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 416($sp)
lw $t0, 420($sp)		##_value280=GETATTR _value278 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 412($sp)
lw $t1, 416($sp)		##_value231=_value279==_value280
lw $t2, 412($sp)
seq $t0, $t1, $t2
sw $t0, 608($sp)
la $t0, heap		##_value281=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 408($sp)
lw $t0, 408($sp)		##SETATTR _value281 Bool_x _value231
addi $t0, $t0, 8
lw $t1, 608($sp)
sw $t1, ($t0)
lw $t0, 408($sp)		##_value282=GETATTR _value281 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 404($sp)
lw $t1, 404($sp)		##if _value282 goto else467_Blah_bigMath
beq $t1, 1, else467_Blah_bigMath
la $t0, heap		##_value283=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 400($sp)
lw $t0, 400($sp)		##SETATTR _value283 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type470= TYPEOF self
sw $t0, 396($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 400($sp)		##arg _value283
sw $t0, -12($sp)
lw $t0, 396($sp)		##_value285=VCALL _Type470 Blah_bail
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,92
lw $t0,($t0)
jalr $t0
sw $v0, 392($sp)
lw $t1, 392($sp)		##_value230=_value285
sw $t1, 612($sp)
j end474_Blah_bigMath		##goto end474_Blah_bigMath
else467_Blah_bigMath:		##else467_Blah_bigMath:
la $t0, heap		##_value286=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 388($sp)
lw $t0, 388($sp)		##SETATTR _value286 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 388($sp)		##_value230=_value286
sw $t1, 612($sp)
end474_Blah_bigMath:		##end474_Blah_bigMath:
lw $t1, 612($sp)		##_value199=_value230
sw $t1, 736($sp)
end391_Blah_bigMath:		##end391_Blah_bigMath:
lw $t1, 736($sp)		##_value178=_value199
sw $t1, 820($sp)
end343_Blah_bigMath:		##end343_Blah_bigMath:
lw $t1, 820($sp)		##_value132=_value178
sw $t1, 1004($sp)
end309_Blah_bigMath:		##end309_Blah_bigMath:
lw $t1, 1004($sp)		##_value101=_value132
sw $t1, 1128($sp)
end224_Blah_bigMath:		##end224_Blah_bigMath:
lw $t1, 1128($sp)		##_value83=_value101
sw $t1, 1200($sp)
end176_Blah_bigMath:		##end176_Blah_bigMath:
lw $t1, 1200($sp)		##_value67=_value83
sw $t1, 1264($sp)
end143_Blah_bigMath:		##end143_Blah_bigMath:
lw $t1, 1264($sp)		##_value51=_value67
sw $t1, 1328($sp)
end116_Blah_bigMath:		##end116_Blah_bigMath:
lw $t1, 1328($sp)		##_value35=_value51
sw $t1, 1392($sp)
end89_Blah_bigMath:		##end89_Blah_bigMath:
lw $t1, 1392($sp)		##_value24=_value35
sw $t1, 1436($sp)
end62_Blah_bigMath:		##end62_Blah_bigMath:
la $t0, heap		##_value288=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 380($sp)
lw $t0, 380($sp)		##SETATTR _value288 Bool_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 380($sp)		##_value289=GETATTR _value288 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 376($sp)
li $t1, 1		##_valueNum287=1-_value289
lw $t2, 376($sp)
sub $t0, $t1, $t2
sw $t0, 384($sp)
la $t0, heap		##_value290=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 372($sp)
lw $t0, 372($sp)		##SETATTR _value290 Bool_x _valueNum287
addi $t0, $t0, 8
lw $t1, 384($sp)
sw $t1, ($t0)
la $t0, heap		##_value291=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 368($sp)
lw $t0, 368($sp)		##SETATTR _value291 Int_x 250
addi $t0, $t0, 8
li $t1, 250
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type507= TYPEOF self
sw $t0, 364($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 372($sp)		##arg _value290
sw $t0, -12($sp)
lw $t0, 368($sp)		##arg _value291
sw $t0, -16($sp)
lw $t0, 364($sp)		##_value293=VCALL _Type507 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 360($sp)
la $t0, heap		##_value296=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 348($sp)
lw $t0, 348($sp)		##SETATTR _value296 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 348($sp)		##_value297=GETATTR _value296 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 344($sp)
li $t1, 1		##_valueNum295=1-_value297
lw $t2, 344($sp)
sub $t0, $t1, $t2
sw $t0, 352($sp)
la $t0, heap		##_value298=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 340($sp)
lw $t0, 340($sp)		##SETATTR _value298 Bool_x _valueNum295
addi $t0, $t0, 8
lw $t1, 352($sp)
sw $t1, ($t0)
lw $t0, 340($sp)		##_value299=GETATTR _value298 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 336($sp)
li $t1, 1		##_valueNum294=1-_value299
lw $t2, 336($sp)
sub $t0, $t1, $t2
sw $t0, 356($sp)
la $t0, heap		##_value300=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 332($sp)
lw $t0, 332($sp)		##SETATTR _value300 Bool_x _valueNum294
addi $t0, $t0, 8
lw $t1, 356($sp)
sw $t1, ($t0)
la $t0, heap		##_value301=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 328($sp)
lw $t0, 328($sp)		##SETATTR _value301 Int_x 251
addi $t0, $t0, 8
li $t1, 251
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type524= TYPEOF self
sw $t0, 324($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 332($sp)		##arg _value300
sw $t0, -12($sp)
lw $t0, 328($sp)		##arg _value301
sw $t0, -16($sp)
lw $t0, 324($sp)		##_value303=VCALL _Type524 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 320($sp)
la $t0, heap		##_value305=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 312($sp)
lw $t0, 312($sp)		##SETATTR _value305 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
la $t0, heap		##_value306=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 308($sp)
lw $t0, 308($sp)		##SETATTR _value306 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 312($sp)		##_value307=GETATTR _value305 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 304($sp)
lw $t0, 308($sp)		##_value308=GETATTR _value306 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 300($sp)
lw $t1, 304($sp)		##_value304=_value307<_value308
lw $t2, 300($sp)
slt $t0, $t1, $t2
sw $t0, 316($sp)
la $t0, heap		##_value309=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 296($sp)
lw $t0, 296($sp)		##SETATTR _value309 Bool_x _value304
addi $t0, $t0, 8
lw $t1, 316($sp)
sw $t1, ($t0)
la $t0, heap		##_value310=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 292($sp)
lw $t0, 292($sp)		##SETATTR _value310 Int_x 253
addi $t0, $t0, 8
li $t1, 253
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type540= TYPEOF self
sw $t0, 288($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 296($sp)		##arg _value309
sw $t0, -12($sp)
lw $t0, 292($sp)		##arg _value310
sw $t0, -16($sp)
lw $t0, 288($sp)		##_value312=VCALL _Type540 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 284($sp)
la $t0, heap		##_value315=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 272($sp)
lw $t0, 272($sp)		##SETATTR _value315 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
la $t0, heap		##_value316=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 268($sp)
lw $t0, 268($sp)		##SETATTR _value316 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 272($sp)		##_value317=GETATTR _value315 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 264($sp)
lw $t0, 268($sp)		##_value318=GETATTR _value316 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 260($sp)
lw $t1, 264($sp)		##_value314=_value317<_value318
lw $t2, 260($sp)
slt $t0, $t1, $t2
sw $t0, 276($sp)
la $t0, heap		##_value319=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 256($sp)
lw $t0, 256($sp)		##SETATTR _value319 Bool_x _value314
addi $t0, $t0, 8
lw $t1, 276($sp)
sw $t1, ($t0)
lw $t0, 256($sp)		##_value320=GETATTR _value319 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 252($sp)
li $t1, 1		##_valueNum313=1-_value320
lw $t2, 252($sp)
sub $t0, $t1, $t2
sw $t0, 280($sp)
la $t0, heap		##_value321=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 248($sp)
lw $t0, 248($sp)		##SETATTR _value321 Bool_x _valueNum313
addi $t0, $t0, 8
lw $t1, 280($sp)
sw $t1, ($t0)
la $t0, heap		##_value322=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 244($sp)
lw $t0, 244($sp)		##SETATTR _value322 Int_x 254
addi $t0, $t0, 8
li $t1, 254
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type560= TYPEOF self
sw $t0, 240($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 248($sp)		##arg _value321
sw $t0, -12($sp)
lw $t0, 244($sp)		##arg _value322
sw $t0, -16($sp)
lw $t0, 240($sp)		##_value324=VCALL _Type560 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 236($sp)
la $t0, heap		##_value326=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 228($sp)
lw $t0, 228($sp)		##SETATTR _value326 Int_x 65
addi $t0, $t0, 8
li $t1, 65
sw $t1, ($t0)
la $t0, heap		##_value327=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 224($sp)
lw $t0, 224($sp)		##SETATTR _value327 Int_x 66
addi $t0, $t0, 8
li $t1, 66
sw $t1, ($t0)
lw $t0, 228($sp)		##_value328=GETATTR _value326 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 220($sp)
lw $t0, 224($sp)		##_value329=GETATTR _value327 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 216($sp)
lw $t1, 220($sp)		##_value325=_value328<=_value329
lw $t2, 216($sp)
sle $t0, $t1, $t2
sw $t0, 232($sp)
la $t0, heap		##_value330=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 212($sp)
lw $t0, 212($sp)		##SETATTR _value330 Bool_x _value325
addi $t0, $t0, 8
lw $t1, 232($sp)
sw $t1, ($t0)
la $t0, heap		##_value331=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 208($sp)
lw $t0, 208($sp)		##SETATTR _value331 Int_x 255
addi $t0, $t0, 8
li $t1, 255
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type576= TYPEOF self
sw $t0, 204($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 212($sp)		##arg _value330
sw $t0, -12($sp)
lw $t0, 208($sp)		##arg _value331
sw $t0, -16($sp)
lw $t0, 204($sp)		##_value333=VCALL _Type576 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 200($sp)
la $t0, heap		##_value335=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 192($sp)
lw $t0, 192($sp)		##SETATTR _value335 Int_x 65
addi $t0, $t0, 8
li $t1, 65
sw $t1, ($t0)
la $t0, heap		##_value336=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 188($sp)
lw $t0, 188($sp)		##SETATTR _value336 Int_x 65
addi $t0, $t0, 8
li $t1, 65
sw $t1, ($t0)
lw $t0, 192($sp)		##_value337=GETATTR _value335 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 184($sp)
lw $t0, 188($sp)		##_value338=GETATTR _value336 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 180($sp)
lw $t1, 184($sp)		##_value334=_value337<=_value338
lw $t2, 180($sp)
sle $t0, $t1, $t2
sw $t0, 196($sp)
la $t0, heap		##_value339=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 176($sp)
lw $t0, 176($sp)		##SETATTR _value339 Bool_x _value334
addi $t0, $t0, 8
lw $t1, 196($sp)
sw $t1, ($t0)
la $t0, heap		##_value340=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 172($sp)
lw $t0, 172($sp)		##SETATTR _value340 Int_x 255
addi $t0, $t0, 8
li $t1, 255
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type592= TYPEOF self
sw $t0, 168($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 176($sp)		##arg _value339
sw $t0, -12($sp)
lw $t0, 172($sp)		##arg _value340
sw $t0, -16($sp)
lw $t0, 168($sp)		##_value342=VCALL _Type592 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 164($sp)
la $t0, heap		##_value345=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 152($sp)
lw $t0, 152($sp)		##SETATTR _value345 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 152($sp)		##_value346=GETATTR _value345 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 148($sp)
lw $t1, 148($sp)		##_value344=-_value346
neg $t0, $t1
sw $t0, 156($sp)
la $t0, heap		##_value347=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 144($sp)
lw $t0, 144($sp)		##SETATTR _value347 Int_x _value344
addi $t0, $t0, 8
lw $t1, 156($sp)
sw $t1, ($t0)
la $t0, heap		##_value349=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 136($sp)
lw $t0, 136($sp)		##SETATTR _value349 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
la $t0, heap		##_value350=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 132($sp)
lw $t0, 132($sp)		##SETATTR _value350 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 136($sp)		##_value351=GETATTR _value349 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 128($sp)
lw $t0, 132($sp)		##_value352=GETATTR _value350 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 124($sp)
lw $t1, 128($sp)		##_valueNum348=_value351-_value352
lw $t2, 124($sp)
sub $t0, $t1, $t2
sw $t0, 140($sp)
la $t0, heap		##_value353=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 120($sp)
lw $t0, 120($sp)		##SETATTR _value353 Int_x _valueNum348
addi $t0, $t0, 8
lw $t1, 140($sp)
sw $t1, ($t0)
lw $t0, 144($sp)		##_value354=GETATTR _value347 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 116($sp)
lw $t0, 120($sp)		##_value355=GETATTR _value353 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 112($sp)
lw $t1, 116($sp)		##_value343=_value354==_value355
lw $t2, 112($sp)
seq $t0, $t1, $t2
sw $t0, 160($sp)
la $t0, heap		##_value356=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 108($sp)
lw $t0, 108($sp)		##SETATTR _value356 Bool_x _value343
addi $t0, $t0, 8
lw $t1, 160($sp)
sw $t1, ($t0)
la $t0, heap		##_value357=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 104($sp)
lw $t0, 104($sp)		##SETATTR _value357 Int_x 257
addi $t0, $t0, 8
li $t1, 257
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type619= TYPEOF self
sw $t0, 100($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 108($sp)		##arg _value356
sw $t0, -12($sp)
lw $t0, 104($sp)		##arg _value357
sw $t0, -16($sp)
lw $t0, 100($sp)		##_value359=VCALL _Type619 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 96($sp)
la $t0, heap		##_value362=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 84($sp)
lw $t0, 84($sp)		##SETATTR _value362 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 84($sp)		##_value363=GETATTR _value362 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 80($sp)
lw $t1, 80($sp)		##_value361=-_value363
neg $t0, $t1
sw $t0, 88($sp)
la $t0, heap		##_value364=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value364 Int_x _value361
addi $t0, $t0, 8
lw $t1, 88($sp)
sw $t1, ($t0)
la $t0, heap		##_value365=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 72($sp)
lw $t0, 72($sp)		##SETATTR _value365 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 76($sp)		##_value366=GETATTR _value364 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 68($sp)
lw $t0, 72($sp)		##_value367=GETATTR _value365 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 64($sp)
lw $t1, 68($sp)		##_value360=_value366<_value367
lw $t2, 64($sp)
slt $t0, $t1, $t2
sw $t0, 92($sp)
la $t0, heap		##_value368=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 60($sp)
lw $t0, 60($sp)		##SETATTR _value368 Bool_x _value360
addi $t0, $t0, 8
lw $t1, 92($sp)
sw $t1, ($t0)
la $t0, heap		##_value369=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 56($sp)
lw $t0, 56($sp)		##SETATTR _value369 Int_x 258
addi $t0, $t0, 8
li $t1, 258
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type639= TYPEOF self
sw $t0, 52($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 60($sp)		##arg _value368
sw $t0, -12($sp)
lw $t0, 56($sp)		##arg _value369
sw $t0, -16($sp)
lw $t0, 52($sp)		##_value371=VCALL _Type639 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 48($sp)
la $t0, heap		##_value374=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 36($sp)
lw $t0, 36($sp)		##SETATTR _value374 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 36($sp)		##_value375=GETATTR _value374 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 32($sp)
lw $t1, 32($sp)		##_value373=-_value375
neg $t0, $t1
sw $t0, 40($sp)
la $t0, heap		##_value376=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 28($sp)
lw $t0, 28($sp)		##SETATTR _value376 Int_x _value373
addi $t0, $t0, 8
lw $t1, 40($sp)
sw $t1, ($t0)
la $t0, heap		##_value377=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value377 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 28($sp)		##_value378=GETATTR _value376 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value379=GETATTR _value377 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_value372=_value378==_value379
lw $t2, 16($sp)
seq $t0, $t1, $t2
sw $t0, 44($sp)
la $t0, heap		##_value380=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value380 Bool_x _value372
addi $t0, $t0, 8
lw $t1, 44($sp)
sw $t1, ($t0)
la $t0, heap		##_value381=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value381 Int_x 259
addi $t0, $t0, 8
li $t1, 259
sw $t1, ($t0)
lw $t0, 1536($sp)		##_Type659= TYPEOF self
sw $t0, 4($sp)
lw $t0, 1536($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value380
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value381
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value383=VCALL _Type659 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 1540($sp)		##return _value383
lw $v0, 0($sp)
addi $sp, $sp 1544
jr $ra


Blah_assert:
sub $sp, $sp, 112
sw $ra, 108($sp)
##		104($sp)	self
##		100($sp)	b
##		96($sp)	line
li $t0, 0
sw $t0, 92($sp)		##_value0
sw $t0, 88($sp)		##_value1
sw $t0, 84($sp)		##_value2
sw $t0, 80($sp)		##_value3
sw $t0, 76($sp)		##_value4
sw $t0, 72($sp)		##_Type6
sw $t0, 68($sp)		##_isVoid7
sw $t0, 64($sp)		##_value7
sw $t0, 60($sp)		##_value8
sw $t0, 56($sp)		##_value9
sw $t0, 52($sp)		##_Type17
sw $t0, 48($sp)		##_isVoid18
sw $t0, 44($sp)		##_value12
sw $t0, 40($sp)		##_value13
sw $t0, 36($sp)		##_value14
sw $t0, 32($sp)		##_value15
sw $t0, 28($sp)		##_value16
sw $t0, 24($sp)		##_Type31
sw $t0, 20($sp)		##_isVoid32
sw $t0, 16($sp)		##_value19
sw $t0, 12($sp)		##_value20
sw $t0, 8($sp)		##_Type41
sw $t0, 4($sp)		##_value22
sw $t0, 0($sp)		##_value23
lw $t0, 100($sp)		##_value1=GETATTR b Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 88($sp)
lw $t1, 88($sp)		##if _value1 goto else1_Blah_assert
beq $t1, 1, else1_Blah_assert
lw $t0, 104($sp)		##_value2=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 84($sp)
la $t0, s38		##_value3= LOAD s38
sw $t0, 80($sp)
la $t0, heap		##_value4=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value4 String_x _value3
addi $t0, $t0, 8
lw $t1, 80($sp)
sw $t1, ($t0)
lw $t0, 84($sp)		##_Type6= TYPEOF _value2
sw $t0, 72($sp)
lw $t1, 72($sp)		##_isVoid7=_Type6!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 68($sp)
lw $t1, 68($sp)		##if _isVoid7 goto Continue_8_Blah_assert
beq $t1, 1, Continue_8_Blah_assert
la $t0, s39		##_value7= LOAD s39
sw $t0, 64($sp)
lw $a0, 64($sp)		##out_str _value7
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_8_Blah_assert:		##Continue_8_Blah_assert:
lw $t0, 84($sp)		##arg _value2
sw $t0, -8($sp)
lw $t0, 76($sp)		##arg _value4
sw $t0, -12($sp)
lw $t0, 72($sp)		##_value8=VCALL _Type6 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 60($sp)
lw $t0, 104($sp)		##_value9=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 56($sp)
lw $t0, 56($sp)		##_Type17= TYPEOF _value9
sw $t0, 52($sp)
lw $t1, 52($sp)		##_isVoid18=_Type17!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 48($sp)
lw $t1, 48($sp)		##if _isVoid18 goto Continue_19_Blah_assert
beq $t1, 1, Continue_19_Blah_assert
la $t0, s40		##_value12= LOAD s40
sw $t0, 44($sp)
lw $a0, 44($sp)		##out_str _value12
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_19_Blah_assert:		##Continue_19_Blah_assert:
lw $t0, 56($sp)		##arg _value9
sw $t0, -8($sp)
lw $t0, 96($sp)		##arg line
sw $t0, -12($sp)
lw $t0, 52($sp)		##_value13=VCALL _Type17 IO_out_int
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,20
lw $t0,($t0)
jalr $t0
sw $v0, 40($sp)
lw $t0, 104($sp)		##_value14=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 36($sp)
la $t0, s41		##_value15= LOAD s41
sw $t0, 32($sp)
la $t0, heap		##_value16=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 28($sp)
lw $t0, 28($sp)		##SETATTR _value16 String_x _value15
addi $t0, $t0, 8
lw $t1, 32($sp)
sw $t1, ($t0)
lw $t0, 36($sp)		##_Type31= TYPEOF _value14
sw $t0, 24($sp)
lw $t1, 24($sp)		##_isVoid32=_Type31!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 20($sp)
lw $t1, 20($sp)		##if _isVoid32 goto Continue_33_Blah_assert
beq $t1, 1, Continue_33_Blah_assert
la $t0, s42		##_value19= LOAD s42
sw $t0, 16($sp)
lw $a0, 16($sp)		##out_str _value19
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_33_Blah_assert:		##Continue_33_Blah_assert:
lw $t0, 36($sp)		##arg _value14
sw $t0, -8($sp)
lw $t0, 28($sp)		##arg _value16
sw $t0, -12($sp)
lw $t0, 24($sp)		##_value20=VCALL _Type31 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 12($sp)
lw $t0, 104($sp)		##_Type41= TYPEOF self
sw $t0, 8($sp)
lw $t0, 104($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 8($sp)		##_value22=VCALL _Type41 Object_abort
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,4
lw $t0,($t0)
jalr $t0
sw $v0, 4($sp)
lw $t1, 4($sp)		##_value0=_value22
sw $t1, 92($sp)
j end44_Blah_assert		##goto end44_Blah_assert
else1_Blah_assert:		##else1_Blah_assert:
la $t0, heap		##_value23=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value23 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 0($sp)		##_value0=_value23
sw $t1, 92($sp)
end44_Blah_assert:		##end44_Blah_assert:
lw $ra, 108($sp)		##return _value0
lw $v0, 92($sp)
addi $sp, $sp 112
jr $ra


Blah_bigAssign:
sub $sp, $sp, 872
sw $ra, 868($sp)
##		864($sp)	self
li $t0, 0
sw $t0, 860($sp)		##x
sw $t0, 856($sp)		##_value1
sw $t0, 852($sp)		##y
sw $t0, 848($sp)		##_value3
sw $t0, 844($sp)		##z
sw $t0, 840($sp)		##_value5
sw $t0, 836($sp)		##_value6
sw $t0, 832($sp)		##_value7
sw $t0, 828($sp)		##_value8
sw $t0, 824($sp)		##_Type10
sw $t0, 820($sp)		##_isVoid11
sw $t0, 816($sp)		##_value11
sw $t0, 812($sp)		##_value12
sw $t0, 808($sp)		##_value13
sw $t0, 804($sp)		##_value14
sw $t0, 800($sp)		##_value15
sw $t0, 796($sp)		##_value16
sw $t0, 792($sp)		##_value17
sw $t0, 788($sp)		##_value18
sw $t0, 784($sp)		##_Type29
sw $t0, 780($sp)		##_value20
sw $t0, 776($sp)		##_value21
sw $t0, 772($sp)		##_value22
sw $t0, 768($sp)		##_value23
sw $t0, 764($sp)		##_value24
sw $t0, 760($sp)		##_value25
sw $t0, 756($sp)		##_value26
sw $t0, 752($sp)		##_Type43
sw $t0, 748($sp)		##_value28
sw $t0, 744($sp)		##_value29
sw $t0, 740($sp)		##_value30
sw $t0, 736($sp)		##_value31
sw $t0, 732($sp)		##_value32
sw $t0, 728($sp)		##_value33
sw $t0, 724($sp)		##_value34
sw $t0, 720($sp)		##_Type57
sw $t0, 716($sp)		##_value36
sw $t0, 712($sp)		##_value37
sw $t0, 708($sp)		##_value38
sw $t0, 704($sp)		##_value39
sw $t0, 700($sp)		##_value40
sw $t0, 696($sp)		##_value41
sw $t0, 692($sp)		##_value42
sw $t0, 688($sp)		##_value43
sw $t0, 684($sp)		##_value44
sw $t0, 680($sp)		##_value45
sw $t0, 676($sp)		##_Type80
sw $t0, 672($sp)		##_value47
sw $t0, 668($sp)		##_value48
sw $t0, 664($sp)		##_value49
sw $t0, 660($sp)		##_value50
sw $t0, 656($sp)		##_value51
sw $t0, 652($sp)		##_value52
sw $t0, 648($sp)		##_value53
sw $t0, 644($sp)		##_Type94
sw $t0, 640($sp)		##_value55
sw $t0, 636($sp)		##_value56
sw $t0, 632($sp)		##_value57
sw $t0, 628($sp)		##_value58
sw $t0, 624($sp)		##_value59
sw $t0, 620($sp)		##_value60
sw $t0, 616($sp)		##_value61
sw $t0, 612($sp)		##_Type108
sw $t0, 608($sp)		##_value63
sw $t0, 604($sp)		##_value64
sw $t0, 600($sp)		##_value65
sw $t0, 596($sp)		##_value66
sw $t0, 592($sp)		##_value67
sw $t0, 588($sp)		##_value68
sw $t0, 584($sp)		##_value69
sw $t0, 580($sp)		##_value70
sw $t0, 576($sp)		##_value71
sw $t0, 572($sp)		##_value72
sw $t0, 568($sp)		##_Type131
sw $t0, 564($sp)		##_value74
sw $t0, 560($sp)		##_value75
sw $t0, 556($sp)		##_value76
sw $t0, 552($sp)		##_value77
sw $t0, 548($sp)		##_value78
sw $t0, 544($sp)		##_value79
sw $t0, 540($sp)		##_value80
sw $t0, 536($sp)		##_Type145
sw $t0, 532($sp)		##_value82
sw $t0, 528($sp)		##_value83
sw $t0, 524($sp)		##_value84
sw $t0, 520($sp)		##_value85
sw $t0, 516($sp)		##_value86
sw $t0, 512($sp)		##_value87
sw $t0, 508($sp)		##_value88
sw $t0, 504($sp)		##_Type159
sw $t0, 500($sp)		##_value90
sw $t0, 496($sp)		##_value91
sw $t0, 492($sp)		##_value92
sw $t0, 488($sp)		##_value93
sw $t0, 484($sp)		##_value94
sw $t0, 480($sp)		##_value95
sw $t0, 476($sp)		##_value96
sw $t0, 472($sp)		##_value97
sw $t0, 468($sp)		##_Type177
sw $t0, 464($sp)		##_value99
sw $t0, 460($sp)		##_value100
sw $t0, 456($sp)		##_value101
sw $t0, 452($sp)		##_value102
sw $t0, 448($sp)		##_value103
sw $t0, 444($sp)		##_value104
sw $t0, 440($sp)		##_value105
sw $t0, 436($sp)		##_Type191
sw $t0, 432($sp)		##_value107
sw $t0, 428($sp)		##_value108
sw $t0, 424($sp)		##_value109
sw $t0, 420($sp)		##_value110
sw $t0, 416($sp)		##_value111
sw $t0, 412($sp)		##_value112
sw $t0, 408($sp)		##_value113
sw $t0, 404($sp)		##_Type205
sw $t0, 400($sp)		##_value115
sw $t0, 396($sp)		##_valueNum116
sw $t0, 392($sp)		##_value117
sw $t0, 388($sp)		##_value118
sw $t0, 384($sp)		##_value119
sw $t0, 380($sp)		##_value120
sw $t0, 376($sp)		##_valueNum121
sw $t0, 372($sp)		##_value122
sw $t0, 368($sp)		##_value123
sw $t0, 364($sp)		##_value124
sw $t0, 360($sp)		##_value125
sw $t0, 356($sp)		##_valueNum126
sw $t0, 352($sp)		##_valueNum127
sw $t0, 348($sp)		##_value128
sw $t0, 344($sp)		##_value129
sw $t0, 340($sp)		##_value130
sw $t0, 336($sp)		##_value131
sw $t0, 332($sp)		##_value132
sw $t0, 328($sp)		##_value133
sw $t0, 324($sp)		##_value134
sw $t0, 320($sp)		##_valueNum135
sw $t0, 316($sp)		##_value136
sw $t0, 312($sp)		##_value137
sw $t0, 308($sp)		##_value138
sw $t0, 304($sp)		##_value139
sw $t0, 300($sp)		##_value140
sw $t0, 296($sp)		##_value141
sw $t0, 292($sp)		##_value142
sw $t0, 288($sp)		##_value143
sw $t0, 284($sp)		##_value144
sw $t0, 280($sp)		##_value145
sw $t0, 276($sp)		##_Type256
sw $t0, 272($sp)		##_value147
sw $t0, 268($sp)		##_value148
sw $t0, 264($sp)		##_value149
sw $t0, 260($sp)		##_value150
sw $t0, 256($sp)		##_value151
sw $t0, 252($sp)		##_value152
sw $t0, 248($sp)		##_value153
sw $t0, 244($sp)		##_Type270
sw $t0, 240($sp)		##_value155
sw $t0, 236($sp)		##_value156
sw $t0, 232($sp)		##_value157
sw $t0, 228($sp)		##_value158
sw $t0, 224($sp)		##_value159
sw $t0, 220($sp)		##_value160
sw $t0, 216($sp)		##_value161
sw $t0, 212($sp)		##_Type284
sw $t0, 208($sp)		##_value163
sw $t0, 204($sp)		##_value164
sw $t0, 200($sp)		##_value165
sw $t0, 196($sp)		##_value166
sw $t0, 192($sp)		##_value167
sw $t0, 188($sp)		##_value168
sw $t0, 184($sp)		##_value169
sw $t0, 180($sp)		##_Type301
sw $t0, 176($sp)		##_value171
sw $t0, 172($sp)		##_value172
sw $t0, 168($sp)		##_value173
sw $t0, 164($sp)		##_value174
sw $t0, 160($sp)		##_value175
sw $t0, 156($sp)		##_value176
sw $t0, 152($sp)		##_value177
sw $t0, 148($sp)		##_Type315
sw $t0, 144($sp)		##_value179
sw $t0, 140($sp)		##_value180
sw $t0, 136($sp)		##_value181
sw $t0, 132($sp)		##_value182
sw $t0, 128($sp)		##_value183
sw $t0, 124($sp)		##_value184
sw $t0, 120($sp)		##_value185
sw $t0, 116($sp)		##_Type329
sw $t0, 112($sp)		##_value187
sw $t0, 108($sp)		##_value188
sw $t0, 104($sp)		##_valueNum189
sw $t0, 100($sp)		##_value190
sw $t0, 96($sp)		##_value191
sw $t0, 92($sp)		##_value192
sw $t0, 88($sp)		##_value193
sw $t0, 84($sp)		##_value194
sw $t0, 80($sp)		##_value195
sw $t0, 76($sp)		##_value196
sw $t0, 72($sp)		##_value197
sw $t0, 68($sp)		##_Type348
sw $t0, 64($sp)		##_value199
sw $t0, 60($sp)		##_value200
sw $t0, 56($sp)		##_value201
sw $t0, 52($sp)		##_value202
sw $t0, 48($sp)		##_value203
sw $t0, 44($sp)		##_value204
sw $t0, 40($sp)		##_value205
sw $t0, 36($sp)		##_Type362
sw $t0, 32($sp)		##_value207
sw $t0, 28($sp)		##_value208
sw $t0, 24($sp)		##_value209
sw $t0, 20($sp)		##_value210
sw $t0, 16($sp)		##_value211
sw $t0, 12($sp)		##_value212
sw $t0, 8($sp)		##_value213
sw $t0, 4($sp)		##_Type376
sw $t0, 0($sp)		##_value215
la $t0, heap		##_value1=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 856($sp)
lw $t1, 856($sp)		##x=_value1
sw $t1, 860($sp)
la $t0, heap		##_value3=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 848($sp)
lw $t1, 848($sp)		##y=_value3
sw $t1, 852($sp)
la $t0, heap		##_value5=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 840($sp)
lw $t1, 840($sp)		##z=_value5
sw $t1, 844($sp)
lw $t0, 864($sp)		##_value6=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 836($sp)
la $t0, s43		##_value7= LOAD s43
sw $t0, 832($sp)
la $t0, heap		##_value8=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 828($sp)
lw $t0, 828($sp)		##SETATTR _value8 String_x _value7
addi $t0, $t0, 8
lw $t1, 832($sp)
sw $t1, ($t0)
lw $t0, 836($sp)		##_Type10= TYPEOF _value6
sw $t0, 824($sp)
lw $t1, 824($sp)		##_isVoid11=_Type10!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 820($sp)
lw $t1, 820($sp)		##if _isVoid11 goto Continue_12_Blah_bigAssign
beq $t1, 1, Continue_12_Blah_bigAssign
la $t0, s44		##_value11= LOAD s44
sw $t0, 816($sp)
lw $a0, 816($sp)		##out_str _value11
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_12_Blah_bigAssign:		##Continue_12_Blah_bigAssign:
lw $t0, 836($sp)		##arg _value6
sw $t0, -8($sp)
lw $t0, 828($sp)		##arg _value8
sw $t0, -12($sp)
lw $t0, 824($sp)		##_value12=VCALL _Type10 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 812($sp)
la $t0, heap		##_value14=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 804($sp)
lw $t0, 804($sp)		##SETATTR _value14 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 860($sp)		##_value15=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 800($sp)
lw $t0, 804($sp)		##_value16=GETATTR _value14 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 796($sp)
lw $t1, 800($sp)		##_value13=_value15==_value16
lw $t2, 796($sp)
seq $t0, $t1, $t2
sw $t0, 808($sp)
la $t0, heap		##_value17=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 792($sp)
lw $t0, 792($sp)		##SETATTR _value17 Bool_x _value13
addi $t0, $t0, 8
lw $t1, 808($sp)
sw $t1, ($t0)
la $t0, heap		##_value18=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 788($sp)
lw $t0, 788($sp)		##SETATTR _value18 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type29= TYPEOF self
sw $t0, 784($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 792($sp)		##arg _value17
sw $t0, -12($sp)
lw $t0, 788($sp)		##arg _value18
sw $t0, -16($sp)
lw $t0, 784($sp)		##_value20=VCALL _Type29 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 780($sp)
la $t0, heap		##_value22=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 772($sp)
lw $t0, 772($sp)		##SETATTR _value22 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 852($sp)		##_value23=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 768($sp)
lw $t0, 772($sp)		##_value24=GETATTR _value22 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 764($sp)
lw $t1, 768($sp)		##_value21=_value23==_value24
lw $t2, 764($sp)
seq $t0, $t1, $t2
sw $t0, 776($sp)
la $t0, heap		##_value25=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 760($sp)
lw $t0, 760($sp)		##SETATTR _value25 Bool_x _value21
addi $t0, $t0, 8
lw $t1, 776($sp)
sw $t1, ($t0)
la $t0, heap		##_value26=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 756($sp)
lw $t0, 756($sp)		##SETATTR _value26 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type43= TYPEOF self
sw $t0, 752($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 760($sp)		##arg _value25
sw $t0, -12($sp)
lw $t0, 756($sp)		##arg _value26
sw $t0, -16($sp)
lw $t0, 752($sp)		##_value28=VCALL _Type43 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 748($sp)
la $t0, heap		##_value30=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 740($sp)
lw $t0, 740($sp)		##SETATTR _value30 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $t0, 844($sp)		##_value31=GETATTR z Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 736($sp)
lw $t0, 740($sp)		##_value32=GETATTR _value30 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 732($sp)
lw $t1, 736($sp)		##_value29=_value31==_value32
lw $t2, 732($sp)
seq $t0, $t1, $t2
sw $t0, 744($sp)
la $t0, heap		##_value33=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 728($sp)
lw $t0, 728($sp)		##SETATTR _value33 Bool_x _value29
addi $t0, $t0, 8
lw $t1, 744($sp)
sw $t1, ($t0)
la $t0, heap		##_value34=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 724($sp)
lw $t0, 724($sp)		##SETATTR _value34 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type57= TYPEOF self
sw $t0, 720($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 728($sp)		##arg _value33
sw $t0, -12($sp)
lw $t0, 724($sp)		##arg _value34
sw $t0, -16($sp)
lw $t0, 720($sp)		##_value36=VCALL _Type57 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 716($sp)
la $t0, heap		##_value37=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 712($sp)
lw $t0, 712($sp)		##SETATTR _value37 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 712($sp)		##x=_value37
sw $t1, 860($sp)
la $t0, heap		##_value38=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 708($sp)
lw $t0, 708($sp)		##SETATTR _value38 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 708($sp)		##y=_value38
sw $t1, 852($sp)
la $t0, heap		##_value39=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 704($sp)
lw $t0, 704($sp)		##SETATTR _value39 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 704($sp)		##z=_value39
sw $t1, 844($sp)
la $t0, heap		##_value41=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 696($sp)
lw $t0, 696($sp)		##SETATTR _value41 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 860($sp)		##_value42=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 692($sp)
lw $t0, 696($sp)		##_value43=GETATTR _value41 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 688($sp)
lw $t1, 692($sp)		##_value40=_value42==_value43
lw $t2, 688($sp)
seq $t0, $t1, $t2
sw $t0, 700($sp)
la $t0, heap		##_value44=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 684($sp)
lw $t0, 684($sp)		##SETATTR _value44 Bool_x _value40
addi $t0, $t0, 8
lw $t1, 700($sp)
sw $t1, ($t0)
la $t0, heap		##_value45=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 680($sp)
lw $t0, 680($sp)		##SETATTR _value45 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type80= TYPEOF self
sw $t0, 676($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 684($sp)		##arg _value44
sw $t0, -12($sp)
lw $t0, 680($sp)		##arg _value45
sw $t0, -16($sp)
lw $t0, 676($sp)		##_value47=VCALL _Type80 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 672($sp)
la $t0, heap		##_value49=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 664($sp)
lw $t0, 664($sp)		##SETATTR _value49 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 852($sp)		##_value50=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 660($sp)
lw $t0, 664($sp)		##_value51=GETATTR _value49 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 656($sp)
lw $t1, 660($sp)		##_value48=_value50==_value51
lw $t2, 656($sp)
seq $t0, $t1, $t2
sw $t0, 668($sp)
la $t0, heap		##_value52=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 652($sp)
lw $t0, 652($sp)		##SETATTR _value52 Bool_x _value48
addi $t0, $t0, 8
lw $t1, 668($sp)
sw $t1, ($t0)
la $t0, heap		##_value53=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 648($sp)
lw $t0, 648($sp)		##SETATTR _value53 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type94= TYPEOF self
sw $t0, 644($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 652($sp)		##arg _value52
sw $t0, -12($sp)
lw $t0, 648($sp)		##arg _value53
sw $t0, -16($sp)
lw $t0, 644($sp)		##_value55=VCALL _Type94 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 640($sp)
la $t0, heap		##_value57=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 632($sp)
lw $t0, 632($sp)		##SETATTR _value57 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 844($sp)		##_value58=GETATTR z Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 628($sp)
lw $t0, 632($sp)		##_value59=GETATTR _value57 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 624($sp)
lw $t1, 628($sp)		##_value56=_value58==_value59
lw $t2, 624($sp)
seq $t0, $t1, $t2
sw $t0, 636($sp)
la $t0, heap		##_value60=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 620($sp)
lw $t0, 620($sp)		##SETATTR _value60 Bool_x _value56
addi $t0, $t0, 8
lw $t1, 636($sp)
sw $t1, ($t0)
la $t0, heap		##_value61=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 616($sp)
lw $t0, 616($sp)		##SETATTR _value61 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type108= TYPEOF self
sw $t0, 612($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 620($sp)		##arg _value60
sw $t0, -12($sp)
lw $t0, 616($sp)		##arg _value61
sw $t0, -16($sp)
lw $t0, 612($sp)		##_value63=VCALL _Type108 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 608($sp)
la $t0, heap		##_value64=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 604($sp)
lw $t0, 604($sp)		##SETATTR _value64 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 604($sp)		##z=_value64
sw $t1, 844($sp)
la $t0, heap		##_value65=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 600($sp)
lw $t0, 600($sp)		##SETATTR _value65 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 600($sp)		##y=_value65
sw $t1, 852($sp)
la $t0, heap		##_value66=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 596($sp)
lw $t0, 596($sp)		##SETATTR _value66 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 596($sp)		##x=_value66
sw $t1, 860($sp)
la $t0, heap		##_value68=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 588($sp)
lw $t0, 588($sp)		##SETATTR _value68 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 844($sp)		##_value69=GETATTR z Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 584($sp)
lw $t0, 588($sp)		##_value70=GETATTR _value68 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 580($sp)
lw $t1, 584($sp)		##_value67=_value69==_value70
lw $t2, 580($sp)
seq $t0, $t1, $t2
sw $t0, 592($sp)
la $t0, heap		##_value71=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 576($sp)
lw $t0, 576($sp)		##SETATTR _value71 Bool_x _value67
addi $t0, $t0, 8
lw $t1, 592($sp)
sw $t1, ($t0)
la $t0, heap		##_value72=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 572($sp)
lw $t0, 572($sp)		##SETATTR _value72 Int_x 14
addi $t0, $t0, 8
li $t1, 14
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type131= TYPEOF self
sw $t0, 568($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 576($sp)		##arg _value71
sw $t0, -12($sp)
lw $t0, 572($sp)		##arg _value72
sw $t0, -16($sp)
lw $t0, 568($sp)		##_value74=VCALL _Type131 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 564($sp)
la $t0, heap		##_value76=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 556($sp)
lw $t0, 556($sp)		##SETATTR _value76 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 852($sp)		##_value77=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 552($sp)
lw $t0, 556($sp)		##_value78=GETATTR _value76 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 548($sp)
lw $t1, 552($sp)		##_value75=_value77==_value78
lw $t2, 548($sp)
seq $t0, $t1, $t2
sw $t0, 560($sp)
la $t0, heap		##_value79=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 544($sp)
lw $t0, 544($sp)		##SETATTR _value79 Bool_x _value75
addi $t0, $t0, 8
lw $t1, 560($sp)
sw $t1, ($t0)
la $t0, heap		##_value80=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 540($sp)
lw $t0, 540($sp)		##SETATTR _value80 Int_x 15
addi $t0, $t0, 8
li $t1, 15
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type145= TYPEOF self
sw $t0, 536($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 544($sp)		##arg _value79
sw $t0, -12($sp)
lw $t0, 540($sp)		##arg _value80
sw $t0, -16($sp)
lw $t0, 536($sp)		##_value82=VCALL _Type145 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 532($sp)
la $t0, heap		##_value84=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 524($sp)
lw $t0, 524($sp)		##SETATTR _value84 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 860($sp)		##_value85=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 520($sp)
lw $t0, 524($sp)		##_value86=GETATTR _value84 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 516($sp)
lw $t1, 520($sp)		##_value83=_value85==_value86
lw $t2, 516($sp)
seq $t0, $t1, $t2
sw $t0, 528($sp)
la $t0, heap		##_value87=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 512($sp)
lw $t0, 512($sp)		##SETATTR _value87 Bool_x _value83
addi $t0, $t0, 8
lw $t1, 528($sp)
sw $t1, ($t0)
la $t0, heap		##_value88=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 508($sp)
lw $t0, 508($sp)		##SETATTR _value88 Int_x 16
addi $t0, $t0, 8
li $t1, 16
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type159= TYPEOF self
sw $t0, 504($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 512($sp)		##arg _value87
sw $t0, -12($sp)
lw $t0, 508($sp)		##arg _value88
sw $t0, -16($sp)
lw $t0, 504($sp)		##_value90=VCALL _Type159 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 500($sp)
la $t0, heap		##_value91=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 496($sp)
lw $t0, 496($sp)		##SETATTR _value91 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t1, 496($sp)		##y=_value91
sw $t1, 852($sp)
lw $t1, 852($sp)		##x=y
sw $t1, 860($sp)
la $t0, heap		##_value93=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 488($sp)
lw $t0, 488($sp)		##SETATTR _value93 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t0, 860($sp)		##_value94=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 484($sp)
lw $t0, 488($sp)		##_value95=GETATTR _value93 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 480($sp)
lw $t1, 484($sp)		##_value92=_value94==_value95
lw $t2, 480($sp)
seq $t0, $t1, $t2
sw $t0, 492($sp)
la $t0, heap		##_value96=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 476($sp)
lw $t0, 476($sp)		##SETATTR _value96 Bool_x _value92
addi $t0, $t0, 8
lw $t1, 492($sp)
sw $t1, ($t0)
la $t0, heap		##_value97=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 472($sp)
lw $t0, 472($sp)		##SETATTR _value97 Int_x 114
addi $t0, $t0, 8
li $t1, 114
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type177= TYPEOF self
sw $t0, 468($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 476($sp)		##arg _value96
sw $t0, -12($sp)
lw $t0, 472($sp)		##arg _value97
sw $t0, -16($sp)
lw $t0, 468($sp)		##_value99=VCALL _Type177 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 464($sp)
la $t0, heap		##_value101=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 456($sp)
lw $t0, 456($sp)		##SETATTR _value101 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t0, 852($sp)		##_value102=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 452($sp)
lw $t0, 456($sp)		##_value103=GETATTR _value101 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 448($sp)
lw $t1, 452($sp)		##_value100=_value102==_value103
lw $t2, 448($sp)
seq $t0, $t1, $t2
sw $t0, 460($sp)
la $t0, heap		##_value104=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 444($sp)
lw $t0, 444($sp)		##SETATTR _value104 Bool_x _value100
addi $t0, $t0, 8
lw $t1, 460($sp)
sw $t1, ($t0)
la $t0, heap		##_value105=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 440($sp)
lw $t0, 440($sp)		##SETATTR _value105 Int_x 115
addi $t0, $t0, 8
li $t1, 115
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type191= TYPEOF self
sw $t0, 436($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 444($sp)		##arg _value104
sw $t0, -12($sp)
lw $t0, 440($sp)		##arg _value105
sw $t0, -16($sp)
lw $t0, 436($sp)		##_value107=VCALL _Type191 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 432($sp)
la $t0, heap		##_value109=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 424($sp)
lw $t0, 424($sp)		##SETATTR _value109 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 844($sp)		##_value110=GETATTR z Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 420($sp)
lw $t0, 424($sp)		##_value111=GETATTR _value109 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 416($sp)
lw $t1, 420($sp)		##_value108=_value110==_value111
lw $t2, 416($sp)
seq $t0, $t1, $t2
sw $t0, 428($sp)
la $t0, heap		##_value112=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 412($sp)
lw $t0, 412($sp)		##SETATTR _value112 Bool_x _value108
addi $t0, $t0, 8
lw $t1, 428($sp)
sw $t1, ($t0)
la $t0, heap		##_value113=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 408($sp)
lw $t0, 408($sp)		##SETATTR _value113 Int_x 116
addi $t0, $t0, 8
li $t1, 116
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type205= TYPEOF self
sw $t0, 404($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 412($sp)		##arg _value112
sw $t0, -12($sp)
lw $t0, 408($sp)		##arg _value113
sw $t0, -16($sp)
lw $t0, 404($sp)		##_value115=VCALL _Type205 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 400($sp)
la $t0, heap		##_value117=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 392($sp)
lw $t0, 392($sp)		##SETATTR _value117 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 852($sp)		##_value118=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 388($sp)
lw $t0, 392($sp)		##_value119=GETATTR _value117 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 384($sp)
lw $t1, 388($sp)		##_valueNum116=_value118+_value119
lw $t2, 384($sp)
add $t0, $t1, $t2
sw $t0, 396($sp)
la $t0, heap		##_value120=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 380($sp)
lw $t0, 380($sp)		##SETATTR _value120 Int_x _valueNum116
addi $t0, $t0, 8
lw $t1, 396($sp)
sw $t1, ($t0)
lw $t1, 380($sp)		##x=_value120
sw $t1, 860($sp)
la $t0, heap		##_value122=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 372($sp)
lw $t0, 372($sp)		##SETATTR _value122 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 860($sp)		##_value123=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 368($sp)
lw $t0, 372($sp)		##_value124=GETATTR _value122 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 364($sp)
lw $t1, 368($sp)		##_valueNum121=_value123-_value124
lw $t2, 364($sp)
sub $t0, $t1, $t2
sw $t0, 376($sp)
la $t0, heap		##_value125=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 360($sp)
lw $t0, 360($sp)		##SETATTR _value125 Int_x _valueNum121
addi $t0, $t0, 8
lw $t1, 376($sp)
sw $t1, ($t0)
lw $t1, 360($sp)		##y=_value125
sw $t1, 852($sp)
lw $t0, 860($sp)		##_value128=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 348($sp)
lw $t0, 852($sp)		##_value129=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 344($sp)
lw $t1, 348($sp)		##_valueNum127=_value128*_value129
lw $t2, 344($sp)
mul $t0, $t1, $t2
sw $t0, 352($sp)
la $t0, heap		##_value130=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 340($sp)
lw $t0, 340($sp)		##SETATTR _value130 Int_x _valueNum127
addi $t0, $t0, 8
lw $t1, 352($sp)
sw $t1, ($t0)
la $t0, heap		##_value131=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 336($sp)
lw $t0, 336($sp)		##SETATTR _value131 Int_x 14
addi $t0, $t0, 8
li $t1, 14
sw $t1, ($t0)
lw $t0, 340($sp)		##_value132=GETATTR _value130 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 332($sp)
lw $t0, 336($sp)		##_value133=GETATTR _value131 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 328($sp)
lw $t1, 332($sp)		##_valueNum126=_value132+_value133
lw $t2, 328($sp)
add $t0, $t1, $t2
sw $t0, 356($sp)
la $t0, heap		##_value134=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 324($sp)
lw $t0, 324($sp)		##SETATTR _value134 Int_x _valueNum126
addi $t0, $t0, 8
lw $t1, 356($sp)
sw $t1, ($t0)
lw $t1, 324($sp)		##z=_value134
sw $t1, 844($sp)
la $t0, heap		##_value136=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 316($sp)
lw $t0, 316($sp)		##SETATTR _value136 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 852($sp)		##_value137=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 312($sp)
lw $t0, 316($sp)		##_value138=GETATTR _value136 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 308($sp)
lw $t1, 312($sp)		##_valueNum135=_value137+_value138
lw $t2, 308($sp)
add $t0, $t1, $t2
sw $t0, 320($sp)
la $t0, heap		##_value139=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 304($sp)
lw $t0, 304($sp)		##SETATTR _value139 Int_x _valueNum135
addi $t0, $t0, 8
lw $t1, 320($sp)
sw $t1, ($t0)
lw $t1, 304($sp)		##y=_value139
sw $t1, 852($sp)
la $t0, heap		##_value141=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 296($sp)
lw $t0, 296($sp)		##SETATTR _value141 Int_x 10
addi $t0, $t0, 8
li $t1, 10
sw $t1, ($t0)
lw $t0, 860($sp)		##_value142=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 292($sp)
lw $t0, 296($sp)		##_value143=GETATTR _value141 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 288($sp)
lw $t1, 292($sp)		##_value140=_value142==_value143
lw $t2, 288($sp)
seq $t0, $t1, $t2
sw $t0, 300($sp)
la $t0, heap		##_value144=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 284($sp)
lw $t0, 284($sp)		##SETATTR _value144 Bool_x _value140
addi $t0, $t0, 8
lw $t1, 300($sp)
sw $t1, ($t0)
la $t0, heap		##_value145=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 280($sp)
lw $t0, 280($sp)		##SETATTR _value145 Int_x 2114
addi $t0, $t0, 8
li $t1, 2114
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type256= TYPEOF self
sw $t0, 276($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 284($sp)		##arg _value144
sw $t0, -12($sp)
lw $t0, 280($sp)		##arg _value145
sw $t0, -16($sp)
lw $t0, 276($sp)		##_value147=VCALL _Type256 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 272($sp)
la $t0, heap		##_value149=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 264($sp)
lw $t0, 264($sp)		##SETATTR _value149 Int_x 8
addi $t0, $t0, 8
li $t1, 8
sw $t1, ($t0)
lw $t0, 852($sp)		##_value150=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 260($sp)
lw $t0, 264($sp)		##_value151=GETATTR _value149 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 256($sp)
lw $t1, 260($sp)		##_value148=_value150==_value151
lw $t2, 256($sp)
seq $t0, $t1, $t2
sw $t0, 268($sp)
la $t0, heap		##_value152=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 252($sp)
lw $t0, 252($sp)		##SETATTR _value152 Bool_x _value148
addi $t0, $t0, 8
lw $t1, 268($sp)
sw $t1, ($t0)
la $t0, heap		##_value153=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 248($sp)
lw $t0, 248($sp)		##SETATTR _value153 Int_x 3114
addi $t0, $t0, 8
li $t1, 3114
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type270= TYPEOF self
sw $t0, 244($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 252($sp)		##arg _value152
sw $t0, -12($sp)
lw $t0, 248($sp)		##arg _value153
sw $t0, -16($sp)
lw $t0, 244($sp)		##_value155=VCALL _Type270 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 240($sp)
la $t0, heap		##_value157=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 232($sp)
lw $t0, 232($sp)		##SETATTR _value157 Int_x 84
addi $t0, $t0, 8
li $t1, 84
sw $t1, ($t0)
lw $t0, 844($sp)		##_value158=GETATTR z Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 228($sp)
lw $t0, 232($sp)		##_value159=GETATTR _value157 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 224($sp)
lw $t1, 228($sp)		##_value156=_value158==_value159
lw $t2, 224($sp)
seq $t0, $t1, $t2
sw $t0, 236($sp)
la $t0, heap		##_value160=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 220($sp)
lw $t0, 220($sp)		##SETATTR _value160 Bool_x _value156
addi $t0, $t0, 8
lw $t1, 236($sp)
sw $t1, ($t0)
la $t0, heap		##_value161=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 216($sp)
lw $t0, 216($sp)		##SETATTR _value161 Int_x 2116
addi $t0, $t0, 8
li $t1, 2116
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type284= TYPEOF self
sw $t0, 212($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 220($sp)		##arg _value160
sw $t0, -12($sp)
lw $t0, 216($sp)		##arg _value161
sw $t0, -16($sp)
lw $t0, 212($sp)		##_value163=VCALL _Type284 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 208($sp)
lw $t1, 852($sp)		##x=y
sw $t1, 860($sp)
lw $t1, 844($sp)		##y=z
sw $t1, 852($sp)
lw $t1, 860($sp)		##z=x
sw $t1, 844($sp)
la $t0, heap		##_value165=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 200($sp)
lw $t0, 200($sp)		##SETATTR _value165 Int_x 8
addi $t0, $t0, 8
li $t1, 8
sw $t1, ($t0)
lw $t0, 860($sp)		##_value166=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 196($sp)
lw $t0, 200($sp)		##_value167=GETATTR _value165 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 192($sp)
lw $t1, 196($sp)		##_value164=_value166==_value167
lw $t2, 192($sp)
seq $t0, $t1, $t2
sw $t0, 204($sp)
la $t0, heap		##_value168=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 188($sp)
lw $t0, 188($sp)		##SETATTR _value168 Bool_x _value164
addi $t0, $t0, 8
lw $t1, 204($sp)
sw $t1, ($t0)
la $t0, heap		##_value169=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 184($sp)
lw $t0, 184($sp)		##SETATTR _value169 Int_x 101
addi $t0, $t0, 8
li $t1, 101
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type301= TYPEOF self
sw $t0, 180($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 188($sp)		##arg _value168
sw $t0, -12($sp)
lw $t0, 184($sp)		##arg _value169
sw $t0, -16($sp)
lw $t0, 180($sp)		##_value171=VCALL _Type301 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 176($sp)
la $t0, heap		##_value173=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 168($sp)
lw $t0, 168($sp)		##SETATTR _value173 Int_x 84
addi $t0, $t0, 8
li $t1, 84
sw $t1, ($t0)
lw $t0, 852($sp)		##_value174=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 164($sp)
lw $t0, 168($sp)		##_value175=GETATTR _value173 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 160($sp)
lw $t1, 164($sp)		##_value172=_value174==_value175
lw $t2, 160($sp)
seq $t0, $t1, $t2
sw $t0, 172($sp)
la $t0, heap		##_value176=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 156($sp)
lw $t0, 156($sp)		##SETATTR _value176 Bool_x _value172
addi $t0, $t0, 8
lw $t1, 172($sp)
sw $t1, ($t0)
la $t0, heap		##_value177=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 152($sp)
lw $t0, 152($sp)		##SETATTR _value177 Int_x 102
addi $t0, $t0, 8
li $t1, 102
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type315= TYPEOF self
sw $t0, 148($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 156($sp)		##arg _value176
sw $t0, -12($sp)
lw $t0, 152($sp)		##arg _value177
sw $t0, -16($sp)
lw $t0, 148($sp)		##_value179=VCALL _Type315 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 144($sp)
la $t0, heap		##_value181=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 136($sp)
lw $t0, 136($sp)		##SETATTR _value181 Int_x 8
addi $t0, $t0, 8
li $t1, 8
sw $t1, ($t0)
lw $t0, 844($sp)		##_value182=GETATTR z Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 132($sp)
lw $t0, 136($sp)		##_value183=GETATTR _value181 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 128($sp)
lw $t1, 132($sp)		##_value180=_value182==_value183
lw $t2, 128($sp)
seq $t0, $t1, $t2
sw $t0, 140($sp)
la $t0, heap		##_value184=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 124($sp)
lw $t0, 124($sp)		##SETATTR _value184 Bool_x _value180
addi $t0, $t0, 8
lw $t1, 140($sp)
sw $t1, ($t0)
la $t0, heap		##_value185=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 120($sp)
lw $t0, 120($sp)		##SETATTR _value185 Int_x 103
addi $t0, $t0, 8
li $t1, 103
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type329= TYPEOF self
sw $t0, 116($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 124($sp)		##arg _value184
sw $t0, -12($sp)
lw $t0, 120($sp)		##arg _value185
sw $t0, -16($sp)
lw $t0, 116($sp)		##_value187=VCALL _Type329 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 112($sp)
lw $t0, 860($sp)		##_value190=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 100($sp)
lw $t0, 852($sp)		##_value191=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 96($sp)
lw $t1, 100($sp)		##_valueNum189=_value190+_value191
lw $t2, 96($sp)
add $t0, $t1, $t2
sw $t0, 104($sp)
la $t0, heap		##_value192=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 92($sp)
lw $t0, 92($sp)		##SETATTR _value192 Int_x _valueNum189
addi $t0, $t0, 8
lw $t1, 104($sp)
sw $t1, ($t0)
la $t0, heap		##_value193=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 88($sp)
lw $t0, 88($sp)		##SETATTR _value193 Int_x 92
addi $t0, $t0, 8
li $t1, 92
sw $t1, ($t0)
lw $t0, 92($sp)		##_value194=GETATTR _value192 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 84($sp)
lw $t0, 88($sp)		##_value195=GETATTR _value193 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 80($sp)
lw $t1, 84($sp)		##_value188=_value194==_value195
lw $t2, 80($sp)
seq $t0, $t1, $t2
sw $t0, 108($sp)
la $t0, heap		##_value196=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value196 Bool_x _value188
addi $t0, $t0, 8
lw $t1, 108($sp)
sw $t1, ($t0)
la $t0, heap		##_value197=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 72($sp)
lw $t0, 72($sp)		##SETATTR _value197 Int_x 104
addi $t0, $t0, 8
li $t1, 104
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type348= TYPEOF self
sw $t0, 68($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 76($sp)		##arg _value196
sw $t0, -12($sp)
lw $t0, 72($sp)		##arg _value197
sw $t0, -16($sp)
lw $t0, 68($sp)		##_value199=VCALL _Type348 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 64($sp)
la $t0, heap		##_value201=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 56($sp)
lw $t0, 56($sp)		##SETATTR _value201 Int_x 8
addi $t0, $t0, 8
li $t1, 8
sw $t1, ($t0)
lw $t0, 860($sp)		##_value202=GETATTR x Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 52($sp)
lw $t0, 56($sp)		##_value203=GETATTR _value201 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 48($sp)
lw $t1, 52($sp)		##_value200=_value202==_value203
lw $t2, 48($sp)
seq $t0, $t1, $t2
sw $t0, 60($sp)
la $t0, heap		##_value204=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 44($sp)
lw $t0, 44($sp)		##SETATTR _value204 Bool_x _value200
addi $t0, $t0, 8
lw $t1, 60($sp)
sw $t1, ($t0)
la $t0, heap		##_value205=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 40($sp)
lw $t0, 40($sp)		##SETATTR _value205 Int_x 105
addi $t0, $t0, 8
li $t1, 105
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type362= TYPEOF self
sw $t0, 36($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 44($sp)		##arg _value204
sw $t0, -12($sp)
lw $t0, 40($sp)		##arg _value205
sw $t0, -16($sp)
lw $t0, 36($sp)		##_value207=VCALL _Type362 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 32($sp)
la $t0, heap		##_value209=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value209 Int_x 84
addi $t0, $t0, 8
li $t1, 84
sw $t1, ($t0)
lw $t0, 852($sp)		##_value210=GETATTR y Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value211=GETATTR _value209 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_value208=_value210==_value211
lw $t2, 16($sp)
seq $t0, $t1, $t2
sw $t0, 28($sp)
la $t0, heap		##_value212=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value212 Bool_x _value208
addi $t0, $t0, 8
lw $t1, 28($sp)
sw $t1, ($t0)
la $t0, heap		##_value213=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value213 Int_x 106
addi $t0, $t0, 8
li $t1, 106
sw $t1, ($t0)
lw $t0, 864($sp)		##_Type376= TYPEOF self
sw $t0, 4($sp)
lw $t0, 864($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value212
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value213
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value215=VCALL _Type376 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 868($sp)		##return _value215
lw $v0, 0($sp)
addi $sp, $sp 872
jr $ra


Blah_setI:
sub $sp, $sp, 16
sw $ra, 12($sp)
##		8($sp)	self
##		4($sp)	newI
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 8($sp)		##SETATTR self Blah_i newI
addi $t0, $t0, 8
lw $t1, 4($sp)
sw $t1, ($t0)
lw $t0, 8($sp)		##_value0=GETATTR self Blah_i
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 0($sp)
lw $ra, 12($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 16
jr $ra


Blah_getI:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
lw $t0, 4($sp)		##_value0=GETATTR self Blah_i
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 0($sp)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


Blah_bigSelf:
sub $sp, $sp, 408
sw $ra, 404($sp)
##		400($sp)	self
li $t0, 0
sw $t0, 396($sp)		##v
sw $t0, 392($sp)		##_value1
sw $t0, 388($sp)		##s
sw $t0, 384($sp)		##t
sw $t0, 380($sp)		##_value4
sw $t0, 376($sp)		##_value5
sw $t0, 372($sp)		##_value6
sw $t0, 368($sp)		##_value7
sw $t0, 364($sp)		##_Type9
sw $t0, 360($sp)		##_isVoid10
sw $t0, 356($sp)		##_value10
sw $t0, 352($sp)		##_value11
sw $t0, 348($sp)		##_value12
sw $t0, 344($sp)		##_TypeValue13
sw $t0, 340($sp)		##_value14
sw $t0, 336($sp)		##_value15
sw $t0, 332($sp)		##_Type25
sw $t0, 328($sp)		##_value17
sw $t0, 324($sp)		##_valueNum18
sw $t0, 320($sp)		##_value19
sw $t0, 316($sp)		##_value20
sw $t0, 312($sp)		##_value21
sw $t0, 308($sp)		##_value22
sw $t0, 304($sp)		##_value23
sw $t0, 300($sp)		##_Type39
sw $t0, 296($sp)		##_value25
sw $t0, 292($sp)		##_valueNum26
sw $t0, 288($sp)		##_value27
sw $t0, 284($sp)		##_value28
sw $t0, 280($sp)		##_value29
sw $t0, 276($sp)		##_value30
sw $t0, 272($sp)		##_value31
sw $t0, 268($sp)		##_Type53
sw $t0, 264($sp)		##_value33
sw $t0, 260($sp)		##_valueNum34
sw $t0, 256($sp)		##_value35
sw $t0, 252($sp)		##_value36
sw $t0, 248($sp)		##_value37
sw $t0, 244($sp)		##_value38
sw $t0, 240($sp)		##_value39
sw $t0, 236($sp)		##_Type67
sw $t0, 232($sp)		##_value41
sw $t0, 228($sp)		##_value42
sw $t0, 224($sp)		##_Type74
sw $t0, 220($sp)		##_isVoid75
sw $t0, 216($sp)		##_value45
sw $t0, 212($sp)		##_value46
sw $t0, 208($sp)		##_value47
sw $t0, 204($sp)		##_Type86
sw $t0, 200($sp)		##_isVoid87
sw $t0, 196($sp)		##_value50
sw $t0, 192($sp)		##_value51
sw $t0, 188($sp)		##_valueNum52
sw $t0, 184($sp)		##_value53
sw $t0, 180($sp)		##_Type96
sw $t0, 176($sp)		##_isVoid97
sw $t0, 172($sp)		##_value56
sw $t0, 168($sp)		##_value57
sw $t0, 164($sp)		##_Type105
sw $t0, 160($sp)		##_isVoid106
sw $t0, 156($sp)		##_value60
sw $t0, 152($sp)		##_value61
sw $t0, 148($sp)		##_value62
sw $t0, 144($sp)		##_value63
sw $t0, 140($sp)		##_value64
sw $t0, 136($sp)		##_value65
sw $t0, 132($sp)		##_value66
sw $t0, 128($sp)		##_value67
sw $t0, 124($sp)		##_Type125
sw $t0, 120($sp)		##_value69
sw $t0, 116($sp)		##_value70
sw $t0, 112($sp)		##_value71
sw $t0, 108($sp)		##_value72
sw $t0, 104($sp)		##_Type136
sw $t0, 100($sp)		##_value74
sw $t0, 96($sp)		##_value75
sw $t0, 92($sp)		##_Type143
sw $t0, 88($sp)		##_isVoid144
sw $t0, 84($sp)		##_value78
sw $t0, 80($sp)		##_value79
sw $t0, 76($sp)		##_value80
sw $t0, 72($sp)		##_Type155
sw $t0, 68($sp)		##_isVoid156
sw $t0, 64($sp)		##_value83
sw $t0, 60($sp)		##_value84
sw $t0, 56($sp)		##_value85
sw $t0, 52($sp)		##_Type165
sw $t0, 48($sp)		##_isVoid166
sw $t0, 44($sp)		##_value88
sw $t0, 40($sp)		##_value89
sw $t0, 36($sp)		##_Type174
sw $t0, 32($sp)		##_isVoid175
sw $t0, 28($sp)		##_value92
sw $t0, 24($sp)		##_value93
sw $t0, 20($sp)		##_value94
sw $t0, 16($sp)		##_value95
sw $t0, 12($sp)		##_value96
sw $t0, 8($sp)		##_value97
sw $t0, 4($sp)		##_Type190
sw $t0, 0($sp)		##_value99
jal void_Init		##_value1=CALL void_Init
sw $v0, 392($sp)
lw $t1, 392($sp)		##v=_value1
sw $t1, 396($sp)
lw $t1, 400($sp)		##s=self
sw $t1, 388($sp)
jal Blah_Init		##_value4=CALL Blah_Init
sw $v0, 380($sp)
lw $t1, 380($sp)		##t=_value4
sw $t1, 384($sp)
lw $t0, 400($sp)		##_value5=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 376($sp)
la $t0, s45		##_value6= LOAD s45
sw $t0, 372($sp)
la $t0, heap		##_value7=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 368($sp)
lw $t0, 368($sp)		##SETATTR _value7 String_x _value6
addi $t0, $t0, 8
lw $t1, 372($sp)
sw $t1, ($t0)
lw $t0, 376($sp)		##_Type9= TYPEOF _value5
sw $t0, 364($sp)
lw $t1, 364($sp)		##_isVoid10=_Type9!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 360($sp)
lw $t1, 360($sp)		##if _isVoid10 goto Continue_11_Blah_bigSelf
beq $t1, 1, Continue_11_Blah_bigSelf
la $t0, s46		##_value10= LOAD s46
sw $t0, 356($sp)
lw $a0, 356($sp)		##out_str _value10
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_11_Blah_bigSelf:		##Continue_11_Blah_bigSelf:
lw $t0, 376($sp)		##arg _value5
sw $t0, -8($sp)
lw $t0, 368($sp)		##arg _value7
sw $t0, -12($sp)
lw $t0, 364($sp)		##_value11=VCALL _Type9 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 352($sp)
lw $t0, 396($sp)		##_TypeValue13= TYPEOF v
sw $t0, 344($sp)
lw $t1, 344($sp)		##_value12=_TypeValue13==void
lw $t1, ($t1)
la $t2, type_void_name
seq $t0, $t1, $t2
sw $t0, 348($sp)
la $t0, heap		##_value14=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 340($sp)
lw $t0, 340($sp)		##SETATTR _value14 Bool_x _value12
addi $t0, $t0, 8
lw $t1, 348($sp)
sw $t1, ($t0)
la $t0, heap		##_value15=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 336($sp)
lw $t0, 336($sp)		##SETATTR _value15 Int_x 310
addi $t0, $t0, 8
li $t1, 310
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type25= TYPEOF self
sw $t0, 332($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 340($sp)		##arg _value14
sw $t0, -12($sp)
lw $t0, 336($sp)		##arg _value15
sw $t0, -16($sp)
lw $t0, 332($sp)		##_value17=VCALL _Type25 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 328($sp)
lw $t1, 396($sp)		##_value19=v==s
lw $t2, 388($sp)
seq $t0, $t1, $t2
sw $t0, 320($sp)
la $t0, heap		##_value20=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 316($sp)
lw $t0, 316($sp)		##SETATTR _value20 Bool_x _value19
addi $t0, $t0, 8
lw $t1, 320($sp)
sw $t1, ($t0)
lw $t0, 316($sp)		##_value21=GETATTR _value20 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 312($sp)
li $t1, 1		##_valueNum18=1-_value21
lw $t2, 312($sp)
sub $t0, $t1, $t2
sw $t0, 324($sp)
la $t0, heap		##_value22=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 308($sp)
lw $t0, 308($sp)		##SETATTR _value22 Bool_x _valueNum18
addi $t0, $t0, 8
lw $t1, 324($sp)
sw $t1, ($t0)
la $t0, heap		##_value23=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 304($sp)
lw $t0, 304($sp)		##SETATTR _value23 Int_x 311
addi $t0, $t0, 8
li $t1, 311
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type39= TYPEOF self
sw $t0, 300($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 308($sp)		##arg _value22
sw $t0, -12($sp)
lw $t0, 304($sp)		##arg _value23
sw $t0, -16($sp)
lw $t0, 300($sp)		##_value25=VCALL _Type39 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 296($sp)
lw $t1, 388($sp)		##_value27=s==t
lw $t2, 384($sp)
seq $t0, $t1, $t2
sw $t0, 288($sp)
la $t0, heap		##_value28=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 284($sp)
lw $t0, 284($sp)		##SETATTR _value28 Bool_x _value27
addi $t0, $t0, 8
lw $t1, 288($sp)
sw $t1, ($t0)
lw $t0, 284($sp)		##_value29=GETATTR _value28 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 280($sp)
li $t1, 1		##_valueNum26=1-_value29
lw $t2, 280($sp)
sub $t0, $t1, $t2
sw $t0, 292($sp)
la $t0, heap		##_value30=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 276($sp)
lw $t0, 276($sp)		##SETATTR _value30 Bool_x _valueNum26
addi $t0, $t0, 8
lw $t1, 292($sp)
sw $t1, ($t0)
la $t0, heap		##_value31=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 272($sp)
lw $t0, 272($sp)		##SETATTR _value31 Int_x 312
addi $t0, $t0, 8
li $t1, 312
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type53= TYPEOF self
sw $t0, 268($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 276($sp)		##arg _value30
sw $t0, -12($sp)
lw $t0, 272($sp)		##arg _value31
sw $t0, -16($sp)
lw $t0, 268($sp)		##_value33=VCALL _Type53 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 264($sp)
lw $t1, 396($sp)		##_value35=v==t
lw $t2, 384($sp)
seq $t0, $t1, $t2
sw $t0, 256($sp)
la $t0, heap		##_value36=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 252($sp)
lw $t0, 252($sp)		##SETATTR _value36 Bool_x _value35
addi $t0, $t0, 8
lw $t1, 256($sp)
sw $t1, ($t0)
lw $t0, 252($sp)		##_value37=GETATTR _value36 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 248($sp)
li $t1, 1		##_valueNum34=1-_value37
lw $t2, 248($sp)
sub $t0, $t1, $t2
sw $t0, 260($sp)
la $t0, heap		##_value38=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 244($sp)
lw $t0, 244($sp)		##SETATTR _value38 Bool_x _valueNum34
addi $t0, $t0, 8
lw $t1, 260($sp)
sw $t1, ($t0)
la $t0, heap		##_value39=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 240($sp)
lw $t0, 240($sp)		##SETATTR _value39 Int_x 313
addi $t0, $t0, 8
li $t1, 313
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type67= TYPEOF self
sw $t0, 236($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 244($sp)		##arg _value38
sw $t0, -12($sp)
lw $t0, 240($sp)		##arg _value39
sw $t0, -16($sp)
lw $t0, 236($sp)		##_value41=VCALL _Type67 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 232($sp)
la $t0, heap		##_value42=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 228($sp)
lw $t0, 228($sp)		##SETATTR _value42 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 388($sp)		##_Type74= TYPEOF s
sw $t0, 224($sp)
lw $t1, 224($sp)		##_isVoid75=_Type74!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 220($sp)
lw $t1, 220($sp)		##if _isVoid75 goto Continue_76_Blah_bigSelf
beq $t1, 1, Continue_76_Blah_bigSelf
la $t0, s47		##_value45= LOAD s47
sw $t0, 216($sp)
lw $a0, 216($sp)		##out_str _value45
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_76_Blah_bigSelf:		##Continue_76_Blah_bigSelf:
lw $t0, 388($sp)		##arg s
sw $t0, -8($sp)
lw $t0, 228($sp)		##arg _value42
sw $t0, -12($sp)
lw $t0, 224($sp)		##_value46=VCALL _Type74 Blah_setI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,108
lw $t0,($t0)
jalr $t0
sw $v0, 212($sp)
la $t0, heap		##_value47=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 208($sp)
lw $t0, 208($sp)		##SETATTR _value47 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 384($sp)		##_Type86= TYPEOF t
sw $t0, 204($sp)
lw $t1, 204($sp)		##_isVoid87=_Type86!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 200($sp)
lw $t1, 200($sp)		##if _isVoid87 goto Continue_88_Blah_bigSelf
beq $t1, 1, Continue_88_Blah_bigSelf
la $t0, s48		##_value50= LOAD s48
sw $t0, 196($sp)
lw $a0, 196($sp)		##out_str _value50
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_88_Blah_bigSelf:		##Continue_88_Blah_bigSelf:
lw $t0, 384($sp)		##arg t
sw $t0, -8($sp)
lw $t0, 208($sp)		##arg _value47
sw $t0, -12($sp)
lw $t0, 204($sp)		##_value51=VCALL _Type86 Blah_setI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,108
lw $t0,($t0)
jalr $t0
sw $v0, 192($sp)
lw $t0, 388($sp)		##_Type96= TYPEOF s
sw $t0, 180($sp)
lw $t1, 180($sp)		##_isVoid97=_Type96!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 176($sp)
lw $t1, 176($sp)		##if _isVoid97 goto Continue_98_Blah_bigSelf
beq $t1, 1, Continue_98_Blah_bigSelf
la $t0, s49		##_value56= LOAD s49
sw $t0, 172($sp)
lw $a0, 172($sp)		##out_str _value56
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_98_Blah_bigSelf:		##Continue_98_Blah_bigSelf:
lw $t0, 388($sp)		##arg s
sw $t0, -8($sp)
lw $t0, 180($sp)		##_value57=VCALL _Type96 Blah_getI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,112
lw $t0,($t0)
jalr $t0
sw $v0, 168($sp)
lw $t0, 384($sp)		##_Type105= TYPEOF t
sw $t0, 164($sp)
lw $t1, 164($sp)		##_isVoid106=_Type105!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 160($sp)
lw $t1, 160($sp)		##if _isVoid106 goto Continue_107_Blah_bigSelf
beq $t1, 1, Continue_107_Blah_bigSelf
la $t0, s50		##_value60= LOAD s50
sw $t0, 156($sp)
lw $a0, 156($sp)		##out_str _value60
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_107_Blah_bigSelf:		##Continue_107_Blah_bigSelf:
lw $t0, 384($sp)		##arg t
sw $t0, -8($sp)
lw $t0, 164($sp)		##_value61=VCALL _Type105 Blah_getI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,112
lw $t0,($t0)
jalr $t0
sw $v0, 152($sp)
lw $t0, 168($sp)		##_value62=GETATTR _value57 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 148($sp)
lw $t0, 152($sp)		##_value63=GETATTR _value61 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 144($sp)
lw $t1, 148($sp)		##_value53=_value62==_value63
lw $t2, 144($sp)
seq $t0, $t1, $t2
sw $t0, 184($sp)
la $t0, heap		##_value64=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 140($sp)
lw $t0, 140($sp)		##SETATTR _value64 Bool_x _value53
addi $t0, $t0, 8
lw $t1, 184($sp)
sw $t1, ($t0)
lw $t0, 140($sp)		##_value65=GETATTR _value64 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 136($sp)
li $t1, 1		##_valueNum52=1-_value65
lw $t2, 136($sp)
sub $t0, $t1, $t2
sw $t0, 188($sp)
la $t0, heap		##_value66=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 132($sp)
lw $t0, 132($sp)		##SETATTR _value66 Bool_x _valueNum52
addi $t0, $t0, 8
lw $t1, 188($sp)
sw $t1, ($t0)
la $t0, heap		##_value67=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 128($sp)
lw $t0, 128($sp)		##SETATTR _value67 Int_x 320
addi $t0, $t0, 8
li $t1, 320
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type125= TYPEOF self
sw $t0, 124($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 132($sp)		##arg _value66
sw $t0, -12($sp)
lw $t0, 128($sp)		##arg _value67
sw $t0, -16($sp)
lw $t0, 124($sp)		##_value69=VCALL _Type125 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 120($sp)
lw $t1, 400($sp)		##t=self
sw $t1, 384($sp)
lw $t1, 388($sp)		##_value70=s==t
lw $t2, 384($sp)
seq $t0, $t1, $t2
sw $t0, 116($sp)
la $t0, heap		##_value71=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 112($sp)
lw $t0, 112($sp)		##SETATTR _value71 Bool_x _value70
addi $t0, $t0, 8
lw $t1, 116($sp)
sw $t1, ($t0)
la $t0, heap		##_value72=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 108($sp)
lw $t0, 108($sp)		##SETATTR _value72 Int_x 314
addi $t0, $t0, 8
li $t1, 314
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type136= TYPEOF self
sw $t0, 104($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 112($sp)		##arg _value71
sw $t0, -12($sp)
lw $t0, 108($sp)		##arg _value72
sw $t0, -16($sp)
lw $t0, 104($sp)		##_value74=VCALL _Type136 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 100($sp)
la $t0, heap		##_value75=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 96($sp)
lw $t0, 96($sp)		##SETATTR _value75 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 388($sp)		##_Type143= TYPEOF s
sw $t0, 92($sp)
lw $t1, 92($sp)		##_isVoid144=_Type143!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 88($sp)
lw $t1, 88($sp)		##if _isVoid144 goto Continue_145_Blah_bigSelf
beq $t1, 1, Continue_145_Blah_bigSelf
la $t0, s51		##_value78= LOAD s51
sw $t0, 84($sp)
lw $a0, 84($sp)		##out_str _value78
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_145_Blah_bigSelf:		##Continue_145_Blah_bigSelf:
lw $t0, 388($sp)		##arg s
sw $t0, -8($sp)
lw $t0, 96($sp)		##arg _value75
sw $t0, -12($sp)
lw $t0, 92($sp)		##_value79=VCALL _Type143 Blah_setI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,108
lw $t0,($t0)
jalr $t0
sw $v0, 80($sp)
la $t0, heap		##_value80=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value80 Int_x 6
addi $t0, $t0, 8
li $t1, 6
sw $t1, ($t0)
lw $t0, 384($sp)		##_Type155= TYPEOF t
sw $t0, 72($sp)
lw $t1, 72($sp)		##_isVoid156=_Type155!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 68($sp)
lw $t1, 68($sp)		##if _isVoid156 goto Continue_157_Blah_bigSelf
beq $t1, 1, Continue_157_Blah_bigSelf
la $t0, s52		##_value83= LOAD s52
sw $t0, 64($sp)
lw $a0, 64($sp)		##out_str _value83
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_157_Blah_bigSelf:		##Continue_157_Blah_bigSelf:
lw $t0, 384($sp)		##arg t
sw $t0, -8($sp)
lw $t0, 76($sp)		##arg _value80
sw $t0, -12($sp)
lw $t0, 72($sp)		##_value84=VCALL _Type155 Blah_setI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,108
lw $t0,($t0)
jalr $t0
sw $v0, 60($sp)
lw $t0, 388($sp)		##_Type165= TYPEOF s
sw $t0, 52($sp)
lw $t1, 52($sp)		##_isVoid166=_Type165!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 48($sp)
lw $t1, 48($sp)		##if _isVoid166 goto Continue_167_Blah_bigSelf
beq $t1, 1, Continue_167_Blah_bigSelf
la $t0, s53		##_value88= LOAD s53
sw $t0, 44($sp)
lw $a0, 44($sp)		##out_str _value88
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_167_Blah_bigSelf:		##Continue_167_Blah_bigSelf:
lw $t0, 388($sp)		##arg s
sw $t0, -8($sp)
lw $t0, 52($sp)		##_value89=VCALL _Type165 Blah_getI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,112
lw $t0,($t0)
jalr $t0
sw $v0, 40($sp)
lw $t0, 384($sp)		##_Type174= TYPEOF t
sw $t0, 36($sp)
lw $t1, 36($sp)		##_isVoid175=_Type174!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 32($sp)
lw $t1, 32($sp)		##if _isVoid175 goto Continue_176_Blah_bigSelf
beq $t1, 1, Continue_176_Blah_bigSelf
la $t0, s54		##_value92= LOAD s54
sw $t0, 28($sp)
lw $a0, 28($sp)		##out_str _value92
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_176_Blah_bigSelf:		##Continue_176_Blah_bigSelf:
lw $t0, 384($sp)		##arg t
sw $t0, -8($sp)
lw $t0, 36($sp)		##_value93=VCALL _Type174 Blah_getI
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,112
lw $t0,($t0)
jalr $t0
sw $v0, 24($sp)
lw $t0, 40($sp)		##_value94=GETATTR _value89 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value95=GETATTR _value93 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_value85=_value94==_value95
lw $t2, 16($sp)
seq $t0, $t1, $t2
sw $t0, 56($sp)
la $t0, heap		##_value96=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value96 Bool_x _value85
addi $t0, $t0, 8
lw $t1, 56($sp)
sw $t1, ($t0)
la $t0, heap		##_value97=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value97 Int_x 327
addi $t0, $t0, 8
li $t1, 327
sw $t1, ($t0)
lw $t0, 400($sp)		##_Type190= TYPEOF self
sw $t0, 4($sp)
lw $t0, 400($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value96
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value97
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value99=VCALL _Type190 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 404($sp)		##return _value99
lw $v0, 0($sp)
addi $sp, $sp 408
jr $ra


Blah_bigStrCompare:
sub $sp, $sp, 672
sw $ra, 668($sp)
##		664($sp)	self
li $t0, 0
sw $t0, 660($sp)		##s
sw $t0, 656($sp)		##_value1
sw $t0, 652($sp)		##_value2
sw $t0, 648($sp)		##t
sw $t0, 644($sp)		##_value4
sw $t0, 640($sp)		##_value5
sw $t0, 636($sp)		##u
sw $t0, 632($sp)		##_value7
sw $t0, 628($sp)		##_value8
sw $t0, 624($sp)		##v
sw $t0, 620($sp)		##_value10
sw $t0, 616($sp)		##w
sw $t0, 612($sp)		##_value12
sw $t0, 608($sp)		##_value13
sw $t0, 604($sp)		##_value14
sw $t0, 600($sp)		##_value15
sw $t0, 596($sp)		##_Type20
sw $t0, 592($sp)		##_isVoid21
sw $t0, 588($sp)		##_value18
sw $t0, 584($sp)		##_value19
sw $t0, 580($sp)		##_valueNum20
sw $t0, 576($sp)		##_value21
sw $t0, 572($sp)		##_value22
sw $t0, 568($sp)		##_value23
sw $t0, 564($sp)		##_value24
sw $t0, 560($sp)		##_value25
sw $t0, 556($sp)		##_value26
sw $t0, 552($sp)		##_value27
sw $t0, 548($sp)		##_Type41
sw $t0, 544($sp)		##_value29
sw $t0, 540($sp)		##_value30
sw $t0, 536($sp)		##_value31
sw $t0, 532($sp)		##_value32
sw $t0, 528($sp)		##_value33
sw $t0, 524($sp)		##_value34
sw $t0, 520($sp)		##_value35
sw $t0, 516($sp)		##_value36
sw $t0, 512($sp)		##_Type56
sw $t0, 508($sp)		##_value38
sw $t0, 504($sp)		##_value39
sw $t0, 500($sp)		##_value40
sw $t0, 496($sp)		##_value41
sw $t0, 492($sp)		##_value42
sw $t0, 488($sp)		##_value43
sw $t0, 484($sp)		##_value44
sw $t0, 480($sp)		##_value45
sw $t0, 476($sp)		##_Type71
sw $t0, 472($sp)		##_value47
sw $t0, 468($sp)		##_value48
sw $t0, 464($sp)		##_value49
sw $t0, 460($sp)		##_value50
sw $t0, 456($sp)		##_value51
sw $t0, 452($sp)		##_value52
sw $t0, 448($sp)		##_Type83
sw $t0, 444($sp)		##_value54
sw $t0, 440($sp)		##_valueNum55
sw $t0, 436($sp)		##_value56
sw $t0, 432($sp)		##_value57
sw $t0, 428($sp)		##_value58
sw $t0, 424($sp)		##_value59
sw $t0, 420($sp)		##_value60
sw $t0, 416($sp)		##_value61
sw $t0, 412($sp)		##_value62
sw $t0, 408($sp)		##_Type99
sw $t0, 404($sp)		##_value64
sw $t0, 400($sp)		##_value65
sw $t0, 396($sp)		##_value66
sw $t0, 392($sp)		##_Type108
sw $t0, 388($sp)		##_value68
sw $t0, 384($sp)		##_length69
sw $t0, 380($sp)		##_isParam1InRange70
sw $t0, 376($sp)		##_value71
sw $t0, 372($sp)		##_value72
sw $t0, 368($sp)		##_value73
sw $t0, 364($sp)		##_lastIndex74
sw $t0, 360($sp)		##_isParam2InRange75
sw $t0, 356($sp)		##_value76
sw $t0, 352($sp)		##_isVoid126
sw $t0, 348($sp)		##_value78
sw $t0, 344($sp)		##_value79
sw $t0, 340($sp)		##_value80
sw $t0, 336($sp)		##_value81
sw $t0, 332($sp)		##_Type141
sw $t0, 328($sp)		##_value83
sw $t0, 324($sp)		##_length84
sw $t0, 320($sp)		##_isParam1InRange85
sw $t0, 316($sp)		##_value86
sw $t0, 312($sp)		##_value87
sw $t0, 308($sp)		##_value88
sw $t0, 304($sp)		##_lastIndex89
sw $t0, 300($sp)		##_isParam2InRange90
sw $t0, 296($sp)		##_value91
sw $t0, 292($sp)		##_isVoid159
sw $t0, 288($sp)		##_value93
sw $t0, 284($sp)		##_value94
sw $t0, 280($sp)		##_valueNum95
sw $t0, 276($sp)		##_value96
sw $t0, 272($sp)		##_value97
sw $t0, 268($sp)		##_value98
sw $t0, 264($sp)		##_value99
sw $t0, 260($sp)		##_value100
sw $t0, 256($sp)		##_value101
sw $t0, 252($sp)		##_value102
sw $t0, 248($sp)		##_Type181
sw $t0, 244($sp)		##_value104
sw $t0, 240($sp)		##_value105
sw $t0, 236($sp)		##_value106
sw $t0, 232($sp)		##_value107
sw $t0, 228($sp)		##_value108
sw $t0, 224($sp)		##_value109
sw $t0, 220($sp)		##_Type193
sw $t0, 216($sp)		##_value111
sw $t0, 212($sp)		##_value112
sw $t0, 208($sp)		##_value113
sw $t0, 204($sp)		##_value114
sw $t0, 200($sp)		##_value115
sw $t0, 196($sp)		##_value116
sw $t0, 192($sp)		##_Type205
sw $t0, 188($sp)		##_value118
sw $t0, 184($sp)		##_valueNum119
sw $t0, 180($sp)		##_value120
sw $t0, 176($sp)		##_value121
sw $t0, 172($sp)		##_value122
sw $t0, 168($sp)		##_value123
sw $t0, 164($sp)		##_value124
sw $t0, 160($sp)		##_value125
sw $t0, 156($sp)		##_value126
sw $t0, 152($sp)		##_Type221
sw $t0, 148($sp)		##_value128
sw $t0, 144($sp)		##_value129
sw $t0, 140($sp)		##_value130
sw $t0, 136($sp)		##_value131
sw $t0, 132($sp)		##_Type230
sw $t0, 128($sp)		##_value133
sw $t0, 124($sp)		##_length134
sw $t0, 120($sp)		##_isParam1InRange135
sw $t0, 116($sp)		##_value136
sw $t0, 112($sp)		##_value137
sw $t0, 108($sp)		##_value138
sw $t0, 104($sp)		##_lastIndex139
sw $t0, 100($sp)		##_isParam2InRange140
sw $t0, 96($sp)		##_value141
sw $t0, 92($sp)		##_isVoid248
sw $t0, 88($sp)		##_value143
sw $t0, 84($sp)		##_value144
sw $t0, 80($sp)		##_value145
sw $t0, 76($sp)		##_value146
sw $t0, 72($sp)		##_Type262
sw $t0, 68($sp)		##_value148
sw $t0, 64($sp)		##_length149
sw $t0, 60($sp)		##_isParam1InRange150
sw $t0, 56($sp)		##_value151
sw $t0, 52($sp)		##_value152
sw $t0, 48($sp)		##_value153
sw $t0, 44($sp)		##_lastIndex154
sw $t0, 40($sp)		##_isParam2InRange155
sw $t0, 36($sp)		##_value156
sw $t0, 32($sp)		##_isVoid280
sw $t0, 28($sp)		##_value158
sw $t0, 24($sp)		##_value159
sw $t0, 20($sp)		##_value160
sw $t0, 16($sp)		##_value161
sw $t0, 12($sp)		##_value162
sw $t0, 8($sp)		##_value163
sw $t0, 4($sp)		##_Type297
sw $t0, 0($sp)		##_value165
la $t0, s55		##_value1= LOAD s55
sw $t0, 656($sp)
la $t0, heap		##_value2=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 652($sp)
lw $t0, 652($sp)		##SETATTR _value2 String_x _value1
addi $t0, $t0, 8
lw $t1, 656($sp)
sw $t1, ($t0)
lw $t1, 652($sp)		##s=_value2
sw $t1, 660($sp)
la $t0, s56		##_value4= LOAD s56
sw $t0, 644($sp)
la $t0, heap		##_value5=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 640($sp)
lw $t0, 640($sp)		##SETATTR _value5 String_x _value4
addi $t0, $t0, 8
lw $t1, 644($sp)
sw $t1, ($t0)
lw $t1, 640($sp)		##t=_value5
sw $t1, 648($sp)
la $t0, s57		##_value7= LOAD s57
sw $t0, 632($sp)
la $t0, heap		##_value8=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 628($sp)
lw $t0, 628($sp)		##SETATTR _value8 String_x _value7
addi $t0, $t0, 8
lw $t1, 632($sp)
sw $t1, ($t0)
lw $t1, 628($sp)		##u=_value8
sw $t1, 636($sp)
la $t0, heap		##_value10=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 620($sp)
lw $t1, 620($sp)		##v=_value10
sw $t1, 624($sp)
la $t0, heap		##_value12=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 612($sp)
lw $t1, 612($sp)		##w=_value12
sw $t1, 616($sp)
lw $t0, 664($sp)		##_value13=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 608($sp)
la $t0, s58		##_value14= LOAD s58
sw $t0, 604($sp)
la $t0, heap		##_value15=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 600($sp)
lw $t0, 600($sp)		##SETATTR _value15 String_x _value14
addi $t0, $t0, 8
lw $t1, 604($sp)
sw $t1, ($t0)
lw $t0, 608($sp)		##_Type20= TYPEOF _value13
sw $t0, 596($sp)
lw $t1, 596($sp)		##_isVoid21=_Type20!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 592($sp)
lw $t1, 592($sp)		##if _isVoid21 goto Continue_22_Blah_bigStrCompare
beq $t1, 1, Continue_22_Blah_bigStrCompare
la $t0, s59		##_value18= LOAD s59
sw $t0, 588($sp)
lw $a0, 588($sp)		##out_str _value18
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_22_Blah_bigStrCompare:		##Continue_22_Blah_bigStrCompare:
lw $t0, 608($sp)		##arg _value13
sw $t0, -8($sp)
lw $t0, 600($sp)		##arg _value15
sw $t0, -12($sp)
lw $t0, 596($sp)		##_value19=VCALL _Type20 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 584($sp)
lw $t0, 660($sp)		##_value22=GETATTR s String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 572($sp)
lw $t0, 648($sp)		##_value23=GETATTR t String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 568($sp)
lw $a0, 572($sp)		##_value21=strEqual _value22 _value23
lw $a1, 568($sp)
jal equalFunctionStart
sw $v0, 576($sp)
la $t0, heap		##_value24=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 564($sp)
lw $t0, 564($sp)		##SETATTR _value24 Bool_x _value21
addi $t0, $t0, 8
lw $t1, 576($sp)
sw $t1, ($t0)
lw $t0, 564($sp)		##_value25=GETATTR _value24 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 560($sp)
li $t1, 1		##_valueNum20=1-_value25
lw $t2, 560($sp)
sub $t0, $t1, $t2
sw $t0, 580($sp)
la $t0, heap		##_value26=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 556($sp)
lw $t0, 556($sp)		##SETATTR _value26 Bool_x _valueNum20
addi $t0, $t0, 8
lw $t1, 580($sp)
sw $t1, ($t0)
la $t0, heap		##_value27=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 552($sp)
lw $t0, 552($sp)		##SETATTR _value27 Int_x 339
addi $t0, $t0, 8
li $t1, 339
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type41= TYPEOF self
sw $t0, 548($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 556($sp)		##arg _value26
sw $t0, -12($sp)
lw $t0, 552($sp)		##arg _value27
sw $t0, -16($sp)
lw $t0, 548($sp)		##_value29=VCALL _Type41 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 544($sp)
la $t0, s60		##_value31= LOAD s60
sw $t0, 536($sp)
la $t0, heap		##_value32=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 532($sp)
lw $t0, 532($sp)		##SETATTR _value32 String_x _value31
addi $t0, $t0, 8
lw $t1, 536($sp)
sw $t1, ($t0)
lw $t0, 660($sp)		##_value33=GETATTR s String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 528($sp)
lw $t0, 532($sp)		##_value34=GETATTR _value32 String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 524($sp)
lw $a0, 528($sp)		##_value30=strEqual _value33 _value34
lw $a1, 524($sp)
jal equalFunctionStart
sw $v0, 540($sp)
la $t0, heap		##_value35=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 520($sp)
lw $t0, 520($sp)		##SETATTR _value35 Bool_x _value30
addi $t0, $t0, 8
lw $t1, 540($sp)
sw $t1, ($t0)
la $t0, heap		##_value36=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 516($sp)
lw $t0, 516($sp)		##SETATTR _value36 Int_x 340
addi $t0, $t0, 8
li $t1, 340
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type56= TYPEOF self
sw $t0, 512($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 520($sp)		##arg _value35
sw $t0, -12($sp)
lw $t0, 516($sp)		##arg _value36
sw $t0, -16($sp)
lw $t0, 512($sp)		##_value38=VCALL _Type56 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 508($sp)
la $t0, s61		##_value40= LOAD s61
sw $t0, 500($sp)
la $t0, heap		##_value41=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 496($sp)
lw $t0, 496($sp)		##SETATTR _value41 String_x _value40
addi $t0, $t0, 8
lw $t1, 500($sp)
sw $t1, ($t0)
lw $t0, 648($sp)		##_value42=GETATTR t String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 492($sp)
lw $t0, 496($sp)		##_value43=GETATTR _value41 String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 488($sp)
lw $a0, 492($sp)		##_value39=strEqual _value42 _value43
lw $a1, 488($sp)
jal equalFunctionStart
sw $v0, 504($sp)
la $t0, heap		##_value44=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 484($sp)
lw $t0, 484($sp)		##SETATTR _value44 Bool_x _value39
addi $t0, $t0, 8
lw $t1, 504($sp)
sw $t1, ($t0)
la $t0, heap		##_value45=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 480($sp)
lw $t0, 480($sp)		##SETATTR _value45 Int_x 341
addi $t0, $t0, 8
li $t1, 341
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type71= TYPEOF self
sw $t0, 476($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 484($sp)		##arg _value44
sw $t0, -12($sp)
lw $t0, 480($sp)		##arg _value45
sw $t0, -16($sp)
lw $t0, 476($sp)		##_value47=VCALL _Type71 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 472($sp)
lw $t0, 624($sp)		##_value49=GETATTR v String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 464($sp)
lw $t0, 616($sp)		##_value50=GETATTR w String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 460($sp)
lw $a0, 464($sp)		##_value48=strEqual _value49 _value50
lw $a1, 460($sp)
jal equalFunctionStart
sw $v0, 468($sp)
la $t0, heap		##_value51=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 456($sp)
lw $t0, 456($sp)		##SETATTR _value51 Bool_x _value48
addi $t0, $t0, 8
lw $t1, 468($sp)
sw $t1, ($t0)
la $t0, heap		##_value52=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 452($sp)
lw $t0, 452($sp)		##SETATTR _value52 Int_x 342
addi $t0, $t0, 8
li $t1, 342
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type83= TYPEOF self
sw $t0, 448($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 456($sp)		##arg _value51
sw $t0, -12($sp)
lw $t0, 452($sp)		##arg _value52
sw $t0, -16($sp)
lw $t0, 448($sp)		##_value54=VCALL _Type83 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 444($sp)
lw $t0, 624($sp)		##_value57=GETATTR v String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 432($sp)
lw $t0, 636($sp)		##_value58=GETATTR u String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 428($sp)
lw $a0, 432($sp)		##_value56=strEqual _value57 _value58
lw $a1, 428($sp)
jal equalFunctionStart
sw $v0, 436($sp)
la $t0, heap		##_value59=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 424($sp)
lw $t0, 424($sp)		##SETATTR _value59 Bool_x _value56
addi $t0, $t0, 8
lw $t1, 436($sp)
sw $t1, ($t0)
lw $t0, 424($sp)		##_value60=GETATTR _value59 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 420($sp)
li $t1, 1		##_valueNum55=1-_value60
lw $t2, 420($sp)
sub $t0, $t1, $t2
sw $t0, 440($sp)
la $t0, heap		##_value61=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 416($sp)
lw $t0, 416($sp)		##SETATTR _value61 Bool_x _valueNum55
addi $t0, $t0, 8
lw $t1, 440($sp)
sw $t1, ($t0)
la $t0, heap		##_value62=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 412($sp)
lw $t0, 412($sp)		##SETATTR _value62 Int_x 346
addi $t0, $t0, 8
li $t1, 346
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type99= TYPEOF self
sw $t0, 408($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 416($sp)		##arg _value61
sw $t0, -12($sp)
lw $t0, 412($sp)		##arg _value62
sw $t0, -16($sp)
lw $t0, 408($sp)		##_value64=VCALL _Type99 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 404($sp)
la $t0, heap		##_value65=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 400($sp)
lw $t0, 400($sp)		##SETATTR _value65 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
la $t0, heap		##_value66=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 396($sp)
lw $t0, 396($sp)		##SETATTR _value66 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 636($sp)		##_Type108= TYPEOF u
sw $t0, 392($sp)
lw $t0, 636($sp)		##_value68=GETATTR u String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 388($sp)
lw $t0, 388($sp)		##_length69 = LENGHT _value68
jal lengthFunctionStart
sw $v0, 384($sp)
lw $t0, 400($sp)		##_value71=GETATTR _value65 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 376($sp)
lw $t0, 396($sp)		##_value72=GETATTR _value66 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 372($sp)
lw $t1, 376($sp)		##_isParam1InRange70=_value71<_length69
lw $t2, 384($sp)
slt $t0, $t1, $t2
sw $t0, 380($sp)
lw $t1, 380($sp)		##if _isParam1InRange70 goto Continue_114_Blah_bigStrCompare
beq $t1, 1, Continue_114_Blah_bigStrCompare
la $t0, s62		##_value73= LOAD s62
sw $t0, 368($sp)
lw $a0, 368($sp)		##out_str _value73
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_114_Blah_bigStrCompare:		##Continue_114_Blah_bigStrCompare:
lw $t1, 376($sp)		##_lastIndex74=_value71+_value72
lw $t2, 372($sp)
add $t0, $t1, $t2
sw $t0, 364($sp)
lw $t1, 364($sp)		##_isParam2InRange75=_lastIndex74<=_length69
lw $t2, 384($sp)
sle $t0, $t1, $t2
sw $t0, 360($sp)
lw $t1, 360($sp)		##if _isParam2InRange75 goto Continue_121_Blah_bigStrCompare
beq $t1, 1, Continue_121_Blah_bigStrCompare
la $t0, s63		##_value76= LOAD s63
sw $t0, 356($sp)
lw $a0, 356($sp)		##out_str _value76
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_121_Blah_bigStrCompare:		##Continue_121_Blah_bigStrCompare:
lw $t1, 392($sp)		##_isVoid126=_Type108!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 352($sp)
lw $t1, 352($sp)		##if _isVoid126 goto Continue_127_Blah_bigStrCompare
beq $t1, 1, Continue_127_Blah_bigStrCompare
la $t0, s64		##_value78= LOAD s64
sw $t0, 348($sp)
lw $a0, 348($sp)		##out_str _value78
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_127_Blah_bigStrCompare:		##Continue_127_Blah_bigStrCompare:
lw $t0, 636($sp)		##arg u
sw $t0, -8($sp)
lw $t0, 400($sp)		##arg _value65
sw $t0, -12($sp)
lw $t0, 396($sp)		##arg _value66
sw $t0, -16($sp)
jal String_substr		##_value79=CALL String_substr
sw $v0, 344($sp)
lw $t1, 344($sp)		##v=_value79
sw $t1, 624($sp)
la $t0, heap		##_value80=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 340($sp)
lw $t0, 340($sp)		##SETATTR _value80 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
la $t0, heap		##_value81=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 336($sp)
lw $t0, 336($sp)		##SETATTR _value81 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 636($sp)		##_Type141= TYPEOF u
sw $t0, 332($sp)
lw $t0, 636($sp)		##_value83=GETATTR u String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 328($sp)
lw $t0, 328($sp)		##_length84 = LENGHT _value83
jal lengthFunctionStart
sw $v0, 324($sp)
lw $t0, 340($sp)		##_value86=GETATTR _value80 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 316($sp)
lw $t0, 336($sp)		##_value87=GETATTR _value81 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 312($sp)
lw $t1, 316($sp)		##_isParam1InRange85=_value86<_length84
lw $t2, 324($sp)
slt $t0, $t1, $t2
sw $t0, 320($sp)
lw $t1, 320($sp)		##if _isParam1InRange85 goto Continue_147_Blah_bigStrCompare
beq $t1, 1, Continue_147_Blah_bigStrCompare
la $t0, s65		##_value88= LOAD s65
sw $t0, 308($sp)
lw $a0, 308($sp)		##out_str _value88
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_147_Blah_bigStrCompare:		##Continue_147_Blah_bigStrCompare:
lw $t1, 316($sp)		##_lastIndex89=_value86+_value87
lw $t2, 312($sp)
add $t0, $t1, $t2
sw $t0, 304($sp)
lw $t1, 304($sp)		##_isParam2InRange90=_lastIndex89<=_length84
lw $t2, 324($sp)
sle $t0, $t1, $t2
sw $t0, 300($sp)
lw $t1, 300($sp)		##if _isParam2InRange90 goto Continue_154_Blah_bigStrCompare
beq $t1, 1, Continue_154_Blah_bigStrCompare
la $t0, s66		##_value91= LOAD s66
sw $t0, 296($sp)
lw $a0, 296($sp)		##out_str _value91
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_154_Blah_bigStrCompare:		##Continue_154_Blah_bigStrCompare:
lw $t1, 332($sp)		##_isVoid159=_Type141!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 292($sp)
lw $t1, 292($sp)		##if _isVoid159 goto Continue_160_Blah_bigStrCompare
beq $t1, 1, Continue_160_Blah_bigStrCompare
la $t0, s67		##_value93= LOAD s67
sw $t0, 288($sp)
lw $a0, 288($sp)		##out_str _value93
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_160_Blah_bigStrCompare:		##Continue_160_Blah_bigStrCompare:
lw $t0, 636($sp)		##arg u
sw $t0, -8($sp)
lw $t0, 340($sp)		##arg _value80
sw $t0, -12($sp)
lw $t0, 336($sp)		##arg _value81
sw $t0, -16($sp)
jal String_substr		##_value94=CALL String_substr
sw $v0, 284($sp)
lw $t1, 284($sp)		##w=_value94
sw $t1, 616($sp)
lw $t0, 624($sp)		##_value97=GETATTR v String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 272($sp)
lw $t0, 616($sp)		##_value98=GETATTR w String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 268($sp)
lw $a0, 272($sp)		##_value96=strEqual _value97 _value98
lw $a1, 268($sp)
jal equalFunctionStart
sw $v0, 276($sp)
la $t0, heap		##_value99=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 264($sp)
lw $t0, 264($sp)		##SETATTR _value99 Bool_x _value96
addi $t0, $t0, 8
lw $t1, 276($sp)
sw $t1, ($t0)
lw $t0, 264($sp)		##_value100=GETATTR _value99 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 260($sp)
li $t1, 1		##_valueNum95=1-_value100
lw $t2, 260($sp)
sub $t0, $t1, $t2
sw $t0, 280($sp)
la $t0, heap		##_value101=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 256($sp)
lw $t0, 256($sp)		##SETATTR _value101 Bool_x _valueNum95
addi $t0, $t0, 8
lw $t1, 280($sp)
sw $t1, ($t0)
la $t0, heap		##_value102=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 252($sp)
lw $t0, 252($sp)		##SETATTR _value102 Int_x 350
addi $t0, $t0, 8
li $t1, 350
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type181= TYPEOF self
sw $t0, 248($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 256($sp)		##arg _value101
sw $t0, -12($sp)
lw $t0, 252($sp)		##arg _value102
sw $t0, -16($sp)
lw $t0, 248($sp)		##_value104=VCALL _Type181 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 244($sp)
lw $t0, 624($sp)		##_value106=GETATTR v String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 236($sp)
lw $t0, 660($sp)		##_value107=GETATTR s String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 232($sp)
lw $a0, 236($sp)		##_value105=strEqual _value106 _value107
lw $a1, 232($sp)
jal equalFunctionStart
sw $v0, 240($sp)
la $t0, heap		##_value108=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 228($sp)
lw $t0, 228($sp)		##SETATTR _value108 Bool_x _value105
addi $t0, $t0, 8
lw $t1, 240($sp)
sw $t1, ($t0)
la $t0, heap		##_value109=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 224($sp)
lw $t0, 224($sp)		##SETATTR _value109 Int_x 351
addi $t0, $t0, 8
li $t1, 351
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type193= TYPEOF self
sw $t0, 220($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 228($sp)		##arg _value108
sw $t0, -12($sp)
lw $t0, 224($sp)		##arg _value109
sw $t0, -16($sp)
lw $t0, 220($sp)		##_value111=VCALL _Type193 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 216($sp)
lw $t0, 616($sp)		##_value113=GETATTR w String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 208($sp)
lw $t0, 648($sp)		##_value114=GETATTR t String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 204($sp)
lw $a0, 208($sp)		##_value112=strEqual _value113 _value114
lw $a1, 204($sp)
jal equalFunctionStart
sw $v0, 212($sp)
la $t0, heap		##_value115=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 200($sp)
lw $t0, 200($sp)		##SETATTR _value115 Bool_x _value112
addi $t0, $t0, 8
lw $t1, 212($sp)
sw $t1, ($t0)
la $t0, heap		##_value116=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 196($sp)
lw $t0, 196($sp)		##SETATTR _value116 Int_x 352
addi $t0, $t0, 8
li $t1, 352
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type205= TYPEOF self
sw $t0, 192($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 200($sp)		##arg _value115
sw $t0, -12($sp)
lw $t0, 196($sp)		##arg _value116
sw $t0, -16($sp)
lw $t0, 192($sp)		##_value118=VCALL _Type205 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 188($sp)
lw $t0, 624($sp)		##_value121=GETATTR v String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 176($sp)
lw $t0, 648($sp)		##_value122=GETATTR t String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 172($sp)
lw $a0, 176($sp)		##_value120=strEqual _value121 _value122
lw $a1, 172($sp)
jal equalFunctionStart
sw $v0, 180($sp)
la $t0, heap		##_value123=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 168($sp)
lw $t0, 168($sp)		##SETATTR _value123 Bool_x _value120
addi $t0, $t0, 8
lw $t1, 180($sp)
sw $t1, ($t0)
lw $t0, 168($sp)		##_value124=GETATTR _value123 Bool_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 164($sp)
li $t1, 1		##_valueNum119=1-_value124
lw $t2, 164($sp)
sub $t0, $t1, $t2
sw $t0, 184($sp)
la $t0, heap		##_value125=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 160($sp)
lw $t0, 160($sp)		##SETATTR _value125 Bool_x _valueNum119
addi $t0, $t0, 8
lw $t1, 184($sp)
sw $t1, ($t0)
la $t0, heap		##_value126=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 156($sp)
lw $t0, 156($sp)		##SETATTR _value126 Int_x 353
addi $t0, $t0, 8
li $t1, 353
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type221= TYPEOF self
sw $t0, 152($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 160($sp)		##arg _value125
sw $t0, -12($sp)
lw $t0, 156($sp)		##arg _value126
sw $t0, -16($sp)
lw $t0, 152($sp)		##_value128=VCALL _Type221 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 148($sp)
la $t0, heap		##_value130=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 140($sp)
lw $t0, 140($sp)		##SETATTR _value130 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
la $t0, heap		##_value131=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 136($sp)
lw $t0, 136($sp)		##SETATTR _value131 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 660($sp)		##_Type230= TYPEOF s
sw $t0, 132($sp)
lw $t0, 660($sp)		##_value133=GETATTR s String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 128($sp)
lw $t0, 128($sp)		##_length134 = LENGHT _value133
jal lengthFunctionStart
sw $v0, 124($sp)
lw $t0, 140($sp)		##_value136=GETATTR _value130 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 116($sp)
lw $t0, 136($sp)		##_value137=GETATTR _value131 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 112($sp)
lw $t1, 116($sp)		##_isParam1InRange135=_value136<_length134
lw $t2, 124($sp)
slt $t0, $t1, $t2
sw $t0, 120($sp)
lw $t1, 120($sp)		##if _isParam1InRange135 goto Continue_236_Blah_bigStrCompare
beq $t1, 1, Continue_236_Blah_bigStrCompare
la $t0, s68		##_value138= LOAD s68
sw $t0, 108($sp)
lw $a0, 108($sp)		##out_str _value138
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_236_Blah_bigStrCompare:		##Continue_236_Blah_bigStrCompare:
lw $t1, 116($sp)		##_lastIndex139=_value136+_value137
lw $t2, 112($sp)
add $t0, $t1, $t2
sw $t0, 104($sp)
lw $t1, 104($sp)		##_isParam2InRange140=_lastIndex139<=_length134
lw $t2, 124($sp)
sle $t0, $t1, $t2
sw $t0, 100($sp)
lw $t1, 100($sp)		##if _isParam2InRange140 goto Continue_243_Blah_bigStrCompare
beq $t1, 1, Continue_243_Blah_bigStrCompare
la $t0, s69		##_value141= LOAD s69
sw $t0, 96($sp)
lw $a0, 96($sp)		##out_str _value141
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_243_Blah_bigStrCompare:		##Continue_243_Blah_bigStrCompare:
lw $t1, 132($sp)		##_isVoid248=_Type230!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 92($sp)
lw $t1, 92($sp)		##if _isVoid248 goto Continue_249_Blah_bigStrCompare
beq $t1, 1, Continue_249_Blah_bigStrCompare
la $t0, s70		##_value143= LOAD s70
sw $t0, 88($sp)
lw $a0, 88($sp)		##out_str _value143
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_249_Blah_bigStrCompare:		##Continue_249_Blah_bigStrCompare:
lw $t0, 660($sp)		##arg s
sw $t0, -8($sp)
lw $t0, 140($sp)		##arg _value130
sw $t0, -12($sp)
lw $t0, 136($sp)		##arg _value131
sw $t0, -16($sp)
jal String_substr		##_value144=CALL String_substr
sw $v0, 84($sp)
la $t0, heap		##_value145=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 80($sp)
lw $t0, 80($sp)		##SETATTR _value145 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
la $t0, heap		##_value146=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value146 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 660($sp)		##_Type262= TYPEOF s
sw $t0, 72($sp)
lw $t0, 660($sp)		##_value148=GETATTR s String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 68($sp)
lw $t0, 68($sp)		##_length149 = LENGHT _value148
jal lengthFunctionStart
sw $v0, 64($sp)
lw $t0, 80($sp)		##_value151=GETATTR _value145 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 56($sp)
lw $t0, 76($sp)		##_value152=GETATTR _value146 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 52($sp)
lw $t1, 56($sp)		##_isParam1InRange150=_value151<_length149
lw $t2, 64($sp)
slt $t0, $t1, $t2
sw $t0, 60($sp)
lw $t1, 60($sp)		##if _isParam1InRange150 goto Continue_268_Blah_bigStrCompare
beq $t1, 1, Continue_268_Blah_bigStrCompare
la $t0, s71		##_value153= LOAD s71
sw $t0, 48($sp)
lw $a0, 48($sp)		##out_str _value153
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_268_Blah_bigStrCompare:		##Continue_268_Blah_bigStrCompare:
lw $t1, 56($sp)		##_lastIndex154=_value151+_value152
lw $t2, 52($sp)
add $t0, $t1, $t2
sw $t0, 44($sp)
lw $t1, 44($sp)		##_isParam2InRange155=_lastIndex154<=_length149
lw $t2, 64($sp)
sle $t0, $t1, $t2
sw $t0, 40($sp)
lw $t1, 40($sp)		##if _isParam2InRange155 goto Continue_275_Blah_bigStrCompare
beq $t1, 1, Continue_275_Blah_bigStrCompare
la $t0, s72		##_value156= LOAD s72
sw $t0, 36($sp)
lw $a0, 36($sp)		##out_str _value156
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_275_Blah_bigStrCompare:		##Continue_275_Blah_bigStrCompare:
lw $t1, 72($sp)		##_isVoid280=_Type262!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 32($sp)
lw $t1, 32($sp)		##if _isVoid280 goto Continue_281_Blah_bigStrCompare
beq $t1, 1, Continue_281_Blah_bigStrCompare
la $t0, s73		##_value158= LOAD s73
sw $t0, 28($sp)
lw $a0, 28($sp)		##out_str _value158
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_281_Blah_bigStrCompare:		##Continue_281_Blah_bigStrCompare:
lw $t0, 660($sp)		##arg s
sw $t0, -8($sp)
lw $t0, 80($sp)		##arg _value145
sw $t0, -12($sp)
lw $t0, 76($sp)		##arg _value146
sw $t0, -16($sp)
jal String_substr		##_value159=CALL String_substr
sw $v0, 24($sp)
lw $t0, 84($sp)		##_value160=GETATTR _value144 String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value161=GETATTR _value159 String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $a0, 20($sp)		##_value129=strEqual _value160 _value161
lw $a1, 16($sp)
jal equalFunctionStart
sw $v0, 144($sp)
la $t0, heap		##_value162=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value162 Bool_x _value129
addi $t0, $t0, 8
lw $t1, 144($sp)
sw $t1, ($t0)
la $t0, heap		##_value163=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value163 Int_x 355
addi $t0, $t0, 8
li $t1, 355
sw $t1, ($t0)
lw $t0, 664($sp)		##_Type297= TYPEOF self
sw $t0, 4($sp)
lw $t0, 664($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value162
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value163
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value165=VCALL _Type297 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 668($sp)		##return _value165
lw $v0, 0($sp)
addi $sp, $sp 672
jr $ra


Blah_bigCase:
sub $sp, $sp, 1008
sw $ra, 1004($sp)
##		1000($sp)	self
li $t0, 0
sw $t0, 996($sp)		##a
sw $t0, 992($sp)		##_value1
sw $t0, 988($sp)		##b
sw $t0, 984($sp)		##_value3
sw $t0, 980($sp)		##c
sw $t0, 976($sp)		##_value5
sw $t0, 972($sp)		##p
sw $t0, 968($sp)		##_value7
sw $t0, 964($sp)		##c1
sw $t0, 960($sp)		##_value9
sw $t0, 956($sp)		##c2
sw $t0, 952($sp)		##_value11
sw $t0, 948($sp)		##i
sw $t0, 944($sp)		##_value13
sw $t0, 940($sp)		##o
sw $t0, 936($sp)		##_value15
sw $t0, 932($sp)		##_value16
sw $t0, 928($sp)		##_value17
sw $t0, 924($sp)		##_value18
sw $t0, 920($sp)		##_Type20
sw $t0, 916($sp)		##_isVoid21
sw $t0, 912($sp)		##_value21
sw $t0, 908($sp)		##_value22
sw $t0, 904($sp)		##_value23
sw $t0, 900($sp)		##_TypeValue24
sw $t0, 896($sp)		##not_is_void24
sw $t0, 892($sp)		##_value26
sw $t0, 888($sp)		##_closestAncestor27
sw $t0, 884($sp)		##_isNotConform28
sw $t0, 880($sp)		##y
sw $t0, 876($sp)		##_value30
sw $t0, 872($sp)		##z
sw $t0, 868($sp)		##_value32
sw $t0, 864($sp)		##x
sw $t0, 860($sp)		##_value34
sw $t0, 856($sp)		##k
sw $t0, 852($sp)		##_value36
sw $t0, 848($sp)		##_value37
sw $t0, 844($sp)		##_value38
sw $t0, 840($sp)		##_value39
sw $t0, 836($sp)		##_value40
sw $t0, 832($sp)		##_value41
sw $t0, 828($sp)		##_value42
sw $t0, 824($sp)		##_value43
sw $t0, 820($sp)		##_Type84
sw $t0, 816($sp)		##_value45
sw $t0, 812($sp)		##_value46
sw $t0, 808($sp)		##_TypeValue47
sw $t0, 804($sp)		##not_is_void47
sw $t0, 800($sp)		##_value49
sw $t0, 796($sp)		##_closestAncestor50
sw $t0, 792($sp)		##_isNotConform51
sw $t0, 788($sp)		##_value52
sw $t0, 784($sp)		##_value53
sw $t0, 780($sp)		##_value54
sw $t0, 776($sp)		##_value55
sw $t0, 772($sp)		##_value56
sw $t0, 768($sp)		##_value57
sw $t0, 764($sp)		##_value58
sw $t0, 760($sp)		##_value59
sw $t0, 756($sp)		##_value60
sw $t0, 752($sp)		##_value61
sw $t0, 748($sp)		##_value62
sw $t0, 744($sp)		##_Type143
sw $t0, 740($sp)		##_value64
sw $t0, 736($sp)		##_value65
sw $t0, 732($sp)		##_TypeValue66
sw $t0, 728($sp)		##not_is_void66
sw $t0, 724($sp)		##_value68
sw $t0, 720($sp)		##_closestAncestor69
sw $t0, 716($sp)		##_isNotConform70
sw $t0, 712($sp)		##_value71
sw $t0, 708($sp)		##_value72
sw $t0, 704($sp)		##_value73
sw $t0, 700($sp)		##_value74
sw $t0, 696($sp)		##_value75
sw $t0, 692($sp)		##_value76
sw $t0, 688($sp)		##_value77
sw $t0, 684($sp)		##_value78
sw $t0, 680($sp)		##_value79
sw $t0, 676($sp)		##_value80
sw $t0, 672($sp)		##_value81
sw $t0, 668($sp)		##_Type202
sw $t0, 664($sp)		##_value83
sw $t0, 660($sp)		##_value84
sw $t0, 656($sp)		##_TypeValue85
sw $t0, 652($sp)		##not_is_void85
sw $t0, 648($sp)		##_value87
sw $t0, 644($sp)		##_closestAncestor88
sw $t0, 640($sp)		##_isNotConform89
sw $t0, 636($sp)		##_value90
sw $t0, 632($sp)		##_value91
sw $t0, 628($sp)		##_value92
sw $t0, 624($sp)		##_value93
sw $t0, 620($sp)		##_value94
sw $t0, 616($sp)		##_value95
sw $t0, 612($sp)		##_value96
sw $t0, 608($sp)		##_value97
sw $t0, 604($sp)		##_value98
sw $t0, 600($sp)		##_value99
sw $t0, 596($sp)		##_value100
sw $t0, 592($sp)		##_Type261
sw $t0, 588($sp)		##_value102
sw $t0, 584($sp)		##_value103
sw $t0, 580($sp)		##_TypeValue104
sw $t0, 576($sp)		##not_is_void104
sw $t0, 572($sp)		##_value106
sw $t0, 568($sp)		##_closestAncestor107
sw $t0, 564($sp)		##_isNotConform108
sw $t0, 560($sp)		##_value109
sw $t0, 556($sp)		##_value110
sw $t0, 552($sp)		##_value111
sw $t0, 548($sp)		##_value112
sw $t0, 544($sp)		##_value113
sw $t0, 540($sp)		##_value114
sw $t0, 536($sp)		##_value115
sw $t0, 532($sp)		##_value116
sw $t0, 528($sp)		##_value117
sw $t0, 524($sp)		##_value118
sw $t0, 520($sp)		##_Type312
sw $t0, 516($sp)		##_value120
sw $t0, 512($sp)		##_value121
sw $t0, 508($sp)		##_TypeValue122
sw $t0, 504($sp)		##not_is_void122
sw $t0, 500($sp)		##_value124
sw $t0, 496($sp)		##_closestAncestor125
sw $t0, 492($sp)		##_isNotConform126
sw $t0, 488($sp)		##_value127
sw $t0, 484($sp)		##_value128
sw $t0, 480($sp)		##_value129
sw $t0, 476($sp)		##_value130
sw $t0, 472($sp)		##_value131
sw $t0, 468($sp)		##_value132
sw $t0, 464($sp)		##_value133
sw $t0, 460($sp)		##_value134
sw $t0, 456($sp)		##_value135
sw $t0, 452($sp)		##_value136
sw $t0, 448($sp)		##_value137
sw $t0, 444($sp)		##_Type371
sw $t0, 440($sp)		##_value139
sw $t0, 436($sp)		##_value140
sw $t0, 432($sp)		##_TypeValue141
sw $t0, 428($sp)		##not_is_void141
sw $t0, 424($sp)		##_value143
sw $t0, 420($sp)		##_closestAncestor144
sw $t0, 416($sp)		##_isNotConform145
sw $t0, 412($sp)		##_value146
sw $t0, 408($sp)		##_value147
sw $t0, 404($sp)		##_value148
sw $t0, 400($sp)		##_value149
sw $t0, 396($sp)		##_value150
sw $t0, 392($sp)		##_value151
sw $t0, 388($sp)		##_value152
sw $t0, 384($sp)		##_value153
sw $t0, 380($sp)		##_value154
sw $t0, 376($sp)		##_value155
sw $t0, 372($sp)		##_value156
sw $t0, 368($sp)		##_Type430
sw $t0, 364($sp)		##_value158
sw $t0, 360($sp)		##_value159
sw $t0, 356($sp)		##_TypeValue160
sw $t0, 352($sp)		##not_is_void160
sw $t0, 348($sp)		##_value162
sw $t0, 344($sp)		##_closestAncestor163
sw $t0, 340($sp)		##_isNotConform164
sw $t0, 336($sp)		##_value165
sw $t0, 332($sp)		##_value166
sw $t0, 328($sp)		##_value167
sw $t0, 324($sp)		##_value168
sw $t0, 320($sp)		##_value169
sw $t0, 316($sp)		##_value170
sw $t0, 312($sp)		##_value171
sw $t0, 308($sp)		##_value172
sw $t0, 304($sp)		##_Type465
sw $t0, 300($sp)		##_value174
sw $t0, 296($sp)		##_value175
sw $t0, 292($sp)		##_value176
sw $t0, 288($sp)		##_TypeValue177
sw $t0, 284($sp)		##not_is_void177
sw $t0, 280($sp)		##_value179
sw $t0, 276($sp)		##_closestAncestor180
sw $t0, 272($sp)		##_isNotConform181
sw $t0, 268($sp)		##_value182
sw $t0, 264($sp)		##_value183
sw $t0, 260($sp)		##_value184
sw $t0, 256($sp)		##_value185
sw $t0, 252($sp)		##_value186
sw $t0, 248($sp)		##_value187
sw $t0, 244($sp)		##_value188
sw $t0, 240($sp)		##_value189
sw $t0, 236($sp)		##_value190
sw $t0, 232($sp)		##_value191
sw $t0, 228($sp)		##_Type518
sw $t0, 224($sp)		##_value193
sw $t0, 220($sp)		##_value194
sw $t0, 216($sp)		##_value195
sw $t0, 212($sp)		##_value196
sw $t0, 208($sp)		##_TypeValue197
sw $t0, 204($sp)		##not_is_void197
sw $t0, 200($sp)		##_value199
sw $t0, 196($sp)		##_closestAncestor200
sw $t0, 192($sp)		##_isNotConform201
sw $t0, 188($sp)		##_value202
sw $t0, 184($sp)		##_value203
sw $t0, 180($sp)		##_value204
sw $t0, 176($sp)		##_value205
sw $t0, 172($sp)		##_value206
sw $t0, 168($sp)		##_value207
sw $t0, 164($sp)		##_value208
sw $t0, 160($sp)		##_value209
sw $t0, 156($sp)		##_Type557
sw $t0, 152($sp)		##_value211
sw $t0, 148($sp)		##_value212
sw $t0, 144($sp)		##_value213
sw $t0, 140($sp)		##_value214
sw $t0, 136($sp)		##_value215
sw $t0, 132($sp)		##_value216
sw $t0, 128($sp)		##_value217
sw $t0, 124($sp)		##_value218
sw $t0, 120($sp)		##_Type573
sw $t0, 116($sp)		##_value220
sw $t0, 112($sp)		##_length221
sw $t0, 108($sp)		##_isParam1InRange222
sw $t0, 104($sp)		##_value223
sw $t0, 100($sp)		##_value224
sw $t0, 96($sp)		##_value225
sw $t0, 92($sp)		##_lastIndex226
sw $t0, 88($sp)		##_isParam2InRange227
sw $t0, 84($sp)		##_value228
sw $t0, 80($sp)		##_isVoid591
sw $t0, 76($sp)		##_value230
sw $t0, 72($sp)		##_value231
sw $t0, 68($sp)		##_TypeValue232
sw $t0, 64($sp)		##not_is_void232
sw $t0, 60($sp)		##_value234
sw $t0, 56($sp)		##_closestAncestor235
sw $t0, 52($sp)		##_isNotConform236
sw $t0, 48($sp)		##_value237
sw $t0, 44($sp)		##_value238
sw $t0, 40($sp)		##_value239
sw $t0, 36($sp)		##_value240
sw $t0, 32($sp)		##_value241
sw $t0, 28($sp)		##_value242
sw $t0, 24($sp)		##_value243
sw $t0, 20($sp)		##_value244
sw $t0, 16($sp)		##_value245
sw $t0, 12($sp)		##_value246
sw $t0, 8($sp)		##_value247
sw $t0, 4($sp)		##_Type654
sw $t0, 0($sp)		##_value249
jal A_Init		##_value1=CALL A_Init
sw $v0, 992($sp)
lw $t1, 992($sp)		##a=_value1
sw $t1, 996($sp)
jal B_Init		##_value3=CALL B_Init
sw $v0, 984($sp)
lw $t1, 984($sp)		##b=_value3
sw $t1, 988($sp)
jal C_Init		##_value5=CALL C_Init
sw $v0, 976($sp)
lw $t1, 976($sp)		##c=_value5
sw $t1, 980($sp)
jal P_Init		##_value7=CALL P_Init
sw $v0, 968($sp)
lw $t1, 968($sp)		##p=_value7
sw $t1, 972($sp)
jal C1_Init		##_value9=CALL C1_Init
sw $v0, 960($sp)
lw $t1, 960($sp)		##c1=_value9
sw $t1, 964($sp)
jal C2_Init		##_value11=CALL C2_Init
sw $v0, 952($sp)
lw $t1, 952($sp)		##c2=_value11
sw $t1, 956($sp)
la $t0, heap		##_value13=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 944($sp)
lw $t1, 944($sp)		##i=_value13
sw $t1, 948($sp)
jal void_Init		##_value15=CALL void_Init
sw $v0, 936($sp)
lw $t1, 936($sp)		##o=_value15
sw $t1, 940($sp)
lw $t0, 1000($sp)		##_value16=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 932($sp)
la $t0, s74		##_value17= LOAD s74
sw $t0, 928($sp)
la $t0, heap		##_value18=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 924($sp)
lw $t0, 924($sp)		##SETATTR _value18 String_x _value17
addi $t0, $t0, 8
lw $t1, 928($sp)
sw $t1, ($t0)
lw $t0, 932($sp)		##_Type20= TYPEOF _value16
sw $t0, 920($sp)
lw $t1, 920($sp)		##_isVoid21=_Type20!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 916($sp)
lw $t1, 916($sp)		##if _isVoid21 goto Continue_22_Blah_bigCase
beq $t1, 1, Continue_22_Blah_bigCase
la $t0, s75		##_value21= LOAD s75
sw $t0, 912($sp)
lw $a0, 912($sp)		##out_str _value21
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_22_Blah_bigCase:		##Continue_22_Blah_bigCase:
lw $t0, 932($sp)		##arg _value16
sw $t0, -8($sp)
lw $t0, 924($sp)		##arg _value18
sw $t0, -12($sp)
lw $t0, 920($sp)		##_value22=VCALL _Type20 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 908($sp)
lw $t1, 964($sp)		##o=c1
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue24= TYPEOF o
sw $t0, 900($sp)
lw $t1, 900($sp)		##not_is_void24=_TypeValue24!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 896($sp)
lw $t1, 896($sp)		##if not_is_void24 goto Continue_33_Blah_bigCase
beq $t1, 1, Continue_33_Blah_bigCase
la $t0, s76		##_value26= LOAD s76
sw $t0, 892($sp)
lw $a0, 892($sp)		##out_str _value26
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_33_Blah_bigCase:		##Continue_33_Blah_bigCase:
la $a0, type_C1_name		##_isNotConform28= ISNOTCONFORM _TypeValue24 C1
lw $t0, 900($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 884($sp)
lw $t1, 884($sp)		##if _isNotConform28 goto Case_38_Blah_bigCase
beq $t1, 1, Case_38_Blah_bigCase
lw $t1, 940($sp)		##y=o
sw $t1, 880($sp)
la $t0, heap		##_value30=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 876($sp)
lw $t0, 876($sp)		##SETATTR _value30 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 876($sp)		##_value23=_value30
sw $t1, 904($sp)
j End_38_Blah_bigCase		##goto End_38_Blah_bigCase
Case_38_Blah_bigCase:		##Case_38_Blah_bigCase:
la $a0, type_C2_name		##_isNotConform28= ISNOTCONFORM _TypeValue24 C2
lw $t0, 900($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 884($sp)
lw $t1, 884($sp)		##if _isNotConform28 goto Case_46_Blah_bigCase
beq $t1, 1, Case_46_Blah_bigCase
lw $t1, 940($sp)		##z=o
sw $t1, 872($sp)
la $t0, heap		##_value32=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 868($sp)
lw $t0, 868($sp)		##SETATTR _value32 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 868($sp)		##_value23=_value32
sw $t1, 904($sp)
j End_38_Blah_bigCase		##goto End_38_Blah_bigCase
Case_46_Blah_bigCase:		##Case_46_Blah_bigCase:
la $a0, type_A_name		##_isNotConform28= ISNOTCONFORM _TypeValue24 A
lw $t0, 900($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 884($sp)
lw $t1, 884($sp)		##if _isNotConform28 goto Case_54_Blah_bigCase
beq $t1, 1, Case_54_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value34=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 860($sp)
lw $t0, 860($sp)		##SETATTR _value34 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 860($sp)		##_value23=_value34
sw $t1, 904($sp)
j End_38_Blah_bigCase		##goto End_38_Blah_bigCase
Case_54_Blah_bigCase:		##Case_54_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform28= ISNOTCONFORM _TypeValue24 Object
lw $t0, 900($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 884($sp)
lw $t1, 884($sp)		##if _isNotConform28 goto Case_62_Blah_bigCase
beq $t1, 1, Case_62_Blah_bigCase
lw $t1, 940($sp)		##k=o
sw $t1, 856($sp)
la $t0, heap		##_value36=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 852($sp)
lw $t0, 852($sp)		##SETATTR _value36 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 852($sp)		##_value23=_value36
sw $t1, 904($sp)
j End_38_Blah_bigCase		##goto End_38_Blah_bigCase
Case_62_Blah_bigCase:		##Case_62_Blah_bigCase:
la $t0, s77		##_value37= LOAD s77
sw $t0, 848($sp)
lw $a0, 848($sp)		##out_str _value37
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_38_Blah_bigCase:		##End_38_Blah_bigCase:
lw $t1, 904($sp)		##i=_value23
sw $t1, 948($sp)
la $t0, heap		##_value39=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 840($sp)
lw $t0, 840($sp)		##SETATTR _value39 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 948($sp)		##_value40=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 836($sp)
lw $t0, 840($sp)		##_value41=GETATTR _value39 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 832($sp)
lw $t1, 836($sp)		##_value38=_value40==_value41
lw $t2, 832($sp)
seq $t0, $t1, $t2
sw $t0, 844($sp)
la $t0, heap		##_value42=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 828($sp)
lw $t0, 828($sp)		##SETATTR _value42 Bool_x _value38
addi $t0, $t0, 8
lw $t1, 844($sp)
sw $t1, ($t0)
la $t0, heap		##_value43=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 824($sp)
lw $t0, 824($sp)		##SETATTR _value43 Int_x 381
addi $t0, $t0, 8
li $t1, 381
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type84= TYPEOF self
sw $t0, 820($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 828($sp)		##arg _value42
sw $t0, -12($sp)
lw $t0, 824($sp)		##arg _value43
sw $t0, -16($sp)
lw $t0, 820($sp)		##_value45=VCALL _Type84 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 816($sp)
lw $t1, 964($sp)		##o=c1
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue47= TYPEOF o
sw $t0, 808($sp)
lw $t1, 808($sp)		##not_is_void47=_TypeValue47!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 804($sp)
lw $t1, 804($sp)		##if not_is_void47 goto Continue_92_Blah_bigCase
beq $t1, 1, Continue_92_Blah_bigCase
la $t0, s78		##_value49= LOAD s78
sw $t0, 800($sp)
lw $a0, 800($sp)		##out_str _value49
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_92_Blah_bigCase:		##Continue_92_Blah_bigCase:
la $a0, type_C2_name		##_isNotConform51= ISNOTCONFORM _TypeValue47 C2
lw $t0, 808($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 792($sp)
lw $t1, 792($sp)		##if _isNotConform51 goto Case_97_Blah_bigCase
beq $t1, 1, Case_97_Blah_bigCase
lw $t1, 940($sp)		##z=o
sw $t1, 872($sp)
la $t0, heap		##_value52=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 788($sp)
lw $t0, 788($sp)		##SETATTR _value52 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 788($sp)		##_value46=_value52
sw $t1, 812($sp)
j End_97_Blah_bigCase		##goto End_97_Blah_bigCase
Case_97_Blah_bigCase:		##Case_97_Blah_bigCase:
la $a0, type_P_name		##_isNotConform51= ISNOTCONFORM _TypeValue47 P
lw $t0, 808($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 792($sp)
lw $t1, 792($sp)		##if _isNotConform51 goto Case_105_Blah_bigCase
beq $t1, 1, Case_105_Blah_bigCase
lw $t1, 940($sp)		##y=o
sw $t1, 880($sp)
la $t0, heap		##_value53=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 784($sp)
lw $t0, 784($sp)		##SETATTR _value53 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 784($sp)		##_value46=_value53
sw $t1, 812($sp)
j End_97_Blah_bigCase		##goto End_97_Blah_bigCase
Case_105_Blah_bigCase:		##Case_105_Blah_bigCase:
la $a0, type_A_name		##_isNotConform51= ISNOTCONFORM _TypeValue47 A
lw $t0, 808($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 792($sp)
lw $t1, 792($sp)		##if _isNotConform51 goto Case_113_Blah_bigCase
beq $t1, 1, Case_113_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value54=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 780($sp)
lw $t0, 780($sp)		##SETATTR _value54 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 780($sp)		##_value46=_value54
sw $t1, 812($sp)
j End_97_Blah_bigCase		##goto End_97_Blah_bigCase
Case_113_Blah_bigCase:		##Case_113_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform51= ISNOTCONFORM _TypeValue47 Object
lw $t0, 808($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 792($sp)
lw $t1, 792($sp)		##if _isNotConform51 goto Case_121_Blah_bigCase
beq $t1, 1, Case_121_Blah_bigCase
lw $t1, 940($sp)		##k=o
sw $t1, 856($sp)
la $t0, heap		##_value55=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 776($sp)
lw $t0, 776($sp)		##SETATTR _value55 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 776($sp)		##_value46=_value55
sw $t1, 812($sp)
j End_97_Blah_bigCase		##goto End_97_Blah_bigCase
Case_121_Blah_bigCase:		##Case_121_Blah_bigCase:
la $t0, s79		##_value56= LOAD s79
sw $t0, 772($sp)
lw $a0, 772($sp)		##out_str _value56
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_97_Blah_bigCase:		##End_97_Blah_bigCase:
lw $t1, 812($sp)		##i=_value46
sw $t1, 948($sp)
la $t0, heap		##_value58=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 764($sp)
lw $t0, 764($sp)		##SETATTR _value58 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 948($sp)		##_value59=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 760($sp)
lw $t0, 764($sp)		##_value60=GETATTR _value58 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 756($sp)
lw $t1, 760($sp)		##_value57=_value59==_value60
lw $t2, 756($sp)
seq $t0, $t1, $t2
sw $t0, 768($sp)
la $t0, heap		##_value61=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 752($sp)
lw $t0, 752($sp)		##SETATTR _value61 Bool_x _value57
addi $t0, $t0, 8
lw $t1, 768($sp)
sw $t1, ($t0)
la $t0, heap		##_value62=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 748($sp)
lw $t0, 748($sp)		##SETATTR _value62 Int_x 390
addi $t0, $t0, 8
li $t1, 390
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type143= TYPEOF self
sw $t0, 744($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 752($sp)		##arg _value61
sw $t0, -12($sp)
lw $t0, 748($sp)		##arg _value62
sw $t0, -16($sp)
lw $t0, 744($sp)		##_value64=VCALL _Type143 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 740($sp)
lw $t1, 956($sp)		##o=c2
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue66= TYPEOF o
sw $t0, 732($sp)
lw $t1, 732($sp)		##not_is_void66=_TypeValue66!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 728($sp)
lw $t1, 728($sp)		##if not_is_void66 goto Continue_151_Blah_bigCase
beq $t1, 1, Continue_151_Blah_bigCase
la $t0, s80		##_value68= LOAD s80
sw $t0, 724($sp)
lw $a0, 724($sp)		##out_str _value68
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_151_Blah_bigCase:		##Continue_151_Blah_bigCase:
la $a0, type_C2_name		##_isNotConform70= ISNOTCONFORM _TypeValue66 C2
lw $t0, 732($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 716($sp)
lw $t1, 716($sp)		##if _isNotConform70 goto Case_156_Blah_bigCase
beq $t1, 1, Case_156_Blah_bigCase
lw $t1, 940($sp)		##z=o
sw $t1, 872($sp)
la $t0, heap		##_value71=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 712($sp)
lw $t0, 712($sp)		##SETATTR _value71 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 712($sp)		##_value65=_value71
sw $t1, 736($sp)
j End_156_Blah_bigCase		##goto End_156_Blah_bigCase
Case_156_Blah_bigCase:		##Case_156_Blah_bigCase:
la $a0, type_P_name		##_isNotConform70= ISNOTCONFORM _TypeValue66 P
lw $t0, 732($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 716($sp)
lw $t1, 716($sp)		##if _isNotConform70 goto Case_164_Blah_bigCase
beq $t1, 1, Case_164_Blah_bigCase
lw $t1, 940($sp)		##y=o
sw $t1, 880($sp)
la $t0, heap		##_value72=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 708($sp)
lw $t0, 708($sp)		##SETATTR _value72 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 708($sp)		##_value65=_value72
sw $t1, 736($sp)
j End_156_Blah_bigCase		##goto End_156_Blah_bigCase
Case_164_Blah_bigCase:		##Case_164_Blah_bigCase:
la $a0, type_A_name		##_isNotConform70= ISNOTCONFORM _TypeValue66 A
lw $t0, 732($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 716($sp)
lw $t1, 716($sp)		##if _isNotConform70 goto Case_172_Blah_bigCase
beq $t1, 1, Case_172_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value73=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 704($sp)
lw $t0, 704($sp)		##SETATTR _value73 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 704($sp)		##_value65=_value73
sw $t1, 736($sp)
j End_156_Blah_bigCase		##goto End_156_Blah_bigCase
Case_172_Blah_bigCase:		##Case_172_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform70= ISNOTCONFORM _TypeValue66 Object
lw $t0, 732($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 716($sp)
lw $t1, 716($sp)		##if _isNotConform70 goto Case_180_Blah_bigCase
beq $t1, 1, Case_180_Blah_bigCase
lw $t1, 940($sp)		##k=o
sw $t1, 856($sp)
la $t0, heap		##_value74=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 700($sp)
lw $t0, 700($sp)		##SETATTR _value74 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 700($sp)		##_value65=_value74
sw $t1, 736($sp)
j End_156_Blah_bigCase		##goto End_156_Blah_bigCase
Case_180_Blah_bigCase:		##Case_180_Blah_bigCase:
la $t0, s81		##_value75= LOAD s81
sw $t0, 696($sp)
lw $a0, 696($sp)		##out_str _value75
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_156_Blah_bigCase:		##End_156_Blah_bigCase:
lw $t1, 736($sp)		##i=_value65
sw $t1, 948($sp)
la $t0, heap		##_value77=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 688($sp)
lw $t0, 688($sp)		##SETATTR _value77 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 948($sp)		##_value78=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 684($sp)
lw $t0, 688($sp)		##_value79=GETATTR _value77 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 680($sp)
lw $t1, 684($sp)		##_value76=_value78==_value79
lw $t2, 680($sp)
seq $t0, $t1, $t2
sw $t0, 692($sp)
la $t0, heap		##_value80=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 676($sp)
lw $t0, 676($sp)		##SETATTR _value80 Bool_x _value76
addi $t0, $t0, 8
lw $t1, 692($sp)
sw $t1, ($t0)
la $t0, heap		##_value81=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 672($sp)
lw $t0, 672($sp)		##SETATTR _value81 Int_x 399
addi $t0, $t0, 8
li $t1, 399
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type202= TYPEOF self
sw $t0, 668($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 676($sp)		##arg _value80
sw $t0, -12($sp)
lw $t0, 672($sp)		##arg _value81
sw $t0, -16($sp)
lw $t0, 668($sp)		##_value83=VCALL _Type202 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 664($sp)
lw $t1, 964($sp)		##o=c1
sw $t1, 940($sp)
lw $t0, 988($sp)		##_TypeValue85= TYPEOF b
sw $t0, 656($sp)
lw $t1, 656($sp)		##not_is_void85=_TypeValue85!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 652($sp)
lw $t1, 652($sp)		##if not_is_void85 goto Continue_210_Blah_bigCase
beq $t1, 1, Continue_210_Blah_bigCase
la $t0, s82		##_value87= LOAD s82
sw $t0, 648($sp)
lw $a0, 648($sp)		##out_str _value87
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_210_Blah_bigCase:		##Continue_210_Blah_bigCase:
la $a0, type_C1_name		##_isNotConform89= ISNOTCONFORM _TypeValue85 C1
lw $t0, 656($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 640($sp)
lw $t1, 640($sp)		##if _isNotConform89 goto Case_215_Blah_bigCase
beq $t1, 1, Case_215_Blah_bigCase
lw $t1, 988($sp)		##y=b
sw $t1, 880($sp)
la $t0, heap		##_value90=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 636($sp)
lw $t0, 636($sp)		##SETATTR _value90 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 636($sp)		##_value84=_value90
sw $t1, 660($sp)
j End_215_Blah_bigCase		##goto End_215_Blah_bigCase
Case_215_Blah_bigCase:		##Case_215_Blah_bigCase:
la $a0, type_C2_name		##_isNotConform89= ISNOTCONFORM _TypeValue85 C2
lw $t0, 656($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 640($sp)
lw $t1, 640($sp)		##if _isNotConform89 goto Case_223_Blah_bigCase
beq $t1, 1, Case_223_Blah_bigCase
lw $t1, 988($sp)		##z=b
sw $t1, 872($sp)
la $t0, heap		##_value91=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 632($sp)
lw $t0, 632($sp)		##SETATTR _value91 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 632($sp)		##_value84=_value91
sw $t1, 660($sp)
j End_215_Blah_bigCase		##goto End_215_Blah_bigCase
Case_223_Blah_bigCase:		##Case_223_Blah_bigCase:
la $a0, type_A_name		##_isNotConform89= ISNOTCONFORM _TypeValue85 A
lw $t0, 656($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 640($sp)
lw $t1, 640($sp)		##if _isNotConform89 goto Case_231_Blah_bigCase
beq $t1, 1, Case_231_Blah_bigCase
lw $t1, 988($sp)		##x=b
sw $t1, 864($sp)
la $t0, heap		##_value92=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 628($sp)
lw $t0, 628($sp)		##SETATTR _value92 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 628($sp)		##_value84=_value92
sw $t1, 660($sp)
j End_215_Blah_bigCase		##goto End_215_Blah_bigCase
Case_231_Blah_bigCase:		##Case_231_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform89= ISNOTCONFORM _TypeValue85 Object
lw $t0, 656($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 640($sp)
lw $t1, 640($sp)		##if _isNotConform89 goto Case_239_Blah_bigCase
beq $t1, 1, Case_239_Blah_bigCase
lw $t1, 988($sp)		##k=b
sw $t1, 856($sp)
la $t0, heap		##_value93=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 624($sp)
lw $t0, 624($sp)		##SETATTR _value93 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 624($sp)		##_value84=_value93
sw $t1, 660($sp)
j End_215_Blah_bigCase		##goto End_215_Blah_bigCase
Case_239_Blah_bigCase:		##Case_239_Blah_bigCase:
la $t0, s83		##_value94= LOAD s83
sw $t0, 620($sp)
lw $a0, 620($sp)		##out_str _value94
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_215_Blah_bigCase:		##End_215_Blah_bigCase:
lw $t1, 660($sp)		##i=_value84
sw $t1, 948($sp)
la $t0, heap		##_value96=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 612($sp)
lw $t0, 612($sp)		##SETATTR _value96 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 948($sp)		##_value97=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 608($sp)
lw $t0, 612($sp)		##_value98=GETATTR _value96 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 604($sp)
lw $t1, 608($sp)		##_value95=_value97==_value98
lw $t2, 604($sp)
seq $t0, $t1, $t2
sw $t0, 616($sp)
la $t0, heap		##_value99=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 600($sp)
lw $t0, 600($sp)		##SETATTR _value99 Bool_x _value95
addi $t0, $t0, 8
lw $t1, 616($sp)
sw $t1, ($t0)
la $t0, heap		##_value100=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 596($sp)
lw $t0, 596($sp)		##SETATTR _value100 Int_x 408
addi $t0, $t0, 8
li $t1, 408
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type261= TYPEOF self
sw $t0, 592($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 600($sp)		##arg _value99
sw $t0, -12($sp)
lw $t0, 596($sp)		##arg _value100
sw $t0, -16($sp)
lw $t0, 592($sp)		##_value102=VCALL _Type261 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 588($sp)
lw $t1, 988($sp)		##o=b
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue104= TYPEOF o
sw $t0, 580($sp)
lw $t1, 580($sp)		##not_is_void104=_TypeValue104!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 576($sp)
lw $t1, 576($sp)		##if not_is_void104 goto Continue_269_Blah_bigCase
beq $t1, 1, Continue_269_Blah_bigCase
la $t0, s84		##_value106= LOAD s84
sw $t0, 572($sp)
lw $a0, 572($sp)		##out_str _value106
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_269_Blah_bigCase:		##Continue_269_Blah_bigCase:
la $a0, type_C_name		##_isNotConform108= ISNOTCONFORM _TypeValue104 C
lw $t0, 580($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 564($sp)
lw $t1, 564($sp)		##if _isNotConform108 goto Case_274_Blah_bigCase
beq $t1, 1, Case_274_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value109=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 560($sp)
lw $t0, 560($sp)		##SETATTR _value109 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 560($sp)		##_value103=_value109
sw $t1, 584($sp)
j End_274_Blah_bigCase		##goto End_274_Blah_bigCase
Case_274_Blah_bigCase:		##Case_274_Blah_bigCase:
la $a0, type_B_name		##_isNotConform108= ISNOTCONFORM _TypeValue104 B
lw $t0, 580($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 564($sp)
lw $t1, 564($sp)		##if _isNotConform108 goto Case_282_Blah_bigCase
beq $t1, 1, Case_282_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value110=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 556($sp)
lw $t0, 556($sp)		##SETATTR _value110 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 556($sp)		##_value103=_value110
sw $t1, 584($sp)
j End_274_Blah_bigCase		##goto End_274_Blah_bigCase
Case_282_Blah_bigCase:		##Case_282_Blah_bigCase:
la $a0, type_A_name		##_isNotConform108= ISNOTCONFORM _TypeValue104 A
lw $t0, 580($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 564($sp)
lw $t1, 564($sp)		##if _isNotConform108 goto Case_290_Blah_bigCase
beq $t1, 1, Case_290_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value111=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 552($sp)
lw $t0, 552($sp)		##SETATTR _value111 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 552($sp)		##_value103=_value111
sw $t1, 584($sp)
j End_274_Blah_bigCase		##goto End_274_Blah_bigCase
Case_290_Blah_bigCase:		##Case_290_Blah_bigCase:
la $t0, s85		##_value112= LOAD s85
sw $t0, 548($sp)
lw $a0, 548($sp)		##out_str _value112
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_274_Blah_bigCase:		##End_274_Blah_bigCase:
lw $t1, 584($sp)		##i=_value103
sw $t1, 948($sp)
la $t0, heap		##_value114=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 540($sp)
lw $t0, 540($sp)		##SETATTR _value114 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 948($sp)		##_value115=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 536($sp)
lw $t0, 540($sp)		##_value116=GETATTR _value114 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 532($sp)
lw $t1, 536($sp)		##_value113=_value115==_value116
lw $t2, 532($sp)
seq $t0, $t1, $t2
sw $t0, 544($sp)
la $t0, heap		##_value117=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 528($sp)
lw $t0, 528($sp)		##SETATTR _value117 Bool_x _value113
addi $t0, $t0, 8
lw $t1, 544($sp)
sw $t1, ($t0)
la $t0, heap		##_value118=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 524($sp)
lw $t0, 524($sp)		##SETATTR _value118 Int_x 417
addi $t0, $t0, 8
li $t1, 417
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type312= TYPEOF self
sw $t0, 520($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 528($sp)		##arg _value117
sw $t0, -12($sp)
lw $t0, 524($sp)		##arg _value118
sw $t0, -16($sp)
lw $t0, 520($sp)		##_value120=VCALL _Type312 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 516($sp)
lw $t1, 980($sp)		##o=c
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue122= TYPEOF o
sw $t0, 508($sp)
lw $t1, 508($sp)		##not_is_void122=_TypeValue122!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 504($sp)
lw $t1, 504($sp)		##if not_is_void122 goto Continue_320_Blah_bigCase
beq $t1, 1, Continue_320_Blah_bigCase
la $t0, s86		##_value124= LOAD s86
sw $t0, 500($sp)
lw $a0, 500($sp)		##out_str _value124
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_320_Blah_bigCase:		##Continue_320_Blah_bigCase:
la $a0, type_C_name		##_isNotConform126= ISNOTCONFORM _TypeValue122 C
lw $t0, 508($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 492($sp)
lw $t1, 492($sp)		##if _isNotConform126 goto Case_325_Blah_bigCase
beq $t1, 1, Case_325_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value127=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 488($sp)
lw $t0, 488($sp)		##SETATTR _value127 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 488($sp)		##_value121=_value127
sw $t1, 512($sp)
j End_325_Blah_bigCase		##goto End_325_Blah_bigCase
Case_325_Blah_bigCase:		##Case_325_Blah_bigCase:
la $a0, type_B_name		##_isNotConform126= ISNOTCONFORM _TypeValue122 B
lw $t0, 508($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 492($sp)
lw $t1, 492($sp)		##if _isNotConform126 goto Case_333_Blah_bigCase
beq $t1, 1, Case_333_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value128=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 484($sp)
lw $t0, 484($sp)		##SETATTR _value128 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 484($sp)		##_value121=_value128
sw $t1, 512($sp)
j End_325_Blah_bigCase		##goto End_325_Blah_bigCase
Case_333_Blah_bigCase:		##Case_333_Blah_bigCase:
la $a0, type_A_name		##_isNotConform126= ISNOTCONFORM _TypeValue122 A
lw $t0, 508($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 492($sp)
lw $t1, 492($sp)		##if _isNotConform126 goto Case_341_Blah_bigCase
beq $t1, 1, Case_341_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value129=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 480($sp)
lw $t0, 480($sp)		##SETATTR _value129 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 480($sp)		##_value121=_value129
sw $t1, 512($sp)
j End_325_Blah_bigCase		##goto End_325_Blah_bigCase
Case_341_Blah_bigCase:		##Case_341_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform126= ISNOTCONFORM _TypeValue122 Object
lw $t0, 508($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 492($sp)
lw $t1, 492($sp)		##if _isNotConform126 goto Case_349_Blah_bigCase
beq $t1, 1, Case_349_Blah_bigCase
lw $t1, 940($sp)		##k=o
sw $t1, 856($sp)
la $t0, heap		##_value130=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 476($sp)
lw $t0, 476($sp)		##SETATTR _value130 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 476($sp)		##_value121=_value130
sw $t1, 512($sp)
j End_325_Blah_bigCase		##goto End_325_Blah_bigCase
Case_349_Blah_bigCase:		##Case_349_Blah_bigCase:
la $t0, s87		##_value131= LOAD s87
sw $t0, 472($sp)
lw $a0, 472($sp)		##out_str _value131
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_325_Blah_bigCase:		##End_325_Blah_bigCase:
lw $t1, 512($sp)		##i=_value121
sw $t1, 948($sp)
la $t0, heap		##_value133=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 464($sp)
lw $t0, 464($sp)		##SETATTR _value133 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 948($sp)		##_value134=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 460($sp)
lw $t0, 464($sp)		##_value135=GETATTR _value133 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 456($sp)
lw $t1, 460($sp)		##_value132=_value134==_value135
lw $t2, 456($sp)
seq $t0, $t1, $t2
sw $t0, 468($sp)
la $t0, heap		##_value136=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 452($sp)
lw $t0, 452($sp)		##SETATTR _value136 Bool_x _value132
addi $t0, $t0, 8
lw $t1, 468($sp)
sw $t1, ($t0)
la $t0, heap		##_value137=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 448($sp)
lw $t0, 448($sp)		##SETATTR _value137 Int_x 426
addi $t0, $t0, 8
li $t1, 426
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type371= TYPEOF self
sw $t0, 444($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 452($sp)		##arg _value136
sw $t0, -12($sp)
lw $t0, 448($sp)		##arg _value137
sw $t0, -16($sp)
lw $t0, 444($sp)		##_value139=VCALL _Type371 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 440($sp)
lw $t1, 964($sp)		##o=c1
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue141= TYPEOF o
sw $t0, 432($sp)
lw $t1, 432($sp)		##not_is_void141=_TypeValue141!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 428($sp)
lw $t1, 428($sp)		##if not_is_void141 goto Continue_379_Blah_bigCase
beq $t1, 1, Continue_379_Blah_bigCase
la $t0, s88		##_value143= LOAD s88
sw $t0, 424($sp)
lw $a0, 424($sp)		##out_str _value143
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_379_Blah_bigCase:		##Continue_379_Blah_bigCase:
la $a0, type_C_name		##_isNotConform145= ISNOTCONFORM _TypeValue141 C
lw $t0, 432($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 416($sp)
lw $t1, 416($sp)		##if _isNotConform145 goto Case_384_Blah_bigCase
beq $t1, 1, Case_384_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value146=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 412($sp)
lw $t0, 412($sp)		##SETATTR _value146 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 412($sp)		##_value140=_value146
sw $t1, 436($sp)
j End_384_Blah_bigCase		##goto End_384_Blah_bigCase
Case_384_Blah_bigCase:		##Case_384_Blah_bigCase:
la $a0, type_B_name		##_isNotConform145= ISNOTCONFORM _TypeValue141 B
lw $t0, 432($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 416($sp)
lw $t1, 416($sp)		##if _isNotConform145 goto Case_392_Blah_bigCase
beq $t1, 1, Case_392_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value147=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 408($sp)
lw $t0, 408($sp)		##SETATTR _value147 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 408($sp)		##_value140=_value147
sw $t1, 436($sp)
j End_384_Blah_bigCase		##goto End_384_Blah_bigCase
Case_392_Blah_bigCase:		##Case_392_Blah_bigCase:
la $a0, type_A_name		##_isNotConform145= ISNOTCONFORM _TypeValue141 A
lw $t0, 432($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 416($sp)
lw $t1, 416($sp)		##if _isNotConform145 goto Case_400_Blah_bigCase
beq $t1, 1, Case_400_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value148=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 404($sp)
lw $t0, 404($sp)		##SETATTR _value148 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 404($sp)		##_value140=_value148
sw $t1, 436($sp)
j End_384_Blah_bigCase		##goto End_384_Blah_bigCase
Case_400_Blah_bigCase:		##Case_400_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform145= ISNOTCONFORM _TypeValue141 Object
lw $t0, 432($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 416($sp)
lw $t1, 416($sp)		##if _isNotConform145 goto Case_408_Blah_bigCase
beq $t1, 1, Case_408_Blah_bigCase
lw $t1, 940($sp)		##k=o
sw $t1, 856($sp)
la $t0, heap		##_value149=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 400($sp)
lw $t0, 400($sp)		##SETATTR _value149 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 400($sp)		##_value140=_value149
sw $t1, 436($sp)
j End_384_Blah_bigCase		##goto End_384_Blah_bigCase
Case_408_Blah_bigCase:		##Case_408_Blah_bigCase:
la $t0, s89		##_value150= LOAD s89
sw $t0, 396($sp)
lw $a0, 396($sp)		##out_str _value150
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_384_Blah_bigCase:		##End_384_Blah_bigCase:
lw $t1, 436($sp)		##i=_value140
sw $t1, 948($sp)
la $t0, heap		##_value152=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 388($sp)
lw $t0, 388($sp)		##SETATTR _value152 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 948($sp)		##_value153=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 384($sp)
lw $t0, 388($sp)		##_value154=GETATTR _value152 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 380($sp)
lw $t1, 384($sp)		##_value151=_value153==_value154
lw $t2, 380($sp)
seq $t0, $t1, $t2
sw $t0, 392($sp)
la $t0, heap		##_value155=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 376($sp)
lw $t0, 376($sp)		##SETATTR _value155 Bool_x _value151
addi $t0, $t0, 8
lw $t1, 392($sp)
sw $t1, ($t0)
la $t0, heap		##_value156=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 372($sp)
lw $t0, 372($sp)		##SETATTR _value156 Int_x 438
addi $t0, $t0, 8
li $t1, 438
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type430= TYPEOF self
sw $t0, 368($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 376($sp)		##arg _value155
sw $t0, -12($sp)
lw $t0, 372($sp)		##arg _value156
sw $t0, -16($sp)
lw $t0, 368($sp)		##_value158=VCALL _Type430 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 364($sp)
lw $t1, 988($sp)		##o=b
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue160= TYPEOF o
sw $t0, 356($sp)
lw $t1, 356($sp)		##not_is_void160=_TypeValue160!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 352($sp)
lw $t1, 352($sp)		##if not_is_void160 goto Continue_438_Blah_bigCase
beq $t1, 1, Continue_438_Blah_bigCase
la $t0, s90		##_value162= LOAD s90
sw $t0, 348($sp)
lw $a0, 348($sp)		##out_str _value162
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_438_Blah_bigCase:		##Continue_438_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform164= ISNOTCONFORM _TypeValue160 Object
lw $t0, 356($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 340($sp)
lw $t1, 340($sp)		##if _isNotConform164 goto Case_443_Blah_bigCase
beq $t1, 1, Case_443_Blah_bigCase
lw $t1, 940($sp)		##k=o
sw $t1, 856($sp)
la $t0, heap		##_value165=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 336($sp)
lw $t0, 336($sp)		##SETATTR _value165 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 336($sp)		##_value159=_value165
sw $t1, 360($sp)
j End_443_Blah_bigCase		##goto End_443_Blah_bigCase
Case_443_Blah_bigCase:		##Case_443_Blah_bigCase:
la $t0, s91		##_value166= LOAD s91
sw $t0, 332($sp)
lw $a0, 332($sp)		##out_str _value166
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_443_Blah_bigCase:		##End_443_Blah_bigCase:
lw $t1, 360($sp)		##i=_value159
sw $t1, 948($sp)
la $t0, heap		##_value168=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 324($sp)
lw $t0, 324($sp)		##SETATTR _value168 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 948($sp)		##_value169=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 320($sp)
lw $t0, 324($sp)		##_value170=GETATTR _value168 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 316($sp)
lw $t1, 320($sp)		##_value167=_value169==_value170
lw $t2, 316($sp)
seq $t0, $t1, $t2
sw $t0, 328($sp)
la $t0, heap		##_value171=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 312($sp)
lw $t0, 312($sp)		##SETATTR _value171 Bool_x _value167
addi $t0, $t0, 8
lw $t1, 328($sp)
sw $t1, ($t0)
la $t0, heap		##_value172=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 308($sp)
lw $t0, 308($sp)		##SETATTR _value172 Int_x 444
addi $t0, $t0, 8
li $t1, 444
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type465= TYPEOF self
sw $t0, 304($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 312($sp)		##arg _value171
sw $t0, -12($sp)
lw $t0, 308($sp)		##arg _value172
sw $t0, -16($sp)
lw $t0, 304($sp)		##_value174=VCALL _Type465 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 300($sp)
la $t0, heap		##_value175=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 296($sp)
lw $t0, 296($sp)		##SETATTR _value175 Bool_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 296($sp)		##o=_value175
sw $t1, 940($sp)
lw $t0, 940($sp)		##_TypeValue177= TYPEOF o
sw $t0, 288($sp)
lw $t1, 288($sp)		##not_is_void177=_TypeValue177!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 284($sp)
lw $t1, 284($sp)		##if not_is_void177 goto Continue_475_Blah_bigCase
beq $t1, 1, Continue_475_Blah_bigCase
la $t0, s92		##_value179= LOAD s92
sw $t0, 280($sp)
lw $a0, 280($sp)		##out_str _value179
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_475_Blah_bigCase:		##Continue_475_Blah_bigCase:
la $a0, type_C_name		##_isNotConform181= ISNOTCONFORM _TypeValue177 C
lw $t0, 288($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 272($sp)
lw $t1, 272($sp)		##if _isNotConform181 goto Case_480_Blah_bigCase
beq $t1, 1, Case_480_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value182=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 268($sp)
lw $t0, 268($sp)		##SETATTR _value182 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 268($sp)		##_value176=_value182
sw $t1, 292($sp)
j End_480_Blah_bigCase		##goto End_480_Blah_bigCase
Case_480_Blah_bigCase:		##Case_480_Blah_bigCase:
la $a0, type_B_name		##_isNotConform181= ISNOTCONFORM _TypeValue177 B
lw $t0, 288($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 272($sp)
lw $t1, 272($sp)		##if _isNotConform181 goto Case_488_Blah_bigCase
beq $t1, 1, Case_488_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value183=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 264($sp)
lw $t0, 264($sp)		##SETATTR _value183 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 264($sp)		##_value176=_value183
sw $t1, 292($sp)
j End_480_Blah_bigCase		##goto End_480_Blah_bigCase
Case_488_Blah_bigCase:		##Case_488_Blah_bigCase:
la $a0, type_Bool_name		##_isNotConform181= ISNOTCONFORM _TypeValue177 Bool
lw $t0, 288($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 272($sp)
lw $t1, 272($sp)		##if _isNotConform181 goto Case_496_Blah_bigCase
beq $t1, 1, Case_496_Blah_bigCase
lw $t1, 940($sp)		##x=o
sw $t1, 864($sp)
la $t0, heap		##_value184=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 260($sp)
lw $t0, 260($sp)		##SETATTR _value184 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 260($sp)		##_value176=_value184
sw $t1, 292($sp)
j End_480_Blah_bigCase		##goto End_480_Blah_bigCase
Case_496_Blah_bigCase:		##Case_496_Blah_bigCase:
la $t0, s93		##_value185= LOAD s93
sw $t0, 256($sp)
lw $a0, 256($sp)		##out_str _value185
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_480_Blah_bigCase:		##End_480_Blah_bigCase:
lw $t1, 292($sp)		##i=_value176
sw $t1, 948($sp)
la $t0, heap		##_value187=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 248($sp)
lw $t0, 248($sp)		##SETATTR _value187 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t0, 948($sp)		##_value188=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 244($sp)
lw $t0, 248($sp)		##_value189=GETATTR _value187 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 240($sp)
lw $t1, 244($sp)		##_value186=_value188==_value189
lw $t2, 240($sp)
seq $t0, $t1, $t2
sw $t0, 252($sp)
la $t0, heap		##_value190=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 236($sp)
lw $t0, 236($sp)		##SETATTR _value190 Bool_x _value186
addi $t0, $t0, 8
lw $t1, 252($sp)
sw $t1, ($t0)
la $t0, heap		##_value191=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 232($sp)
lw $t0, 232($sp)		##SETATTR _value191 Int_x 453
addi $t0, $t0, 8
li $t1, 453
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type518= TYPEOF self
sw $t0, 228($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 236($sp)		##arg _value190
sw $t0, -12($sp)
lw $t0, 232($sp)		##arg _value191
sw $t0, -16($sp)
lw $t0, 228($sp)		##_value193=VCALL _Type518 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 224($sp)
la $t0, heap		##_value194=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 220($sp)
lw $t0, 220($sp)		##SETATTR _value194 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 220($sp)		##o=_value194
sw $t1, 940($sp)
la $t0, heap		##_value196=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 212($sp)
lw $t0, 212($sp)		##SETATTR _value196 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 212($sp)		##_TypeValue197= TYPEOF _value196
sw $t0, 208($sp)
lw $t1, 208($sp)		##not_is_void197=_TypeValue197!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 204($sp)
lw $t1, 204($sp)		##if not_is_void197 goto Continue_530_Blah_bigCase
beq $t1, 1, Continue_530_Blah_bigCase
la $t0, s94		##_value199= LOAD s94
sw $t0, 200($sp)
lw $a0, 200($sp)		##out_str _value199
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_530_Blah_bigCase:		##Continue_530_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform201= ISNOTCONFORM _TypeValue197 Object
lw $t0, 208($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 192($sp)
lw $t1, 192($sp)		##if _isNotConform201 goto Case_535_Blah_bigCase
beq $t1, 1, Case_535_Blah_bigCase
lw $t1, 212($sp)		##k=_value196
sw $t1, 856($sp)
la $t0, heap		##_value202=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 188($sp)
lw $t0, 188($sp)		##SETATTR _value202 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 188($sp)		##_value195=_value202
sw $t1, 216($sp)
j End_535_Blah_bigCase		##goto End_535_Blah_bigCase
Case_535_Blah_bigCase:		##Case_535_Blah_bigCase:
la $t0, s95		##_value203= LOAD s95
sw $t0, 184($sp)
lw $a0, 184($sp)		##out_str _value203
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_535_Blah_bigCase:		##End_535_Blah_bigCase:
lw $t1, 216($sp)		##i=_value195
sw $t1, 948($sp)
la $t0, heap		##_value205=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 176($sp)
lw $t0, 176($sp)		##SETATTR _value205 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t0, 948($sp)		##_value206=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 172($sp)
lw $t0, 176($sp)		##_value207=GETATTR _value205 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 168($sp)
lw $t1, 172($sp)		##_value204=_value206==_value207
lw $t2, 168($sp)
seq $t0, $t1, $t2
sw $t0, 180($sp)
la $t0, heap		##_value208=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 164($sp)
lw $t0, 164($sp)		##SETATTR _value208 Bool_x _value204
addi $t0, $t0, 8
lw $t1, 180($sp)
sw $t1, ($t0)
la $t0, heap		##_value209=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 160($sp)
lw $t0, 160($sp)		##SETATTR _value209 Int_x 459
addi $t0, $t0, 8
li $t1, 459
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type557= TYPEOF self
sw $t0, 156($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 164($sp)		##arg _value208
sw $t0, -12($sp)
lw $t0, 160($sp)		##arg _value209
sw $t0, -16($sp)
lw $t0, 156($sp)		##_value211=VCALL _Type557 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 152($sp)
la $t0, s96		##_value212= LOAD s96
sw $t0, 148($sp)
la $t0, heap		##_value213=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 144($sp)
lw $t0, 144($sp)		##SETATTR _value213 String_x _value212
addi $t0, $t0, 8
lw $t1, 148($sp)
sw $t1, ($t0)
lw $t1, 144($sp)		##o=_value213
sw $t1, 940($sp)
la $t0, s97		##_value215= LOAD s97
sw $t0, 136($sp)
la $t0, heap		##_value216=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 132($sp)
lw $t0, 132($sp)		##SETATTR _value216 String_x _value215
addi $t0, $t0, 8
lw $t1, 136($sp)
sw $t1, ($t0)
la $t0, heap		##_value217=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 128($sp)
lw $t0, 128($sp)		##SETATTR _value217 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
la $t0, heap		##_value218=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 124($sp)
lw $t0, 124($sp)		##SETATTR _value218 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 132($sp)		##_Type573= TYPEOF _value216
sw $t0, 120($sp)
lw $t0, 132($sp)		##_value220=GETATTR _value216 String_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 116($sp)
lw $t0, 116($sp)		##_length221 = LENGHT _value220
jal lengthFunctionStart
sw $v0, 112($sp)
lw $t0, 128($sp)		##_value223=GETATTR _value217 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 104($sp)
lw $t0, 124($sp)		##_value224=GETATTR _value218 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 100($sp)
lw $t1, 104($sp)		##_isParam1InRange222=_value223<_length221
lw $t2, 112($sp)
slt $t0, $t1, $t2
sw $t0, 108($sp)
lw $t1, 108($sp)		##if _isParam1InRange222 goto Continue_579_Blah_bigCase
beq $t1, 1, Continue_579_Blah_bigCase
la $t0, s98		##_value225= LOAD s98
sw $t0, 96($sp)
lw $a0, 96($sp)		##out_str _value225
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_579_Blah_bigCase:		##Continue_579_Blah_bigCase:
lw $t1, 104($sp)		##_lastIndex226=_value223+_value224
lw $t2, 100($sp)
add $t0, $t1, $t2
sw $t0, 92($sp)
lw $t1, 92($sp)		##_isParam2InRange227=_lastIndex226<=_length221
lw $t2, 112($sp)
sle $t0, $t1, $t2
sw $t0, 88($sp)
lw $t1, 88($sp)		##if _isParam2InRange227 goto Continue_586_Blah_bigCase
beq $t1, 1, Continue_586_Blah_bigCase
la $t0, s99		##_value228= LOAD s99
sw $t0, 84($sp)
lw $a0, 84($sp)		##out_str _value228
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_586_Blah_bigCase:		##Continue_586_Blah_bigCase:
lw $t1, 120($sp)		##_isVoid591=_Type573!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 80($sp)
lw $t1, 80($sp)		##if _isVoid591 goto Continue_592_Blah_bigCase
beq $t1, 1, Continue_592_Blah_bigCase
la $t0, s100		##_value230= LOAD s100
sw $t0, 76($sp)
lw $a0, 76($sp)		##out_str _value230
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_592_Blah_bigCase:		##Continue_592_Blah_bigCase:
lw $t0, 132($sp)		##arg _value216
sw $t0, -8($sp)
lw $t0, 128($sp)		##arg _value217
sw $t0, -12($sp)
lw $t0, 124($sp)		##arg _value218
sw $t0, -16($sp)
jal String_substr		##_value231=CALL String_substr
sw $v0, 72($sp)
lw $t0, 72($sp)		##_TypeValue232= TYPEOF _value231
sw $t0, 68($sp)
lw $t1, 68($sp)		##not_is_void232=_TypeValue232!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 64($sp)
lw $t1, 64($sp)		##if not_is_void232 goto Continue_603_Blah_bigCase
beq $t1, 1, Continue_603_Blah_bigCase
la $t0, s101		##_value234= LOAD s101
sw $t0, 60($sp)
lw $a0, 60($sp)		##out_str _value234
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_603_Blah_bigCase:		##Continue_603_Blah_bigCase:
la $a0, type_C_name		##_isNotConform236= ISNOTCONFORM _TypeValue232 C
lw $t0, 68($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 52($sp)
lw $t1, 52($sp)		##if _isNotConform236 goto Case_608_Blah_bigCase
beq $t1, 1, Case_608_Blah_bigCase
lw $t1, 72($sp)		##x=_value231
sw $t1, 864($sp)
la $t0, heap		##_value237=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 48($sp)
lw $t0, 48($sp)		##SETATTR _value237 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 48($sp)		##_value214=_value237
sw $t1, 140($sp)
j End_608_Blah_bigCase		##goto End_608_Blah_bigCase
Case_608_Blah_bigCase:		##Case_608_Blah_bigCase:
la $a0, type_String_name		##_isNotConform236= ISNOTCONFORM _TypeValue232 String
lw $t0, 68($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 52($sp)
lw $t1, 52($sp)		##if _isNotConform236 goto Case_616_Blah_bigCase
beq $t1, 1, Case_616_Blah_bigCase
lw $t1, 72($sp)		##y=_value231
sw $t1, 880($sp)
la $t0, heap		##_value238=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 44($sp)
lw $t0, 44($sp)		##SETATTR _value238 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t1, 44($sp)		##_value214=_value238
sw $t1, 140($sp)
j End_608_Blah_bigCase		##goto End_608_Blah_bigCase
Case_616_Blah_bigCase:		##Case_616_Blah_bigCase:
la $a0, type_Bool_name		##_isNotConform236= ISNOTCONFORM _TypeValue232 Bool
lw $t0, 68($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 52($sp)
lw $t1, 52($sp)		##if _isNotConform236 goto Case_624_Blah_bigCase
beq $t1, 1, Case_624_Blah_bigCase
lw $t1, 72($sp)		##x=_value231
sw $t1, 864($sp)
la $t0, heap		##_value239=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 40($sp)
lw $t0, 40($sp)		##SETATTR _value239 Int_x 1
addi $t0, $t0, 8
li $t1, 1
sw $t1, ($t0)
lw $t1, 40($sp)		##_value214=_value239
sw $t1, 140($sp)
j End_608_Blah_bigCase		##goto End_608_Blah_bigCase
Case_624_Blah_bigCase:		##Case_624_Blah_bigCase:
la $a0, type_Object_name		##_isNotConform236= ISNOTCONFORM _TypeValue232 Object
lw $t0, 68($sp)
lw $t0, ($t0)
addi $a1, $t0, -4
jal conformFunctionStart
sw $v0, 52($sp)
lw $t1, 52($sp)		##if _isNotConform236 goto Case_632_Blah_bigCase
beq $t1, 1, Case_632_Blah_bigCase
lw $t1, 72($sp)		##k=_value231
sw $t1, 856($sp)
la $t0, heap		##_value240=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 36($sp)
lw $t0, 36($sp)		##SETATTR _value240 Int_x 4
addi $t0, $t0, 8
li $t1, 4
sw $t1, ($t0)
lw $t1, 36($sp)		##_value214=_value240
sw $t1, 140($sp)
j End_608_Blah_bigCase		##goto End_608_Blah_bigCase
Case_632_Blah_bigCase:		##Case_632_Blah_bigCase:
la $t0, s102		##_value241= LOAD s102
sw $t0, 32($sp)
lw $a0, 32($sp)		##out_str _value241
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
End_608_Blah_bigCase:		##End_608_Blah_bigCase:
lw $t1, 140($sp)		##i=_value214
sw $t1, 948($sp)
la $t0, heap		##_value243=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value243 Int_x 2
addi $t0, $t0, 8
li $t1, 2
sw $t1, ($t0)
lw $t0, 948($sp)		##_value244=GETATTR i Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value245=GETATTR _value243 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_value242=_value244==_value245
lw $t2, 16($sp)
seq $t0, $t1, $t2
sw $t0, 28($sp)
la $t0, heap		##_value246=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value246 Bool_x _value242
addi $t0, $t0, 8
lw $t1, 28($sp)
sw $t1, ($t0)
la $t0, heap		##_value247=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value247 Int_x 468
addi $t0, $t0, 8
li $t1, 468
sw $t1, ($t0)
lw $t0, 1000($sp)		##_Type654= TYPEOF self
sw $t0, 4($sp)
lw $t0, 1000($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value246
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value247
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value249=VCALL _Type654 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 1004($sp)		##return _value249
lw $v0, 0($sp)
addi $sp, $sp 1008
jr $ra


Blah_bigAttrAccess:
sub $sp, $sp, 160
sw $ra, 156($sp)
##		152($sp)	self
li $t0, 0
sw $t0, 148($sp)		##c
sw $t0, 144($sp)		##_value1
sw $t0, 140($sp)		##_value2
sw $t0, 136($sp)		##_value3
sw $t0, 132($sp)		##_value4
sw $t0, 128($sp)		##_Type6
sw $t0, 124($sp)		##_isVoid7
sw $t0, 120($sp)		##_value7
sw $t0, 116($sp)		##_value8
sw $t0, 112($sp)		##_value9
sw $t0, 108($sp)		##_Type16
sw $t0, 104($sp)		##_isVoid17
sw $t0, 100($sp)		##_value12
sw $t0, 96($sp)		##_value13
sw $t0, 92($sp)		##_value14
sw $t0, 88($sp)		##_value15
sw $t0, 84($sp)		##_value16
sw $t0, 80($sp)		##_value17
sw $t0, 76($sp)		##_value18
sw $t0, 72($sp)		##_Type34
sw $t0, 68($sp)		##_value20
sw $t0, 64($sp)		##_value21
sw $t0, 60($sp)		##_Type41
sw $t0, 56($sp)		##_isVoid42
sw $t0, 52($sp)		##_value24
sw $t0, 48($sp)		##_value25
sw $t0, 44($sp)		##_value26
sw $t0, 40($sp)		##_Type51
sw $t0, 36($sp)		##_isVoid52
sw $t0, 32($sp)		##_value29
sw $t0, 28($sp)		##_value30
sw $t0, 24($sp)		##_value31
sw $t0, 20($sp)		##_value32
sw $t0, 16($sp)		##_value33
sw $t0, 12($sp)		##_value34
sw $t0, 8($sp)		##_value35
sw $t0, 4($sp)		##_Type69
sw $t0, 0($sp)		##_value37
jal C2_Init		##_value1=CALL C2_Init
sw $v0, 144($sp)
lw $t1, 144($sp)		##c=_value1
sw $t1, 148($sp)
lw $t0, 152($sp)		##_value2=GETATTR self Blah_io
addi $t0, $t0, 32
lw $t0, ($t0)
sw $t0, 140($sp)
la $t0, s103		##_value3= LOAD s103
sw $t0, 136($sp)
la $t0, heap		##_value4=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 132($sp)
lw $t0, 132($sp)		##SETATTR _value4 String_x _value3
addi $t0, $t0, 8
lw $t1, 136($sp)
sw $t1, ($t0)
lw $t0, 140($sp)		##_Type6= TYPEOF _value2
sw $t0, 128($sp)
lw $t1, 128($sp)		##_isVoid7=_Type6!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 124($sp)
lw $t1, 124($sp)		##if _isVoid7 goto Continue_8_Blah_bigAttrAccess
beq $t1, 1, Continue_8_Blah_bigAttrAccess
la $t0, s104		##_value7= LOAD s104
sw $t0, 120($sp)
lw $a0, 120($sp)		##out_str _value7
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_8_Blah_bigAttrAccess:		##Continue_8_Blah_bigAttrAccess:
lw $t0, 140($sp)		##arg _value2
sw $t0, -8($sp)
lw $t0, 132($sp)		##arg _value4
sw $t0, -12($sp)
lw $t0, 128($sp)		##_value8=VCALL _Type6 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 116($sp)
lw $t0, 148($sp)		##_Type16= TYPEOF c
sw $t0, 108($sp)
lw $t1, 108($sp)		##_isVoid17=_Type16!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 104($sp)
lw $t1, 104($sp)		##if _isVoid17 goto Continue_18_Blah_bigAttrAccess
beq $t1, 1, Continue_18_Blah_bigAttrAccess
la $t0, s105		##_value12= LOAD s105
sw $t0, 100($sp)
lw $a0, 100($sp)		##out_str _value12
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_18_Blah_bigAttrAccess:		##Continue_18_Blah_bigAttrAccess:
lw $t0, 148($sp)		##arg c
sw $t0, -8($sp)
lw $t0, 108($sp)		##_value13=VCALL _Type16 C2_getX
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 96($sp)
la $t0, heap		##_value14=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 92($sp)
lw $t0, 92($sp)		##SETATTR _value14 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t0, 96($sp)		##_value15=GETATTR _value13 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 88($sp)
lw $t0, 92($sp)		##_value16=GETATTR _value14 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 84($sp)
lw $t1, 88($sp)		##_value9=_value15==_value16
lw $t2, 84($sp)
seq $t0, $t1, $t2
sw $t0, 112($sp)
la $t0, heap		##_value17=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 80($sp)
lw $t0, 80($sp)		##SETATTR _value17 Bool_x _value9
addi $t0, $t0, 8
lw $t1, 112($sp)
sw $t1, ($t0)
la $t0, heap		##_value18=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 76($sp)
lw $t0, 76($sp)		##SETATTR _value18 Int_x 496
addi $t0, $t0, 8
li $t1, 496
sw $t1, ($t0)
lw $t0, 152($sp)		##_Type34= TYPEOF self
sw $t0, 72($sp)
lw $t0, 152($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 80($sp)		##arg _value17
sw $t0, -12($sp)
lw $t0, 76($sp)		##arg _value18
sw $t0, -16($sp)
lw $t0, 72($sp)		##_value20=VCALL _Type34 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 68($sp)
la $t0, heap		##_value21=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 64($sp)
lw $t0, 64($sp)		##SETATTR _value21 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 148($sp)		##_Type41= TYPEOF c
sw $t0, 60($sp)
lw $t1, 60($sp)		##_isVoid42=_Type41!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 56($sp)
lw $t1, 56($sp)		##if _isVoid42 goto Continue_43_Blah_bigAttrAccess
beq $t1, 1, Continue_43_Blah_bigAttrAccess
la $t0, s106		##_value24= LOAD s106
sw $t0, 52($sp)
lw $a0, 52($sp)		##out_str _value24
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_43_Blah_bigAttrAccess:		##Continue_43_Blah_bigAttrAccess:
lw $t0, 148($sp)		##arg c
sw $t0, -8($sp)
lw $t0, 64($sp)		##arg _value21
sw $t0, -12($sp)
lw $t0, 60($sp)		##_value25=VCALL _Type41 C2_setX
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,20
lw $t0,($t0)
jalr $t0
sw $v0, 48($sp)
lw $t0, 148($sp)		##_Type51= TYPEOF c
sw $t0, 40($sp)
lw $t1, 40($sp)		##_isVoid52=_Type51!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 36($sp)
lw $t1, 36($sp)		##if _isVoid52 goto Continue_53_Blah_bigAttrAccess
beq $t1, 1, Continue_53_Blah_bigAttrAccess
la $t0, s107		##_value29= LOAD s107
sw $t0, 32($sp)
lw $a0, 32($sp)		##out_str _value29
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_53_Blah_bigAttrAccess:		##Continue_53_Blah_bigAttrAccess:
lw $t0, 148($sp)		##arg c
sw $t0, -8($sp)
lw $t0, 40($sp)		##_value30=VCALL _Type51 C2_getX
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 28($sp)
la $t0, heap		##_value31=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 24($sp)
lw $t0, 24($sp)		##SETATTR _value31 Int_x 5
addi $t0, $t0, 8
li $t1, 5
sw $t1, ($t0)
lw $t0, 28($sp)		##_value32=GETATTR _value30 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 20($sp)
lw $t0, 24($sp)		##_value33=GETATTR _value31 Int_x
addi $t0, $t0, 8
lw $t0, ($t0)
sw $t0, 16($sp)
lw $t1, 20($sp)		##_value26=_value32==_value33
lw $t2, 16($sp)
seq $t0, $t1, $t2
sw $t0, 44($sp)
la $t0, heap		##_value34=ALLOCATE Bool
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Bool_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 12($sp)
lw $t0, 12($sp)		##SETATTR _value34 Bool_x _value26
addi $t0, $t0, 8
lw $t1, 44($sp)
sw $t1, ($t0)
la $t0, heap		##_value35=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 8($sp)
lw $t0, 8($sp)		##SETATTR _value35 Int_x 498
addi $t0, $t0, 8
li $t1, 498
sw $t1, ($t0)
lw $t0, 152($sp)		##_Type69= TYPEOF self
sw $t0, 4($sp)
lw $t0, 152($sp)		##arg self
sw $t0, -8($sp)
lw $t0, 12($sp)		##arg _value34
sw $t0, -12($sp)
lw $t0, 8($sp)		##arg _value35
sw $t0, -16($sp)
lw $t0, 4($sp)		##_value37=VCALL _Type69 Blah_assert
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,100
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 156($sp)		##return _value37
lw $v0, 0($sp)
addi $sp, $sp 160
jr $ra


A_e:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


A_f:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


A_g:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


A_i:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


A_j:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


B_e:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


B_g:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


B_h:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


B_k:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


C_e:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


C_h:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


C_i:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


C_ell:
sub $sp, $sp, 12
sw $ra, 8($sp)
##		4($sp)	self
li $t0, 0
sw $t0, 0($sp)		##_value0
la $t0, heap		##_value0=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 0($sp)
lw $t0, 0($sp)		##SETATTR _value0 Int_x 0
addi $t0, $t0, 8
li $t1, 0
sw $t1, ($t0)
lw $ra, 8($sp)		##return _value0
lw $v0, 0($sp)
addi $sp, $sp 12
jr $ra


Main_main:
sub $sp, $sp, 260
sw $ra, 256($sp)
##		252($sp)	self
li $t0, 0
sw $t0, 248($sp)		##io
sw $t0, 244($sp)		##_value1
sw $t0, 240($sp)		##b
sw $t0, 236($sp)		##_value3
sw $t0, 232($sp)		##_value4
sw $t0, 228($sp)		##_value5
sw $t0, 224($sp)		##_Type7
sw $t0, 220($sp)		##_isVoid8
sw $t0, 216($sp)		##_value8
sw $t0, 212($sp)		##_value9
sw $t0, 208($sp)		##_value10
sw $t0, 204($sp)		##_value11
sw $t0, 200($sp)		##_Type20
sw $t0, 196($sp)		##_isVoid21
sw $t0, 192($sp)		##_value14
sw $t0, 188($sp)		##_value15
sw $t0, 184($sp)		##_value16
sw $t0, 180($sp)		##_value17
sw $t0, 176($sp)		##_Type33
sw $t0, 172($sp)		##_isVoid34
sw $t0, 168($sp)		##_value20
sw $t0, 164($sp)		##_value21
sw $t0, 160($sp)		##i
sw $t0, 156($sp)		##_value23
sw $t0, 152($sp)		##_value24
sw $t0, 148($sp)		##_value25
sw $t0, 144($sp)		##_Type49
sw $t0, 140($sp)		##_isVoid50
sw $t0, 136($sp)		##_value28
sw $t0, 132($sp)		##_value29
sw $t0, 128($sp)		##_Type59
sw $t0, 124($sp)		##_isVoid60
sw $t0, 120($sp)		##_value32
sw $t0, 116($sp)		##_value33
sw $t0, 112($sp)		##_value34
sw $t0, 108($sp)		##_value35
sw $t0, 104($sp)		##_Type72
sw $t0, 100($sp)		##_isVoid73
sw $t0, 96($sp)		##_value38
sw $t0, 92($sp)		##_value39
sw $t0, 88($sp)		##_value40
sw $t0, 84($sp)		##_value41
sw $t0, 80($sp)		##_Type85
sw $t0, 76($sp)		##_isVoid86
sw $t0, 72($sp)		##_value44
sw $t0, 68($sp)		##_value45
sw $t0, 64($sp)		##_value46
sw $t0, 60($sp)		##_value47
sw $t0, 56($sp)		##_value48
sw $t0, 52($sp)		##_Type100
sw $t0, 48($sp)		##_isVoid101
sw $t0, 44($sp)		##_value51
sw $t0, 40($sp)		##_value52
sw $t0, 36($sp)		##_Type110
sw $t0, 32($sp)		##_isVoid111
sw $t0, 28($sp)		##_value55
sw $t0, 24($sp)		##_value56
sw $t0, 20($sp)		##_value57
sw $t0, 16($sp)		##_value58
sw $t0, 12($sp)		##_Type122
sw $t0, 8($sp)		##_isVoid123
sw $t0, 4($sp)		##_value61
sw $t0, 0($sp)		##_value62
jal IO_Init		##_value1=CALL IO_Init
sw $v0, 244($sp)
lw $t1, 244($sp)		##io=_value1
sw $t1, 248($sp)
jal void_Init		##_value3=CALL void_Init
sw $v0, 236($sp)
lw $t1, 236($sp)		##b=_value3
sw $t1, 240($sp)
la $t0, s108		##_value4= LOAD s108
sw $t0, 232($sp)
la $t0, heap		##_value5=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 228($sp)
lw $t0, 228($sp)		##SETATTR _value5 String_x _value4
addi $t0, $t0, 8
lw $t1, 232($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type7= TYPEOF io
sw $t0, 224($sp)
lw $t1, 224($sp)		##_isVoid8=_Type7!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 220($sp)
lw $t1, 220($sp)		##if _isVoid8 goto Continue_9_Main_main
beq $t1, 1, Continue_9_Main_main
la $t0, s109		##_value8= LOAD s109
sw $t0, 216($sp)
lw $a0, 216($sp)		##out_str _value8
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_9_Main_main:		##Continue_9_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 228($sp)		##arg _value5
sw $t0, -12($sp)
jal IO_out_string		##_value9=CALL IO_out_string
sw $v0, 212($sp)
la $t0, s110		##_value10= LOAD s110
sw $t0, 208($sp)
la $t0, heap		##_value11=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 204($sp)
lw $t0, 204($sp)		##SETATTR _value11 String_x _value10
addi $t0, $t0, 8
lw $t1, 208($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type20= TYPEOF io
sw $t0, 200($sp)
lw $t1, 200($sp)		##_isVoid21=_Type20!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 196($sp)
lw $t1, 196($sp)		##if _isVoid21 goto Continue_22_Main_main
beq $t1, 1, Continue_22_Main_main
la $t0, s111		##_value14= LOAD s111
sw $t0, 192($sp)
lw $a0, 192($sp)		##out_str _value14
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_22_Main_main:		##Continue_22_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 204($sp)		##arg _value11
sw $t0, -12($sp)
lw $t0, 200($sp)		##_value15=VCALL _Type20 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 188($sp)
la $t0, s112		##_value16= LOAD s112
sw $t0, 184($sp)
la $t0, heap		##_value17=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 180($sp)
lw $t0, 180($sp)		##SETATTR _value17 String_x _value16
addi $t0, $t0, 8
lw $t1, 184($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type33= TYPEOF io
sw $t0, 176($sp)
lw $t1, 176($sp)		##_isVoid34=_Type33!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 172($sp)
lw $t1, 172($sp)		##if _isVoid34 goto Continue_35_Main_main
beq $t1, 1, Continue_35_Main_main
la $t0, s113		##_value20= LOAD s113
sw $t0, 168($sp)
lw $a0, 168($sp)		##out_str _value20
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_35_Main_main:		##Continue_35_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 180($sp)		##arg _value17
sw $t0, -12($sp)
jal IO_out_string		##_value21=CALL IO_out_string
sw $v0, 164($sp)
la $t0, heap		##_value23=ALLOCATE Int
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_Int_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 156($sp)
lw $t0, 156($sp)		##SETATTR _value23 Int_x 3
addi $t0, $t0, 8
li $t1, 3
sw $t1, ($t0)
lw $t1, 156($sp)		##i=_value23
sw $t1, 160($sp)
la $t0, s114		##_value24= LOAD s114
sw $t0, 152($sp)
la $t0, heap		##_value25=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 148($sp)
lw $t0, 148($sp)		##SETATTR _value25 String_x _value24
addi $t0, $t0, 8
lw $t1, 152($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type49= TYPEOF io
sw $t0, 144($sp)
lw $t1, 144($sp)		##_isVoid50=_Type49!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 140($sp)
lw $t1, 140($sp)		##if _isVoid50 goto Continue_51_Main_main
beq $t1, 1, Continue_51_Main_main
la $t0, s115		##_value28= LOAD s115
sw $t0, 136($sp)
lw $a0, 136($sp)		##out_str _value28
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_51_Main_main:		##Continue_51_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 148($sp)		##arg _value25
sw $t0, -12($sp)
jal IO_out_string		##_value29=CALL IO_out_string
sw $v0, 132($sp)
lw $t0, 248($sp)		##_Type59= TYPEOF io
sw $t0, 128($sp)
lw $t1, 128($sp)		##_isVoid60=_Type59!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 124($sp)
lw $t1, 124($sp)		##if _isVoid60 goto Continue_61_Main_main
beq $t1, 1, Continue_61_Main_main
la $t0, s116		##_value32= LOAD s116
sw $t0, 120($sp)
lw $a0, 120($sp)		##out_str _value32
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_61_Main_main:		##Continue_61_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 160($sp)		##arg i
sw $t0, -12($sp)
jal IO_out_int		##_value33=CALL IO_out_int
sw $v0, 116($sp)
la $t0, s117		##_value34= LOAD s117
sw $t0, 112($sp)
la $t0, heap		##_value35=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 108($sp)
lw $t0, 108($sp)		##SETATTR _value35 String_x _value34
addi $t0, $t0, 8
lw $t1, 112($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type72= TYPEOF io
sw $t0, 104($sp)
lw $t1, 104($sp)		##_isVoid73=_Type72!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 100($sp)
lw $t1, 100($sp)		##if _isVoid73 goto Continue_74_Main_main
beq $t1, 1, Continue_74_Main_main
la $t0, s118		##_value38= LOAD s118
sw $t0, 96($sp)
lw $a0, 96($sp)		##out_str _value38
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_74_Main_main:		##Continue_74_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 108($sp)		##arg _value35
sw $t0, -12($sp)
jal IO_out_string		##_value39=CALL IO_out_string
sw $v0, 92($sp)
la $t0, s119		##_value40= LOAD s119
sw $t0, 88($sp)
la $t0, heap		##_value41=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 84($sp)
lw $t0, 84($sp)		##SETATTR _value41 String_x _value40
addi $t0, $t0, 8
lw $t1, 88($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type85= TYPEOF io
sw $t0, 80($sp)
lw $t1, 80($sp)		##_isVoid86=_Type85!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 76($sp)
lw $t1, 76($sp)		##if _isVoid86 goto Continue_87_Main_main
beq $t1, 1, Continue_87_Main_main
la $t0, s120		##_value44= LOAD s120
sw $t0, 72($sp)
lw $a0, 72($sp)		##out_str _value44
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_87_Main_main:		##Continue_87_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 84($sp)		##arg _value41
sw $t0, -12($sp)
lw $t0, 80($sp)		##_value45=VCALL _Type85 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 68($sp)
jal Blah_Init		##_value46=CALL Blah_Init
sw $v0, 64($sp)
lw $t1, 64($sp)		##b=_value46
sw $t1, 240($sp)
la $t0, s121		##_value47= LOAD s121
sw $t0, 60($sp)
la $t0, heap		##_value48=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 56($sp)
lw $t0, 56($sp)		##SETATTR _value48 String_x _value47
addi $t0, $t0, 8
lw $t1, 60($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type100= TYPEOF io
sw $t0, 52($sp)
lw $t1, 52($sp)		##_isVoid101=_Type100!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 48($sp)
lw $t1, 48($sp)		##if _isVoid101 goto Continue_102_Main_main
beq $t1, 1, Continue_102_Main_main
la $t0, s122		##_value51= LOAD s122
sw $t0, 44($sp)
lw $a0, 44($sp)		##out_str _value51
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_102_Main_main:		##Continue_102_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 56($sp)		##arg _value48
sw $t0, -12($sp)
lw $t0, 52($sp)		##_value52=VCALL _Type100 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 40($sp)
lw $t0, 240($sp)		##_Type110= TYPEOF b
sw $t0, 36($sp)
lw $t1, 36($sp)		##_isVoid111=_Type110!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 32($sp)
lw $t1, 32($sp)		##if _isVoid111 goto Continue_112_Main_main
beq $t1, 1, Continue_112_Main_main
la $t0, s123		##_value55= LOAD s123
sw $t0, 28($sp)
lw $a0, 28($sp)		##out_str _value55
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_112_Main_main:		##Continue_112_Main_main:
lw $t0, 240($sp)		##arg b
sw $t0, -8($sp)
lw $t0, 36($sp)		##_value56=VCALL _Type110 Blah_doThemAll
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,80
lw $t0,($t0)
jalr $t0
sw $v0, 24($sp)
la $t0, s124		##_value57= LOAD s124
sw $t0, 20($sp)
la $t0, heap		##_value58=ALLOCATE String
lw $t1, heapPointer
add $t0, $t0, $t1
move $v0, $t0
la $t2, type_String_name
sw $t2, ($t0)
add $t0, $t0, 4
li $t2, 1
sw $t2, ($t0)
addi $t1, $t1, 12
sw $t1, heapPointer
sw $v0, 16($sp)
lw $t0, 16($sp)		##SETATTR _value58 String_x _value57
addi $t0, $t0, 8
lw $t1, 20($sp)
sw $t1, ($t0)
lw $t0, 248($sp)		##_Type122= TYPEOF io
sw $t0, 12($sp)
lw $t1, 12($sp)		##_isVoid123=_Type122!=void
lw $t1, ($t1)
la $t2, type_void_name
sne $t0, $t1, $t2
sw $t0, 8($sp)
lw $t1, 8($sp)		##if _isVoid123 goto Continue_124_Main_main
beq $t1, 1, Continue_124_Main_main
la $t0, s125		##_value61= LOAD s125
sw $t0, 4($sp)
lw $a0, 4($sp)		##out_str _value61
li $v0, 4
syscall
la $a0, newLine
li $v0, 4
syscall
eret		##halt
Continue_124_Main_main:		##Continue_124_Main_main:
lw $t0, 248($sp)		##arg io
sw $t0, -8($sp)
lw $t0, 16($sp)		##arg _value58
sw $t0, -12($sp)
lw $t0, 12($sp)		##_value62=VCALL _Type122 IO_out_string
lw $t0, ($t0)
add $t0,$t0,-8
lw $t1, ($t0)
mul $t1,$t1,-4
add $t0, $t0, $t1
add $t0,$t0,16
lw $t0,($t0)
jalr $t0
sw $v0, 0($sp)
lw $ra, 256($sp)		##return _value62
lw $v0, 0($sp)
addi $sp, $sp 260
jr $ra


equalFunctionStart:
beqz $a0, equalCheckZero
bnez $a1, loop_StrComp
li $v0, 0
jr $ra
loop_StrComp:
lb $t0, ($a0)
lb $t1, ($a1)
bne $t0,$t1, strComp_false
beqz $t0, strComp_true
addi $a0,$a0,1
addi $a1,$a1,1
j loop_StrComp
strComp_true:
li $v0, 1
jr $ra
strComp_false:
li $v0, 0
jr $ra
equalCheckZero:
seq $v0, $a1, 0
jr $ra


conformFunctionStart:
move $v1,$ra
ll_loop:
move $a2, $a1
addi $a1, $a1, 4
jal equalFunctionStart
move $a1, $a2
bnez  $v0, ll_true
lw $a1,($a1)
beqz $a1, ll_false
j ll_loop
ll_true:
li $v0, 0
jr $v1
ll_false:
li $v0, 1
jr $v1


lengthFunctionStart:
li $v0, 0
lengthLoad:
lb $t1, ($t0)
beqz $t1, lengthReturn
add $t0, $t0, 1
add $v0, $v0, 1
j lengthLoad
lengthReturn:
jr $ra


concatFunctionStart:
la $t3, heap
lw $t4, heapPointer
lw $t5, heapPointer
add $t4, $t4, $t3
move $v0, $t4
concatFunctionFirst:
lb $a0, ($t0)
beqz $a0, concatFunctionSecond
sb $a0, ($t4)
addi $t4, $t4, 1
addi $t5, $t5, 1
addi $t0, $t0, 1
j concatFunctionFirst
concatFunctionSecond:
lb $a0, ($t1)
beqz $a0, concatFunctionEnd
sb $a0, ($t4)
addi $t4, $t4, 1
addi $t5, $t5, 1
addi $t1, $t1, 1
j concatFunctionSecond
concatFunctionEnd:
sb $zero, ($t4)
addi $t5, $t5, 1
rem $t6, $t5, 4
neg $t6, $t6
add $t6, $t6, 4
add $t5, $t5, $t6
sb $t5, heapPointer
jr $ra
substrFunctionStart:
la $t3, heap
lw $t4, heapPointer
lw $t5, heapPointer
add $t4, $t4, $t3
move $v0, $t4
add $t0, $t0, $t1
move $v0, $t4
substrFunctionLoop:
lb $a0, 0($t0)
beqz $t2, substrFunctionFin  #llego al final del substr
addi $t2, $t2, -1
beqz $a0, substrFunctionFin 	# encontro el fin del str
sb $a0,  0($t4)
addi $t4, $t4, 1
addi $t5, $t5, 1
addi $t0, $t0, 1
j substrFunctionLoop
substrFunctionFin:
sb $zero, ($t4)
addi $t5, $t5, 1
rem $t6, $t5, 4
neg $t6, $t6
add $t6, $t6, 4
add $t5, $t5, $t6
sb $t5, heapPointer
# lw $ra, ($sp)
jr $ra
